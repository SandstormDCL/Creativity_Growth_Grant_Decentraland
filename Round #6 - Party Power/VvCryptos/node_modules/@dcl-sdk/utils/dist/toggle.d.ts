import { Entity, IEngine } from '@dcl/sdk/ecs';
import { Timers } from './timer';
export declare enum ToggleState {
    Off = 0,
    On = 1
}
export type ToggleCallback = (state: ToggleState) => void;
export type Toggles = ReturnType<typeof createToggles>;
declare function createToggles(targetEngine: IEngine, timers: Timers): {
    addToggle(entity: Entity, state: ToggleState, callback?: ToggleCallback): void;
    removeToggle(entity: Entity): void;
    setCallback(entity: Entity, callback?: ToggleCallback): void;
    set(entity: Entity, state: ToggleState): void;
    flip(entity: Entity): void;
    isOn(entity: Entity): boolean;
};
export declare const toggles: {
    addToggle(entity: Entity, state: ToggleState, callback?: ToggleCallback): void;
    removeToggle(entity: Entity): void;
    setCallback(entity: Entity, callback?: ToggleCallback): void;
    set(entity: Entity, state: ToggleState): void;
    flip(entity: Entity): void;
    isOn(entity: Entity): boolean;
};
export {};
