"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.manaTokenAbi = exports.poisAbi = exports.nameDenyListAbi = exports.checkerAbi = exports.catalystAbi = exports.estateAbi = exports.landAbi = exports.registrarAbi = exports.listAbi = void 0;
exports.listAbi = [
    {
        constant: true,
        inputs: [],
        name: 'ADD_ROLE',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'hasInitialized',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_script',
                type: 'bytes'
            }
        ],
        name: 'getEVMScriptExecutor',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getRecoveryVault',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'REMOVE_ROLE',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        name: 'values',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: 'token',
                type: 'address'
            }
        ],
        name: 'allowRecoverability',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_value',
                type: 'string'
            }
        ],
        name: 'remove',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'appId',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getInitializationBlock',
        outputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getTypeHash',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'listType',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'size',
        outputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_index',
                type: 'uint256'
            }
        ],
        name: 'get',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_token',
                type: 'address'
            }
        ],
        name: 'transferToVault',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_sender',
                type: 'address'
            },
            {
                name: '_role',
                type: 'bytes32'
            },
            {
                name: '_params',
                type: 'uint256[]'
            }
        ],
        name: 'canPerform',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getEVMScriptRegistry',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_name',
                type: 'string'
            },
            {
                name: '_symbol',
                type: 'string'
            },
            {
                name: '_type',
                type: 'string'
            }
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_value',
                type: 'string'
            }
        ],
        name: 'add',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'kernel',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'isPetrified',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: '_caller',
                type: 'address'
            },
            {
                indexed: false,
                name: '_value',
                type: 'string'
            }
        ],
        name: 'Add',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: '_caller',
                type: 'address'
            },
            {
                indexed: false,
                name: '_value',
                type: 'string'
            }
        ],
        name: 'Remove',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'executor',
                type: 'address'
            },
            {
                indexed: false,
                name: 'script',
                type: 'bytes'
            },
            {
                indexed: false,
                name: 'input',
                type: 'bytes'
            },
            {
                indexed: false,
                name: 'returnData',
                type: 'bytes'
            }
        ],
        name: 'ScriptResult',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'vault',
                type: 'address'
            },
            {
                indexed: true,
                name: 'token',
                type: 'address'
            },
            {
                indexed: false,
                name: 'amount',
                type: 'uint256'
            }
        ],
        name: 'RecoverToVault',
        type: 'event'
    }
];
exports.registrarAbi = [
    {
        inputs: [
            { internalType: 'contract IENSRegistry', name: '_registry', type: 'address' },
            { internalType: 'contract IBaseRegistrar', name: '_base', type: 'address' },
            { internalType: 'string', name: '_topdomain', type: 'string' },
            { internalType: 'string', name: '_domain', type: 'string' },
            { internalType: 'string', name: '_baseURI', type: 'string' }
        ],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'approved', type: 'address' },
            { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' }
        ],
        name: 'Approval',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
            { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' }
        ],
        name: 'ApprovalForAll',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, internalType: 'string', name: '_oldBaseURI', type: 'string' },
            { indexed: false, internalType: 'string', name: '_newBaseURI', type: 'string' }
        ],
        name: 'BaseURI',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'contract IBaseRegistrar', name: '_previousBase', type: 'address' },
            { indexed: true, internalType: 'contract IBaseRegistrar', name: '_newBase', type: 'address' }
        ],
        name: 'BaseUpdated',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_resolver', type: 'address' },
            { indexed: false, internalType: 'bytes', name: '_data', type: 'bytes' },
            { indexed: false, internalType: 'bytes', name: 'res', type: 'bytes' }
        ],
        name: 'CallForwarwedToResolver',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, internalType: 'address', name: '_controller', type: 'address' }],
        name: 'ControllerAdded',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, internalType: 'address', name: '_controller', type: 'address' }],
        name: 'ControllerRemoved',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
        name: 'DomainReclaimed',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_newOwner', type: 'address' },
            { indexed: true, internalType: 'uint256', name: '_tokenId', type: 'uint256' }
        ],
        name: 'DomainTransferred',
        type: 'event'
    },
    { anonymous: false, inputs: [], name: 'MigrationFinished', type: 'event' },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_caller', type: 'address' },
            { indexed: true, internalType: 'address', name: '_beneficiary', type: 'address' },
            { indexed: true, internalType: 'bytes32', name: '_labelHash', type: 'bytes32' },
            { indexed: false, internalType: 'string', name: '_subdomain', type: 'string' },
            { indexed: false, internalType: 'uint256', name: '_createdDate', type: 'uint256' }
        ],
        name: 'NameRegistered',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' }
        ],
        name: 'OwnershipTransferred',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_caller', type: 'address' },
            { indexed: true, internalType: 'address', name: '_owner', type: 'address' },
            { indexed: true, internalType: 'uint256', name: '_tokenId', type: 'uint256' }
        ],
        name: 'Reclaimed',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'contract IENSRegistry', name: '_previousRegistry', type: 'address' },
            { indexed: true, internalType: 'contract IENSRegistry', name: '_newRegistry', type: 'address' }
        ],
        name: 'RegistryUpdated',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_oldResolver', type: 'address' },
            { indexed: true, internalType: 'address', name: '_newResolver', type: 'address' }
        ],
        name: 'ResolverUpdated',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'from', type: 'address' },
            { indexed: true, internalType: 'address', name: 'to', type: 'address' },
            { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        constant: true,
        inputs: [],
        name: 'ERC721_RECEIVED',
        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'controller', type: 'address' }],
        name: 'addController',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'to', type: 'address' },
            { internalType: 'uint256', name: 'tokenId', type: 'uint256' }
        ],
        name: 'approve',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'string', name: '_subdomain', type: 'string' }],
        name: 'available',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'base',
        outputs: [{ internalType: 'contract IBaseRegistrar', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'baseURI',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'address', name: '', type: 'address' }],
        name: 'controllers',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'domain',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'domainNameHash',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'bytes', name: '_data', type: 'bytes' }],
        name: 'forwardToResolver',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
        name: 'getApproved',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'string', name: '_subdomain', type: 'string' }],
        name: 'getOwnerOf',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'string', name: '_subdomain', type: 'string' }],
        name: 'getTokenId',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { internalType: 'address', name: 'owner', type: 'address' },
            { internalType: 'address', name: 'operator', type: 'address' }
        ],
        name: 'isApprovedForAll',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'bytes32[]', name: '_names', type: 'bytes32[]' },
            { internalType: 'address[]', name: '_beneficiaries', type: 'address[]' },
            { internalType: 'uint256[]', name: '_createdDates', type: 'uint256[]' }
        ],
        name: 'migrateNames',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'migrated',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'migrationFinished',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'uint256', name: '_tokenId', type: 'uint256' },
            { internalType: 'bytes', name: '', type: 'bytes' }
        ],
        name: 'onERC721Received',
        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
        name: 'ownerOf',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'uint256', name: '_tokenId', type: 'uint256' },
            { internalType: 'address', name: '_owner', type: 'address' }
        ],
        name: 'reclaim',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
        name: 'reclaim',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
        name: 'reclaimDomain',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'string', name: '_subdomain', type: 'string' },
            { internalType: 'address', name: '_beneficiary', type: 'address' }
        ],
        name: 'register',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ internalType: 'contract IENSRegistry', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'controller', type: 'address' }],
        name: 'removeController',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            { internalType: 'uint256', name: 'tokenId', type: 'uint256' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
            { internalType: 'bytes', name: '_data', type: 'bytes' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'to', type: 'address' },
            { internalType: 'bool', name: 'approved', type: 'bool' }
        ],
        name: 'setApprovalForAll',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: '_resolver', type: 'address' }],
        name: 'setResolver',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        name: 'subdomains',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'tokenByIndex',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { internalType: 'address', name: 'owner', type: 'address' },
            { internalType: 'uint256', name: 'index', type: 'uint256' }
        ],
        name: 'tokenOfOwnerByIndex',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
        name: 'tokenURI',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'topdomain',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'topdomainNameHash',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'totalSupply',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: '_owner', type: 'address' },
            { internalType: 'uint256', name: '_tokenId', type: 'uint256' }
        ],
        name: 'transferDomainOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: 'from', type: 'address' },
            { internalType: 'address', name: 'to', type: 'address' },
            { internalType: 'uint256', name: 'tokenId', type: 'uint256' }
        ],
        name: 'transferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'contract IBaseRegistrar', name: '_base', type: 'address' }],
        name: 'updateBase',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'string', name: '_baseURI', type: 'string' }],
        name: 'updateBaseURI',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ internalType: 'contract IENSRegistry', name: '_registry', type: 'address' }],
        name: 'updateRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    }
];
exports.landAbi = [
    {
        constant: true,
        inputs: [{ name: '_interfaceID', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'proxyOwner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '', type: 'address' },
            { name: '', type: 'address' }
        ],
        name: 'updateManager',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'assetId', type: 'uint256' }],
        name: 'getApproved',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'operator', type: 'address' },
            { name: 'assetId', type: 'uint256' }
        ],
        name: 'approve',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' }
        ],
        name: 'ownerOfLand',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'user', type: 'address' }],
        name: 'setLatestToNow',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'totalSupply',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'unregisterBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' },
            { name: 'beneficiary', type: 'address' }
        ],
        name: 'assignNewParcel',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' }
        ],
        name: 'ownerOfLandMany',
        outputs: [{ name: '', type: 'address[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'latestPing',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'data', type: 'string' }
        ],
        name: 'updateManyLandData',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'from', type: 'address' },
            { name: 'to', type: 'address' },
            { name: 'assetId', type: 'uint256' }
        ],
        name: 'transferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'operator', type: 'address' },
            { name: 'assetId', type: 'uint256' }
        ],
        name: 'isAuthorized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'authorizedDeploy',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'owner', type: 'address' },
            { name: 'index', type: 'uint256' }
        ],
        name: 'tokenOfOwnerByIndex',
        outputs: [{ name: 'assetId', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'decimals',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'pure',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'beneficiary', type: 'address' }],
        name: 'authorizeDeploy',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' },
            { name: 'to', type: 'address' }
        ],
        name: 'transferLand',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'from', type: 'address' },
            { name: 'to', type: 'address' },
            { name: 'assetId', type: 'uint256' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '', type: 'bytes' }],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' }
        ],
        name: 'landData',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'to', type: 'address' }
        ],
        name: 'transferManyLand',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'assetId', type: 'uint256' }],
        name: 'exists',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'owner', type: 'address' }],
        name: 'tokensOf',
        outputs: [{ name: '', type: 'uint256[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'ping',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'registeredBalance',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_newLandBalance', type: 'address' }],
        name: 'setLandBalanceToken',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'assetId', type: 'uint256' }],
        name: 'ownerOf',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'GET_METADATA',
        outputs: [{ name: '', type: 'bytes4' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'operator', type: 'address' },
            { name: 'assetId', type: 'uint256' }
        ],
        name: 'isUpdateAuthorized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'assetId', type: 'uint256' }],
        name: 'tokenMetadata',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' }
        ],
        name: 'encodeTokenId',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'pure',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'owner', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'currentContract',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_assetIds', type: 'uint256[]' },
            { name: '_operator', type: 'address' }
        ],
        name: 'setManyUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'description',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'value', type: 'uint256' }],
        name: 'decodeTokenId',
        outputs: [
            { name: '', type: 'int256' },
            { name: '', type: 'int256' }
        ],
        payable: false,
        stateMutability: 'pure',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'landBalance',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'beneficiary', type: 'address' }
        ],
        name: 'assignMultipleParcels',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'beneficiary', type: 'address' },
            { name: 'metadata', type: 'string' }
        ],
        name: 'createEstateWithMetadata',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'owner', type: 'address' }],
        name: 'landOf',
        outputs: [
            { name: '', type: 'int256[]' },
            { name: '', type: 'int256[]' }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'registry', type: 'address' }],
        name: 'setEstateRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'updateOperator',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'operator', type: 'address' },
            { name: 'authorized', type: 'bool' }
        ],
        name: 'setApprovalForAll',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' }
        ],
        name: 'exists',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'assetId', type: 'uint256' },
            { name: 'operator', type: 'address' }
        ],
        name: 'setUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'from', type: 'address' },
            { name: 'to', type: 'address' },
            { name: 'assetId', type: 'uint256' },
            { name: 'userData', type: 'bytes' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'registerBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'beneficiary', type: 'address' }
        ],
        name: 'createEstate',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' },
            { name: 'data', type: 'string' }
        ],
        name: 'updateLandData',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'estateRegistry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'assetHolder', type: 'address' },
            { name: 'operator', type: 'address' }
        ],
        name: 'isApprovedForAll',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'assetId', type: 'uint256' }],
        name: 'getApprovedAddress',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_owner', type: 'address' },
            { name: '_operator', type: 'address' },
            { name: '_approved', type: 'bool' }
        ],
        name: 'setUpdateManager',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256[]' },
            { name: 'y', type: 'int256[]' },
            { name: 'estateId', type: 'uint256' }
        ],
        name: 'transferManyLandToEstate',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'x', type: 'int256' },
            { name: 'y', type: 'int256' },
            { name: 'estateId', type: 'uint256' }
        ],
        name: 'transferLandToEstate',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'beneficiary', type: 'address' }],
        name: 'forbidDeploy',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'registry', type: 'address' }],
        name: 'EstateRegistrySet',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'assetId', type: 'uint256' },
            { indexed: true, name: 'holder', type: 'address' },
            { indexed: true, name: 'operator', type: 'address' },
            { indexed: false, name: 'data', type: 'string' }
        ],
        name: 'Update',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'assetId', type: 'uint256' },
            { indexed: true, name: 'operator', type: 'address' }
        ],
        name: 'UpdateOperator',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_owner', type: 'address' },
            { indexed: true, name: '_operator', type: 'address' },
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: false, name: '_approved', type: 'bool' }
        ],
        name: 'UpdateManager',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: true, name: '_deployer', type: 'address' }
        ],
        name: 'DeployAuthorized',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: true, name: '_deployer', type: 'address' }
        ],
        name: 'DeployForbidden',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_previousLandBalance', type: 'address' },
            { indexed: true, name: '_newLandBalance', type: 'address' }
        ],
        name: 'SetLandBalanceToken',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'from', type: 'address' },
            { indexed: true, name: 'to', type: 'address' },
            { indexed: true, name: 'assetId', type: 'uint256' },
            { indexed: false, name: 'operator', type: 'address' },
            { indexed: false, name: 'userData', type: 'bytes' },
            { indexed: false, name: 'operatorData', type: 'bytes' }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'from', type: 'address' },
            { indexed: true, name: 'to', type: 'address' },
            { indexed: true, name: 'assetId', type: 'uint256' },
            { indexed: false, name: 'operator', type: 'address' },
            { indexed: false, name: 'userData', type: 'bytes' }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'from', type: 'address' },
            { indexed: true, name: 'to', type: 'address' },
            { indexed: true, name: 'assetId', type: 'uint256' }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'holder', type: 'address' },
            { indexed: true, name: 'operator', type: 'address' },
            { indexed: false, name: 'authorized', type: 'bool' }
        ],
        name: 'ApprovalForAll',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'owner', type: 'address' },
            { indexed: true, name: 'operator', type: 'address' },
            { indexed: true, name: 'assetId', type: 'uint256' }
        ],
        name: 'Approval',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, name: '_prevOwner', type: 'address' },
            { indexed: false, name: '_newOwner', type: 'address' }
        ],
        name: 'OwnerUpdate',
        type: 'event'
    }
];
exports.estateAbi = [
    {
        constant: true,
        inputs: [{ name: '_interfaceId', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_name', type: 'string' },
            { name: '_symbol', type: 'string' },
            { name: '_registry', type: 'address' }
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '', type: 'address' },
            { name: '', type: 'address' }
        ],
        name: 'updateManager',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_tokenId', type: 'uint256' }],
        name: 'getApproved',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_to', type: 'address' },
            { name: '_tokenId', type: 'uint256' }
        ],
        name: 'approve',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'landIdEstate',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_operator', type: 'address' },
            { name: '_from', type: 'address' },
            { name: '_tokenId', type: 'uint256' },
            { name: '_data', type: 'bytes' }
        ],
        name: 'onERC721Received',
        outputs: [{ name: '', type: 'bytes4' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'estateId', type: 'uint256' }],
        name: 'getFingerprint',
        outputs: [{ name: 'result', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'totalSupply',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'unregisterBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'landId', type: 'uint256' },
            { name: 'operator', type: 'address' }
        ],
        name: 'setLandUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_from', type: 'address' },
            { name: '_to', type: 'address' },
            { name: '_tokenId', type: 'uint256' }
        ],
        name: 'transferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'landId', type: 'uint256' },
            { name: 'data', type: 'string' }
        ],
        name: 'updateLandData',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '_owner', type: 'address' },
            { name: '_index', type: 'uint256' }
        ],
        name: 'tokenOfOwnerByIndex',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'estateLandBalance',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' }
        ],
        name: 'estateLandIds',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_estateId', type: 'uint256' },
            { name: '_landIds', type: 'uint256[]' },
            { name: '_operator', type: 'address' }
        ],
        name: 'setManyLandUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'landIds', type: 'uint256[]' },
            { name: 'destinatary', type: 'address' }
        ],
        name: 'transferManyLands',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'landIds', type: 'uint256[]' },
            { name: 'data', type: 'string' }
        ],
        name: 'updateManyLandData',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_from', type: 'address' },
            { name: '_to', type: 'address' },
            { name: '_tokenId', type: 'uint256' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'setEstateLandBalanceToken',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_name', type: 'string' },
            { name: '_symbol', type: 'string' }
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_tokenId', type: 'uint256' }],
        name: 'exists',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_index', type: 'uint256' }],
        name: 'tokenByIndex',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_registry', type: 'address' }],
        name: 'setLANDRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'metadata', type: 'string' }
        ],
        name: 'updateMetadata',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'ping',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'registeredBalance',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_tokenId', type: 'uint256' }],
        name: 'ownerOf',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'operator', type: 'address' },
            { name: 'estateId', type: 'uint256' }
        ],
        name: 'isUpdateAuthorized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_owner', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_estateIds', type: 'uint256[]' },
            { name: '_operator', type: 'address' }
        ],
        name: 'setManyUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'from', type: 'address' },
            { name: 'to', type: 'address' },
            { name: 'estateIds', type: 'uint256[]' }
        ],
        name: 'safeTransferManyFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'fingerprint', type: 'bytes' }
        ],
        name: 'verifyFingerprint',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'updateOperator',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '', type: 'uint256' },
            { name: '', type: 'uint256' }
        ],
        name: 'estateLandIndex',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_to', type: 'address' },
            { name: '_approved', type: 'bool' }
        ],
        name: 'setApprovalForAll',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'landId', type: 'uint256' },
            { name: 'destinatary', type: 'address' }
        ],
        name: 'transferLand',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'estateId', type: 'uint256' }],
        name: 'getMetadata',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'estateId', type: 'uint256' },
            { name: 'operator', type: 'address' }
        ],
        name: 'setUpdateOperator',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_from', type: 'address' },
            { name: '_to', type: 'address' },
            { name: '_tokenId', type: 'uint256' },
            { name: '_data', type: 'bytes' }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'landId', type: 'uint256' }],
        name: 'getLandEstateId',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: 'contractName', type: 'string' },
            { name: 'migrationId', type: 'string' }
        ],
        name: 'isMigrated',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'registerBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_sender', type: 'address' }],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_tokenId', type: 'uint256' }],
        name: 'tokenURI',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'to', type: 'address' },
            { name: 'metadata', type: 'string' }
        ],
        name: 'mint',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_owner', type: 'address' }],
        name: 'getLANDsSize',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: 'from', type: 'address' },
            { name: 'to', type: 'address' },
            { name: 'estateIds', type: 'uint256[]' },
            { name: 'data', type: 'bytes' }
        ],
        name: 'safeTransferManyFrom',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '_owner', type: 'address' },
            { name: '_operator', type: 'address' }
        ],
        name: 'isApprovedForAll',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_owner', type: 'address' },
            { name: '_operator', type: 'address' },
            { name: '_approved', type: 'bool' }
        ],
        name: 'setUpdateManager',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'estateId', type: 'uint256' }],
        name: 'getEstateSize',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'previousOwner', type: 'address' },
            { indexed: true, name: 'newOwner', type: 'address' }
        ],
        name: 'OwnershipTransferred',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_from', type: 'address' },
            { indexed: true, name: '_to', type: 'address' },
            { indexed: true, name: '_tokenId', type: 'uint256' }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_owner', type: 'address' },
            { indexed: true, name: '_approved', type: 'address' },
            { indexed: true, name: '_tokenId', type: 'uint256' }
        ],
        name: 'Approval',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_owner', type: 'address' },
            { indexed: true, name: '_operator', type: 'address' },
            { indexed: false, name: '_approved', type: 'bool' }
        ],
        name: 'ApprovalForAll',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_owner', type: 'address' },
            { indexed: true, name: '_estateId', type: 'uint256' },
            { indexed: false, name: '_data', type: 'string' }
        ],
        name: 'CreateEstate',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_estateId', type: 'uint256' },
            { indexed: true, name: '_landId', type: 'uint256' }
        ],
        name: 'AddLand',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_estateId', type: 'uint256' },
            { indexed: true, name: '_landId', type: 'uint256' },
            { indexed: true, name: '_destinatary', type: 'address' }
        ],
        name: 'RemoveLand',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_assetId', type: 'uint256' },
            { indexed: true, name: '_holder', type: 'address' },
            { indexed: true, name: '_operator', type: 'address' },
            { indexed: false, name: '_data', type: 'string' }
        ],
        name: 'Update',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_estateId', type: 'uint256' },
            { indexed: true, name: '_operator', type: 'address' }
        ],
        name: 'UpdateOperator',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_owner', type: 'address' },
            { indexed: true, name: '_operator', type: 'address' },
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: false, name: '_approved', type: 'bool' }
        ],
        name: 'UpdateManager',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: '_registry', type: 'address' }],
        name: 'SetLANDRegistry',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_previousEstateLandBalance', type: 'address' },
            { indexed: true, name: '_newEstateLandBalance', type: 'address' }
        ],
        name: 'SetEstateLandBalanceToken',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, name: 'contractName', type: 'string' },
            { indexed: false, name: 'migrationId', type: 'string' }
        ],
        name: 'Migrated',
        type: 'event'
    }
];
exports.catalystAbi = [
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        name: 'owners',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'hasInitialized',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'catalystCount',
        outputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_script',
                type: 'bytes'
            }
        ],
        name: 'getEVMScriptExecutor',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getRecoveryVault',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        name: 'catalystIndexById',
        outputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_id',
                type: 'bytes32'
            }
        ],
        name: 'catalystOwner',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_id',
                type: 'bytes32'
            }
        ],
        name: 'catalystAddress',
        outputs: [
            {
                name: '',
                type: 'string'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        name: 'catalystIds',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: 'token',
                type: 'address'
            }
        ],
        name: 'allowRecoverability',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'appId',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getInitializationBlock',
        outputs: [
            {
                name: '',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_token',
                type: 'address'
            }
        ],
        name: 'transferToVault',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '_sender',
                type: 'address'
            },
            {
                name: '_role',
                type: 'bytes32'
            },
            {
                name: '_params',
                type: 'uint256[]'
            }
        ],
        name: 'canPerform',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getEVMScriptRegistry',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_id',
                type: 'bytes32'
            }
        ],
        name: 'removeCatalyst',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        name: 'addresss',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        name: 'catalystById',
        outputs: [
            {
                name: 'id',
                type: 'bytes32'
            },
            {
                name: 'owner',
                type: 'address'
            },
            {
                name: 'address',
                type: 'string'
            },
            {
                name: 'startTime',
                type: 'uint256'
            },
            {
                name: 'endTime',
                type: 'uint256'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            {
                name: '_owner',
                type: 'address'
            },
            {
                name: '_address',
                type: 'string'
            }
        ],
        name: 'addCatalyst',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'kernel',
        outputs: [
            {
                name: '',
                type: 'address'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'MODIFY_ROLE',
        outputs: [
            {
                name: '',
                type: 'bytes32'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'isPetrified',
        outputs: [
            {
                name: '',
                type: 'bool'
            }
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: '_id',
                type: 'bytes32'
            },
            {
                indexed: true,
                name: '_owner',
                type: 'address'
            },
            {
                indexed: false,
                name: '_address',
                type: 'string'
            }
        ],
        name: 'AddCatalyst',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: '_id',
                type: 'bytes32'
            },
            {
                indexed: true,
                name: '_owner',
                type: 'address'
            },
            {
                indexed: false,
                name: '_address',
                type: 'string'
            }
        ],
        name: 'RemoveCatalyst',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'executor',
                type: 'address'
            },
            {
                indexed: false,
                name: 'script',
                type: 'bytes'
            },
            {
                indexed: false,
                name: 'input',
                type: 'bytes'
            },
            {
                indexed: false,
                name: 'returnData',
                type: 'bytes'
            }
        ],
        name: 'ScriptResult',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                name: 'vault',
                type: 'address'
            },
            {
                indexed: true,
                name: 'token',
                type: 'address'
            },
            {
                indexed: false,
                name: 'amount',
                type: 'uint256'
            }
        ],
        name: 'RecoverToVault',
        type: 'event'
    }
];
exports.checkerAbi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sender',
                type: 'address'
            },
            {
                internalType: 'contract ILAND',
                name: '_land',
                type: 'address'
            },
            {
                internalType: 'contract IEstate',
                name: '_estate',
                type: 'address'
            },
            {
                internalType: 'int256',
                name: '_x',
                type: 'int256'
            },
            {
                internalType: 'int256',
                name: '_y',
                type: 'int256'
            }
        ],
        name: 'checkLAND',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sender',
                type: 'address'
            },
            {
                internalType: 'contract IDCLRegistrar',
                name: '_registrar',
                type: 'address'
            },
            {
                internalType: 'string',
                name: '_name',
                type: 'string'
            }
        ],
        name: 'checkName',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes[]',
                name: 'data',
                type: 'bytes[]'
            }
        ],
        name: 'multicall',
        outputs: [
            {
                internalType: 'bool[]',
                name: 'results',
                type: 'bool[]'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'contract IThirdPartyRegistry',
                name: '_tpRegistry',
                type: 'address'
            },
            {
                internalType: 'string',
                name: '_tpId',
                type: 'string'
            },
            {
                internalType: 'bytes32',
                name: '_root',
                type: 'bytes32'
            }
        ],
        name: 'validateThirdParty',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_sender',
                type: 'address'
            },
            {
                internalType: 'contract ICollectionFactory[]',
                name: '_factories',
                type: 'address[]'
            },
            {
                internalType: 'contract ICollection',
                name: '_collection',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: '_itemId',
                type: 'uint256'
            },
            {
                internalType: 'string',
                name: '_contentHash',
                type: 'string'
            },
            {
                internalType: 'contract ICommittee[]',
                name: '_committees',
                type: 'address[]'
            }
        ],
        name: 'validateWearables',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    }
];
exports.nameDenyListAbi = [
    {
        constant: true,
        inputs: [],
        name: 'ADD_ROLE',
        outputs: [{ name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'hasInitialized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_script', type: 'bytes' }],
        name: 'getEVMScriptExecutor',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getRecoveryVault',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'REMOVE_ROLE',
        outputs: [{ name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'values',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: 'token', type: 'address' }],
        name: 'allowRecoverability',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_value', type: 'string' }],
        name: 'remove',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'appId',
        outputs: [{ name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getInitializationBlock',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getTypeHash',
        outputs: [{ name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'listType',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'size',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_index', type: 'uint256' }],
        name: 'get',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_token', type: 'address' }],
        name: 'transferToVault',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '_sender', type: 'address' },
            { name: '_role', type: 'bytes32' },
            { name: '_params', type: 'uint256[]' }
        ],
        name: 'canPerform',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'getEVMScriptRegistry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_name', type: 'string' },
            { name: '_symbol', type: 'string' },
            { name: '_type', type: 'string' }
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_value', type: 'string' }],
        name: 'add',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'kernel',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'isPetrified',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: false, name: '_value', type: 'string' }
        ],
        name: 'Add',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: '_caller', type: 'address' },
            { indexed: false, name: '_value', type: 'string' }
        ],
        name: 'Remove',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'executor', type: 'address' },
            { indexed: false, name: 'script', type: 'bytes' },
            { indexed: false, name: 'input', type: 'bytes' },
            { indexed: false, name: 'returnData', type: 'bytes' }
        ],
        name: 'ScriptResult',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'vault', type: 'address' },
            { indexed: true, name: 'token', type: 'address' },
            { indexed: false, name: 'amount', type: 'uint256' }
        ],
        name: 'RecoverToVault',
        type: 'event'
    }
];
exports.poisAbi = [
    {
        inputs: [{ internalType: 'string', name: '_name', type: 'string' }],
        stateMutability: 'nonpayable',
        type: 'constructor'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_caller', type: 'address' },
            { indexed: false, internalType: 'string', name: '_value', type: 'string' }
        ],
        name: 'Add',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' }
        ],
        name: 'OwnershipTransferred',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: '_caller', type: 'address' },
            { indexed: false, internalType: 'string', name: '_value', type: 'string' }
        ],
        name: 'Remove',
        type: 'event'
    },
    {
        inputs: [{ internalType: 'string', name: '_value', type: 'string' }],
        name: 'add',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [{ internalType: 'uint256', name: '_index', type: 'uint256' }],
        name: 'get',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'name',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [{ internalType: 'string', name: '_value', type: 'string' }],
        name: 'remove',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
    {
        inputs: [],
        name: 'size',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: 'values',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        stateMutability: 'view',
        type: 'function'
    }
];
exports.manaTokenAbi = [
    {
        constant: true,
        inputs: [],
        name: 'mintingFinished',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'name',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_spender', type: 'address' },
            { name: '_value', type: 'uint256' }
        ],
        name: 'approve',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'totalSupply',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_from', type: 'address' },
            { name: '_to', type: 'address' },
            { name: '_value', type: 'uint256' }
        ],
        name: 'transferFrom',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'decimals',
        outputs: [{ name: '', type: 'uint8' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'unpause',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_to', type: 'address' },
            { name: '_amount', type: 'uint256' }
        ],
        name: 'mint',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: '_value', type: 'uint256' }],
        name: 'burn',
        outputs: [],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'paused',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [{ name: '_owner', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: 'balance', type: 'uint256' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'finishMinting',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [],
        name: 'pause',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [
            { name: '_to', type: 'address' },
            { name: '_value', type: 'uint256' }
        ],
        name: 'transfer',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        type: 'function'
    },
    {
        constant: true,
        inputs: [
            { name: '_owner', type: 'address' },
            { name: '_spender', type: 'address' }
        ],
        name: 'allowance',
        outputs: [{ name: 'remaining', type: 'uint256' }],
        payable: false,
        type: 'function'
    },
    {
        constant: false,
        inputs: [{ name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        type: 'function'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'to', type: 'address' },
            { indexed: false, name: 'amount', type: 'uint256' }
        ],
        name: 'Mint',
        type: 'event'
    },
    { anonymous: false, inputs: [], name: 'MintFinished', type: 'event' },
    { anonymous: false, inputs: [], name: 'Pause', type: 'event' },
    { anonymous: false, inputs: [], name: 'Unpause', type: 'event' },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'burner', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' }
        ],
        name: 'Burn',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'owner', type: 'address' },
            { indexed: true, name: 'spender', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' }
        ],
        name: 'Approval',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'from', type: 'address' },
            { indexed: true, name: 'to', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' }
        ],
        name: 'Transfer',
        type: 'event'
    }
];
//# sourceMappingURL=abis.js.map