{"version":3,"file":"component---src-pages-quests-old-[id]-tsx-032e50d6f4cc65b8c736.js","mappings":"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","sources":["webpack://@dcl/quests-manager/./node_modules/decentraland-ui/dist/components/Checkbox/Checkbox.js","webpack://@dcl/quests-manager/./src/components/DesignerView.tsx","webpack://@dcl/quests-manager/./src/components/AddItem.tsx","webpack://@dcl/quests-manager/./src/components/Edit.tsx","webpack://@dcl/quests-manager/./src/pages/quests/old/[id].tsx","webpack://@dcl/quests-manager/./src/quests.ts"],"sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Checkbox = void 0;\nvar Checkbox_1 = require(\"semantic-ui-react/dist/commonjs/modules/Checkbox\");\nObject.defineProperty(exports, \"Checkbox\", {\n  enumerable: true,\n  get: function get() {\n    return __importDefault(Checkbox_1).default;\n  }\n});\nrequire(\"./Checkbox.css\");","import React from \"react\"\n\nimport { QuestDefinition } from \"@dcl/quests-client/dist/protocol/decentraland/quests/definitions.gen\"\nimport { Edge, Node } from \"@dcl/quests-designer/dist/types\"\nimport useAsyncState from \"decentraland-gatsby/dist/hooks/useAsyncState\"\nimport { back } from \"decentraland-gatsby/dist/plugins/intl\"\n\nexport const DesignerView = ({\n  initialNodes,\n  initialEdges,\n  type = \"new\",\n  onClick,\n  close,\n}: {\n  initialNodes?: Node[]\n  initialEdges?: Edge[]\n  type?: \"new\" | \"draft\" | \"published\" | \"old\"\n  onClick?: (nodes: Node[], edges: Edge[], definition?: QuestDefinition) => void\n  close?: () => void\n}) => {\n  const [QuestDesigner] = useAsyncState(() => import(\"@dcl/quests-designer\"))\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      {QuestDesigner && (\n        <QuestDesigner.QuestsDesigner\n          saveDesignButton={\n            type !== \"old\" && onClick\n              ? {\n                  content:\n                    type == \"new\"\n                      ? \"Save Draft\"\n                      : type == \"draft\"\n                      ? \"Update Draft\"\n                      : \"Update Quest\",\n                  onClick: onClick,\n                  validate: type == \"published\",\n                }\n              : undefined\n          }\n          backButton={() => (close ? close() : back())}\n          initialNodes={initialNodes}\n          initialEdges={initialEdges}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { Button } from \"decentraland-ui/dist/components/Button/Button\"\nimport { Field } from \"decentraland-ui/dist/components/Field/Field\"\n\nimport { urlRegex } from \"../utils\"\n\nexport const AddItem = ({\n  items,\n  onSaveItem,\n}: {\n  items: { name: string; imageLink: string }[]\n  onSaveItem: (item: { name: string; imageLink: string }, index: number) => void\n}) => {\n  const [adding, setAdding] = useState<{\n    name: string\n    imageLink: string\n  } | null>(null)\n  const [currentSelected, setCurrentSelected] = useState<{\n    index: number\n    name: string\n    imageLink: string\n  } | null>(null)\n\n  if (currentSelected) {\n    return (\n      <Adder\n        item={currentSelected}\n        onChange={(key, value) =>\n          setCurrentSelected({ ...currentSelected, [key]: value })\n        }\n        onClose={() => setCurrentSelected(null)}\n        onSave={() => {\n          onSaveItem(currentSelected, currentSelected.index)\n          setCurrentSelected(null)\n        }}\n      />\n    )\n  }\n\n  if (adding) {\n    return (\n      <Adder\n        item={adding}\n        onChange={(key, value) => setAdding({ ...adding, [key]: value })}\n        onClose={() => setAdding(null)}\n        onSave={() => {\n          onSaveItem(adding, -1)\n          setAdding(null)\n        }}\n      />\n    )\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n      }}\n    >\n      <h4>\n        Reward Items <span style={{ color: \"var(--primary)\" }}>*</span>\n      </h4>\n      {items.length ? (\n        <ul>\n          {items.map((item, i) => (\n            <Button\n              size=\"small\"\n              type=\"button\"\n              content={`${item.name}`}\n              inverted\n              onClick={() => setCurrentSelected({ ...item, index: i })}\n            />\n          ))}\n        </ul>\n      ) : (\n        <p>No items</p>\n      )}\n      <Button\n        type=\"button\"\n        content=\"Add item\"\n        size=\"small\"\n        inverted\n        style={{ border: \"none\", width: \"20px\" }}\n        onClick={() => setAdding({ name: \"\", imageLink: \"\" })}\n      />\n    </div>\n  )\n}\n\nconst Adder = ({\n  item,\n  onSave,\n  onClose,\n  onChange,\n}: {\n  item: { name: string; imageLink: string }\n  onChange: (key: string, value: string) => void\n  onSave: () => void\n  onClose: () => void\n}) => {\n  return (\n    <div style={{ width: \"100%\", marginTop: \"20px\" }}>\n      <h4>Adding Item</h4>\n      <div\n        style={{\n          display: \"flex\",\n          maxWidth: \"100%\",\n          justifyContent: \"space-between\",\n        }}\n        className=\"key-value\"\n      >\n        <Field\n          label=\"name\"\n          value={item.name}\n          onChange={(e) => onChange(\"name\", e.target.value)}\n          error={item.name.length < 3}\n          message={\n            item.name.length < 3 ? \"Name should be at least 3 chars\" : undefined\n          }\n        />\n        <Field\n          label=\"image link\"\n          value={item.imageLink}\n          onChange={(e) => onChange(\"imageLink\", e.target.value)}\n          error={new RegExp(urlRegex).test(item.imageLink || \"\") ? false : true}\n          message={\n            !new RegExp(urlRegex).test(item.imageLink || \"\")\n              ? \"Image URL is invalud\"\n              : undefined\n          }\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <Button\n          type=\"button\"\n          content=\"Save\"\n          secondary\n          size=\"small\"\n          style={{ maxWidth: \"20px\", marginRight: \"10px\" }}\n          disabled={\n            item?.name.length < 3 ||\n            item?.imageLink == \"\" ||\n            !new RegExp(urlRegex).test(item.imageLink || \"\")\n          }\n          onClick={() => onSave()}\n        />\n        <Button\n          type=\"button\"\n          content=\"Close\"\n          inverted\n          size=\"small\"\n          style={{ maxWidth: \"20px\" }}\n          onClick={() => {\n            onClose()\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { Button } from \"decentraland-ui/dist/components/Button/Button\"\nimport { Checkbox } from \"decentraland-ui/dist/components/Checkbox/Checkbox\"\nimport { Field } from \"decentraland-ui/dist/components/Field/Field\"\nimport { Header } from \"decentraland-ui/dist/components/Header/Header\"\n\nimport { AddItem } from \"./AddItem\"\nimport { RawQuest } from \"../types\"\nimport { urlRegex } from \"../utils\"\n\nexport const Edit = ({\n  onChange,\n  quest,\n  readonly = false,\n}: {\n  quest: RawQuest\n  onChange: (quest: RawQuest) => void\n  readonly?: boolean\n}) => {\n  return (\n    <>\n      <h3>Quest Information</h3>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Header sub size=\"small\">\n          <label>\n            Name <span style={{ color: \"var(--primary)\" }}>*</span>\n          </label>\n        </Header>\n        <Field\n          placeholder=\"Name of the quest\"\n          value={quest.name}\n          onChange={(e) => {\n            onChange({ ...quest, name: e.target.value })\n          }}\n          readOnly={readonly}\n          error={quest.name && quest.name?.length < 5 ? true : false}\n          message={\n            quest.name && quest.name?.length < 5\n              ? \"Name should be at least 5 chars \"\n              : undefined\n          }\n        />\n        <Header sub size=\"small\">\n          <label>\n            Description <span style={{ color: \"var(--primary)\" }}>*</span>\n          </label>\n        </Header>\n        <Field\n          placeholder=\"Short description of the quest\"\n          value={quest.description}\n          onChange={(e) => {\n            onChange({\n              ...quest,\n              description: e.target.value,\n            })\n          }}\n          readOnly={readonly}\n          error={\n            quest.description && quest.description?.length < 5 ? true : false\n          }\n          message={\n            quest.description && quest.description?.length < 5\n              ? \"Description should be at least 5 chars \"\n              : undefined\n          }\n        />\n        <Header sub size=\"small\">\n          <label>\n            Image <span style={{ color: \"var(--primary)\" }}>*</span>\n          </label>\n        </Header>\n        <Field\n          value={quest.imageUrl}\n          placeholder=\"Image URL to display when listing the quest\"\n          onChange={(e) => {\n            onChange({\n              ...quest,\n              imageUrl: e.target.value,\n            })\n          }}\n          readOnly={readonly}\n          error={\n            !quest.imageUrl\n              ? false\n              : new RegExp(urlRegex).test(quest.imageUrl)\n              ? false\n              : true\n          }\n          message={\n            !quest.imageUrl\n              ? false\n              : !new RegExp(urlRegex).test(quest.imageUrl)\n              ? \"Image URL is invalid\"\n              : undefined\n          }\n        />\n      </div>\n      <div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div>\n            <h3 style={{ marginBottom: \"0px\" }}>Rewards</h3>\n          </div>\n          <Checkbox\n            toggle\n            checked={!!quest.reward}\n            onChange={() => {\n              if (quest.reward) {\n                onChange({ ...quest, reward: undefined })\n              } else {\n                onChange({\n                  ...quest,\n                  reward: {\n                    hook: { webhookUrl: \"\", requestBody: {} },\n                    items: [],\n                  },\n                })\n              }\n            }}\n          />\n        </div>\n        {quest.reward && (\n          <>\n            <p\n              style={{\n                fontSize: \"10px\",\n                marginBottom: \"10px\",\n                whiteSpace: \"pre\",\n                color: \"#676370\",\n              }}\n            >\n              Available placeholders for Webhook URL and Data to Receive\n              (request body): {\"\\n\"}\n              &#123; <span style={{ fontWeight: \"bold\" }}>quest_id</span>&#125;\n              , &#123; <span style={{ fontWeight: \"bold\" }}>user_address</span>\n              &#125; {\"\\n\"}\n              E.g: &#123; beneficary: &#123;user_address&#125;, quest:\n              &#123;quest_id&#125; &#125;\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                flexDirection: \"column\",\n                marginTop: \"40px\",\n              }}\n            >\n              <Header sub size=\"small\">\n                <label>\n                  Webhook URL <span style={{ color: \"var(--primary)\" }}>*</span>\n                </label>\n              </Header>\n              <Field\n                value={quest?.reward?.hook.webhookUrl || \"\"}\n                onChange={(e) => {\n                  onChange({\n                    ...quest,\n                    reward: {\n                      items: quest.reward?.items || [],\n                      hook: {\n                        requestBody: quest.reward?.hook?.requestBody || {},\n                        webhookUrl: e.target.value,\n                      },\n                    },\n                  })\n                }}\n                placeholder=\"URL to call when the quest is completed\"\n                readOnly={readonly}\n                error={\n                  new RegExp(urlRegex).test(quest.reward.hook.webhookUrl || \"\")\n                    ? false\n                    : true\n                }\n                message={\n                  !new RegExp(urlRegex).test(quest.reward.hook.webhookUrl || \"\")\n                    ? \"Webhook URL is invalud\"\n                    : undefined\n                }\n              />\n              <div style={{ width: \"100%\" }}>\n                <Header sub size=\"small\">\n                  <label>\n                    Data to Receive{\" \"}\n                    <span style={{ color: \"var(--primary)\" }}>*</span>\n                  </label>\n                </Header>\n                {Object.entries(\n                  quest?.reward?.hook.requestBody ||\n                    ({} as Record<string, string>)\n                ).length\n                  ? Object.entries(\n                      quest?.reward?.hook.requestBody ||\n                        ({} as Record<string, string>)\n                    ).map(([key, value], index) => {\n                      return (\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                          }}\n                          className=\"key-value\"\n                        >\n                          <Field\n                            value={key}\n                            onChange={(e) => {\n                              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                              const entries = Object.entries(\n                                quest.reward?.hook.requestBody || {}\n                              )\n                              entries[index][0] = e.target.value\n                              onChange({\n                                ...quest,\n                                reward: {\n                                  hook: {\n                                    webhookUrl:\n                                      quest.reward?.hook.webhookUrl || \"\",\n                                    requestBody: Object.fromEntries(entries),\n                                  },\n                                  items: quest.reward?.items || [],\n                                },\n                              })\n                            }}\n                            readOnly={readonly}\n                            error={key.length ? false : true}\n                            message={\n                              !key.length ? \"Key cannot be empty\" : undefined\n                            }\n                          />\n                          <span style={{ fontSize: \"24px\" }}>:</span>\n                          <Field\n                            value={value}\n                            onChange={(e) => {\n                              const entries = Object.entries(\n                                quest.reward?.hook.requestBody || {}\n                              )\n                              entries[index][1] = e.target.value\n                              onChange({\n                                ...quest,\n                                reward: {\n                                  hook: {\n                                    webhookUrl:\n                                      quest.reward?.hook.webhookUrl || \"\",\n                                    requestBody: Object.fromEntries(entries),\n                                  },\n                                  items: quest.reward?.items || [],\n                                },\n                              })\n                            }}\n                            readOnly={readonly}\n                            error={value.length ? false : true}\n                            message={\n                              !value.length\n                                ? \"Value cannot be empty\"\n                                : undefined\n                            }\n                          />\n                          {!readonly && (\n                            <button\n                              style={{\n                                color: \"red\",\n                                backgroundColor: \"transparent\",\n                                border: \"none\",\n                                cursor: \"pointer\",\n                              }}\n                              onClick={() => {\n                                const entries = Object.entries(\n                                  quest.reward?.hook.requestBody || {}\n                                )\n                                onChange({\n                                  ...quest,\n                                  reward: {\n                                    hook: {\n                                      webhookUrl:\n                                        quest.reward?.hook.webhookUrl || \"\",\n                                      requestBody: Object.fromEntries(\n                                        entries.filter(\n                                          (entry) => entry[0] != key\n                                        )\n                                      ),\n                                    },\n                                    items: quest.reward?.items || [],\n                                  },\n                                })\n                              }}\n                            >\n                              &#x2715;\n                            </button>\n                          )}\n                        </div>\n                      )\n                    })\n                  : null}\n                {!readonly && (\n                  <Button\n                    type=\"button\"\n                    content=\"Add Key:Value\"\n                    size=\"small\"\n                    inverted\n                    style={{ border: \"none\" }}\n                    onClick={() => {\n                      const keys = Object.keys(\n                        quest.reward?.hook.requestBody || {}\n                      )\n                      onChange({\n                        ...quest,\n                        reward: {\n                          hook: {\n                            webhookUrl: quest.reward?.hook.webhookUrl || \"\",\n                            requestBody: {\n                              ...(quest.reward?.hook.requestBody || {}),\n                              [`key${keys.length == 0 ? \"\" : keys.length}`]:\n                                \"value\",\n                            } as Record<string, string>,\n                          },\n                          items: quest.reward?.items || [],\n                        },\n                      })\n                    }}\n                  />\n                )}\n              </div>\n              {!readonly && (\n                <AddItem\n                  items={quest?.reward?.items || []}\n                  onSaveItem={(item, index) => {\n                    const newItems = [...(quest?.reward?.items || [])]\n\n                    if (index === -1) {\n                      newItems.push(item)\n                    } else {\n                      newItems[index] = item\n                    }\n\n                    onChange({\n                      ...quest,\n                      reward: {\n                        hook: {\n                          requestBody: quest.reward?.hook.requestBody || {},\n                          webhookUrl: quest.reward?.hook?.webhookUrl || \"\",\n                        },\n                        items: newItems,\n                      },\n                    })\n                  }}\n                />\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\n\nimport { generateNodesAndEdgesFromQuestDefinition } from \"@dcl/quests-designer/dist/utils\"\nimport { useAuthContext } from \"decentraland-gatsby/dist/context/Auth\"\nimport { back } from \"decentraland-gatsby/dist/plugins/intl\"\nimport { Back } from \"decentraland-ui/dist/components/Back/Back\"\nimport { Button } from \"decentraland-ui/dist/components/Button/Button\"\nimport { Container } from \"decentraland-ui/dist/components/Container/Container\"\nimport { SignIn } from \"decentraland-ui/dist/components/SignIn/SignIn\"\n\nimport { DesignerView } from \"../../../components/DesignerView\"\nimport { Edit } from \"../../../components/Edit\"\nimport { QuestsClient } from \"../../../quests\"\nimport { QuestAmplified } from \"../../../types\"\n\nimport \"../quests.css\"\n\nconst ViewUpdatedQuest = ({ id }: { id: string }) => {\n  const [quest, setQuest] = useState<QuestAmplified | null>(null)\n  const [questDesigner, setQuestDesigner] = useState(false)\n  const [account, accountState] = useAuthContext()\n\n  let questClient: QuestsClient\n  if (account) {\n    questClient = new QuestsClient(account)\n  }\n\n  useEffect(() => {\n    if (account) {\n      questClient\n        .getQuest(id)\n        .then((quest) => {\n          setQuest({ ...quest })\n        })\n        .catch(console.error)\n    }\n  }, [account])\n\n  if (!quest) {\n    return <Container>Loading</Container>\n  }\n\n  if (!account || accountState.loading) {\n    return (\n      <SignIn\n        onConnect={() => accountState.select()}\n        isConnecting={accountState.loading}\n      />\n    )\n  }\n\n  if (questDesigner) {\n    const { nodes, edges } = generateNodesAndEdgesFromQuestDefinition(\n      quest.definition!\n    )\n\n    return (\n      <DesignerView\n        type=\"old\"\n        close={() => setQuestDesigner(false)}\n        initialEdges={edges}\n        initialNodes={nodes}\n      />\n    )\n  }\n\n  return (\n    <Container>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"45%\",\n          }}\n        >\n          <Back onClick={() => back()} />\n          <div style={{ marginLeft: \"24px\" }}>\n            <h2>View Quest</h2>\n            <p>Quest ID: {quest.id}</p>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            width: \"55%\",\n          }}\n        >\n          <Button\n            onClick={() => setQuestDesigner(true)}\n            inverted\n            style={{ border: \"none\" }}\n          >\n            View Quest Steps\n          </Button>\n        </div>\n      </div>\n      <div style={{ width: \"50%\", paddingTop: \"20px\", marginLeft: \"60px\" }}>\n        <Edit\n          quest={quest}\n          readonly\n          onChange={(editedQuest) => setQuest({ ...quest, ...editedQuest })}\n        />\n      </div>\n    </Container>\n  )\n}\n\nexport default ViewUpdatedQuest\n","import { Quest } from \"@dcl/quests-client/dist/protocol/decentraland/quests/definitions.gen\"\nimport { validateCreateQuest } from \"@dcl/quests-client/dist/utils\"\nimport API from \"decentraland-gatsby/dist/utils/api/API\"\nimport env from \"decentraland-gatsby/dist/utils/env\"\n\nimport { DraftQuest, QuestAmplified, QuestRewards } from \"./types\"\n\nexport class QuestsClient extends API {\n  static URL = env(\"QUESTS_SERVER_URL\", \"https://quests.decentraland.org/api\")\n\n  constructor(public user: string) {\n    super(QuestsClient.URL)\n  }\n\n  getMyQuests() {\n    return this.fetch<{\n      quests: QuestAmplified[]\n    }>(\n      `/creators/${this.user}/quests`,\n      this.options().method(\"GET\").authorization({ sign: true })\n    )\n  }\n\n  publishQuest(quest: Omit<DraftQuest, \"metadata\" | \"id\">) {\n    validateCreateQuest(quest)\n    // we must stringify all non-string parameters\n    // server expects map<string, string>\n    for (const step of quest.definition!.steps) {\n      for (const task of step.tasks) {\n        for (const action of task.actionItems) {\n          for (const param in action.parameters) {\n            if (typeof action.parameters[param] != \"string\") {\n              action.parameters[param] = JSON.stringify(\n                action.parameters[param]\n              )\n            }\n          }\n        }\n      }\n    }\n\n    return this.fetch<{ id: string }>(\n      `/quests`,\n      this.options()\n        .method(\"POST\")\n        .authorization({ sign: true })\n        .json(quest)\n        .metadata(quest as unknown as any)\n    )\n  }\n\n  async getQuest(id: string): Promise<QuestAmplified> {\n    const questWithoutRewards = await this.fetch<{\n      quest: Quest & { active: boolean }\n    }>(\n      `/quests/${id}`,\n      this.options().method(\"GET\").authorization({ sign: true })\n    )\n\n    let questRewards: QuestRewards[\"reward\"] | null = null\n\n    try {\n      questRewards = await this.fetch<QuestRewards[\"reward\"]>(\n        `/quests/${id}/reward?with_hook=true`,\n        this.options().method(\"GET\").authorization({ sign: true })\n      )\n    } catch (error) {\n      console.log(error)\n    }\n\n    return {\n      ...questWithoutRewards.quest,\n      reward: questRewards ? questRewards : undefined,\n    }\n  }\n\n  updateQuest(\n    id: string,\n    quest: Omit<QuestAmplified, \"creatorAddress\" | \"id\" | \"active\">\n  ) {\n    if (!quest.name) {\n      throw new Error(\"Quest must have a name\")\n    }\n\n    return this.fetch<{ quest_id: string }>(\n      `/quests/${id}`,\n      this.options().method(\"PUT\").authorization({ sign: true }).json(quest)\n    )\n  }\n\n  deactivateQuest(id: string) {\n    return this.fetch(\n      `/quests/${id}`,\n      this.options().method(\"DELETE\").authorization({ sign: true })\n    )\n  }\n\n  activateQuest(id: string) {\n    return this.fetch(\n      `/quests/${id}/activate`,\n      this.options().method(\"PUT\").authorization({ sign: true })\n    )\n  }\n\n  getOldVersions(id: string) {\n    return this.fetch<{ updates: string[] }>(\n      `/quests/${id}/updates`,\n      this.options().method(\"GET\")\n    )\n  }\n}\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Checkbox","Checkbox_1","enumerable","get","default","DesignerView","_ref","initialNodes","initialEdges","_ref$type","type","onClick","close","QuestDesigner","useAsyncState","React","style","height","width","QuestsDesigner","saveDesignButton","content","validate","undefined","backButton","back","AddItem","items","onSaveItem","_useState","useState","adding","setAdding","_useState2","currentSelected","setCurrentSelected","Adder","item","onChange","key","_Object$assign","assign","onClose","onSave","index","_Object$assign2","display","flexDirection","marginTop","marginBottom","color","length","map","i","Button","size","name","inverted","border","imageLink","_ref2","_onChange","maxWidth","justifyContent","className","Field","label","e","target","error","message","RegExp","urlRegex","test","secondary","marginRight","disabled","Edit","_quest$name","_quest$name2","_quest$description","_quest$description2","_quest$reward","_quest$reward4","_quest$reward5","_quest$reward19","quest","_ref$readonly","readonly","Header","sub","placeholder","readOnly","description","imageUrl","toggle","checked","reward","hook","webhookUrl","requestBody","fontSize","whiteSpace","fontWeight","_quest$reward2","_quest$reward3","_quest$reward3$hook","entries","alignItems","_quest$reward6","_quest$reward7","_quest$reward8","fromEntries","_quest$reward9","_quest$reward10","_quest$reward11","backgroundColor","cursor","_quest$reward12","_quest$reward13","_quest$reward14","filter","entry","_quest$reward15","_quest$reward16","_quest$reward17","_quest$reward18","keys","_quest$reward20","_quest$reward21","_quest$reward22","_quest$reward22$hook","newItems","_toConsumableArray","push","questClient","id","setQuest","questDesigner","setQuestDesigner","_useAuthContext","useAuthContext","account","accountState","QuestsClient","useEffect","getQuest","then","catch","console","Container","loading","SignIn","onConnect","select","isConnecting","_generateNodesAndEdge","generateNodesAndEdgesFromQuestDefinition","definition","nodes","edges","Back","marginLeft","paddingTop","editedQuest","_API","user","_this","call","URL","_inheritsLoose","_proto","prototype","getMyQuests","fetch","options","method","authorization","sign","publishQuest","validateCreateQuest","_step","_iterator","_createForOfIteratorHelperLoose","steps","done","_step2","_iterator2","tasks","_step3","_iterator3","actionItems","action","param","parameters","JSON","stringify","json","metadata","_getQuest","_asyncToGenerator","_regeneratorRuntime","_callee","questWithoutRewards","questRewards","_context","prev","next","sent","t0","log","abrupt","stop","_x","apply","arguments","updateQuest","Error","deactivateQuest","activateQuest","getOldVersions","API","env"],"sourceRoot":""}