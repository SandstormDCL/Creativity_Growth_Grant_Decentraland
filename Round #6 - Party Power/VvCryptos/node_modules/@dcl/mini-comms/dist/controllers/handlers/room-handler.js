"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.websocketHandler = void 0;
const ws_1 = require("@well-known-components/http-server/dist/ws");
const handle_linear_protocol_1 = require("../../logic/handle-linear-protocol");
async function websocketHandler(context) {
    const logger = context.components.logs.getLogger('Websocket Handler');
    return (0, ws_1.upgradeWebSocketResponse)((socket) => {
        logger.debug('Websocket connected');
        // TODO fix ws types
        const ws = socket;
        // We use nodebuffer because it removes an extra cast in the ws library
        // and we leverage that performance and reduced allocations footprint
        ws.binaryType = 'nodebuffer';
        ws.on('error', (error) => {
            logger.error(error);
            ws.close();
        });
        ws.on('close', () => {
            logger.debug('Websocket closed');
        });
        (0, handle_linear_protocol_1.handleSocketLinearProtocol)(context.components, ws, context.params.roomId).catch((err) => {
            logger.info(err);
            ws.terminate();
        });
    });
}
exports.websocketHandler = websocketHandler;
//# sourceMappingURL=room-handler.js.map