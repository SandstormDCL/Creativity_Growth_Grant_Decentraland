import * as proto from '@dcl/protocol/out-js/decentraland/kernel/comms/rfc5/ws_comms.gen';
import { WebSocket } from 'ws';
import { AppComponents } from '../types';
export declare type RoomComponent = {
    addSocketToRoom(ws: WebSocket, address: string, room: string): void;
    isAddressConnected(address: string): boolean;
};
export declare type RoomSocket = {
    ws: WebSocket;
    address: string;
    alias: number;
    room: string;
};
export declare const roomsMetrics: import("@well-known-components/interfaces").IMetricsComponent.MetricsRecordDefinition<"dcl_ws_rooms_count" | "dcl_ws_rooms_sent_messages_total" | "dcl_ws_rooms_connections" | "dcl_ws_rooms_connections_total" | "dcl_ws_rooms_kicks_total" | "dcl_ws_rooms_unknown_sent_messages_total" | "dcl_ws_rooms_dropped_unreliable_messages_total">;
export declare function craftMessage(packet: Partial<proto.WsPacket>): Uint8Array;
export declare function createRoomsComponent(components: Pick<AppComponents, 'logs' | 'metrics' | 'config'>): Promise<RoomComponent>;
