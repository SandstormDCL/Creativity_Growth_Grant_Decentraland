"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.keccak256Hash = void 0;
const keccak_1 = require("ethereum-cryptography/keccak");
const utils_1 = require("ethereum-cryptography/utils");
/**
 * Calculates the metadata hash. Uses the keys to determine which fields of the metadata object will be used for the result.
 * @public
 */
function keccak256Hash(metadata, keys) {
    const partialMetadata = JSON.stringify(pick(metadata, keys));
    const data = new TextEncoder().encode(partialMetadata);
    const hash = (0, keccak_1.keccak256)(data);
    return (0, utils_1.toHex)(hash);
}
exports.keccak256Hash = keccak256Hash;
const pick = (obj, keys) => Object.fromEntries(keys.filter((key) => key in obj).map((key) => [key, obj[key]]));
//# sourceMappingURL=ADR62.js.map