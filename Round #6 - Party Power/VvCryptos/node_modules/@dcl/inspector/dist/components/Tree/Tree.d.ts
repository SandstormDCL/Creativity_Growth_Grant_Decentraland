import React from 'react';
import { DropType } from './utils';
import './Tree.css';
type Props<T> = {
    value: T;
    className?: string;
    getExtraContextMenu?: (value: T) => JSX.Element | null;
    level?: number;
    getId: (value: T) => string;
    getChildren: (value: T) => T[];
    getIcon?: (value: T) => JSX.Element;
    getLabel: (value: T) => string | JSX.Element;
    isOpen: (value: T) => boolean;
    isSelected: (value: T) => boolean;
    isHidden: (value: T) => boolean;
    canRename?: (value: T) => boolean;
    canAddChild?: (value: T) => boolean;
    canRemove?: (value: T) => boolean;
    canDuplicate?: (value: T) => boolean;
    canDrag?: (value: T) => boolean;
    canReorder?: (source: T, target: T, type: DropType) => boolean;
    onSetOpen: (value: T, isOpen: boolean) => void;
    onSelect: (value: T, multiple?: boolean) => void;
    onDoubleSelect?: (value: T) => void;
    onDrop: (source: T, target: T, dropType: DropType) => void;
    onRename: (value: T, label: string) => void;
    onAddChild: (value: T, label: string) => void;
    onRemove: (value: T) => void;
    onDuplicate: (value: T) => void;
    getDragContext?: () => unknown;
    dndType?: string;
    tree?: unknown;
};
export declare function Tree<T>(): React.NamedExoticComponent<Omit<Props<T>, "contextMenuId">>;
export default Tree;
