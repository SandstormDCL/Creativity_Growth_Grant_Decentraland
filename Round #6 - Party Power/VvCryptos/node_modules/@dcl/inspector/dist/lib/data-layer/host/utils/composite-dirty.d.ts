import { ComponentDefinition, CompositeDefinition, CrdtMessageType, Entity, IEngine } from '@dcl/ecs';
import { FileSystemInterface } from '../../types';
import { InspectorPreferences } from '../../../logic/preferences/types';
declare enum DirtyEnum {
    None = 0,
    Dirty = 1,
    DirtyAndDump = 2
}
export declare function compositeAndDirty(fs: FileSystemInterface, engine: IEngine, getInspectorPreferences: () => InspectorPreferences, compositePath: string): Promise<{
    onChange: (_entity: Entity, operation: CrdtMessageType, component: ComponentDefinition<unknown> | undefined, _componentValue: unknown) => void;
    readonly composite: CompositeDefinition;
    readonly dirty: DirtyEnum;
    saveComposite: (dump?: boolean) => Promise<void>;
}>;
export {};
