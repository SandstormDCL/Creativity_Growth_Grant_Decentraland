import { GizmoManager, PlaneRotationGizmo, RotationGizmo } from '@babylonjs/core';
import { Color3 } from '@babylonjs/core';
export declare class PatchedPlaneRotationGizmo extends PlaneRotationGizmo {
    constructor(planeNormal: any, color: Color3 | undefined, gizmoLayer: any, tessellation?: number, parent?: any, useEulerRotation?: boolean, thickness?: number);
}
export declare class PatchedRotationGizmo extends RotationGizmo {
    constructor(gizmoLayer: any, tessellation: number | undefined, useEulerRotation: boolean | undefined, thickness: number | undefined, gizmoManager: any, options: any);
}
export declare class PatchedGizmoManager extends GizmoManager {
    protected _gizmosEnabled: {
        positionGizmo: boolean;
        rotationGizmo: boolean;
        scaleGizmo: boolean;
        boundingBoxGizmo: boolean;
        freeGizmo: boolean;
    };
    set rotationGizmoEnabled(value: boolean);
    get rotationGizmoEnabled(): boolean;
    set freeGizmoEnabled(value: boolean);
    get freeGizmoEnabled(): boolean;
}
