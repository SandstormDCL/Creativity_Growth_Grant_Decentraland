import * as BABYLON from '@babylonjs/core';
import { Emitter } from 'mitt';
import { EcsEntity } from './EcsEntity';
type SpeedChangeEvent = {
    change: number;
};
export declare class CameraManager {
    inputSource: HTMLCanvasElement;
    private static ANGULAR_SENSIBILITY;
    private speeds;
    private speedIndex;
    private minY;
    private zoomSensitivity;
    private camera;
    private speedChangeObservable;
    private getAspectRatio;
    private animation;
    constructor(scene: BABYLON.Scene, inputSource: HTMLCanvasElement, speeds: Array<number>, initialSpeedIndex: number, minY: number, zoomSensitivity: number);
    reattachControl(): void;
    getCamera(): BABYLON.FreeCamera;
    getGlobalPosition(): BABYLON.Vector3;
    getSpeed(): number;
    getSpeedChangeObservable(): Emitter<SpeedChangeEvent>;
    setFreeCameraInvertRotation(invert: boolean): void;
    centerViewOnEntity(entity: EcsEntity): void;
    resetCamera(): void;
    private createCamera;
    private changeSpeed;
    private onRenderFrame;
}
export {};
