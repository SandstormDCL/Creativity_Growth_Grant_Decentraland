import * as BABYLON from '@babylonjs/core';
import { PBGltfContainer } from '@dcl/ecs';
import type { ComponentOperation } from '../component-operations';
import { EcsEntity } from '../EcsEntity';
export declare const putGltfContainerComponent: ComponentOperation;
export declare const updateGltfForEntity: (entity: EcsEntity, newValue: PBGltfContainer | null) => void;
export declare function loadGltf(entity: EcsEntity, value: string): Promise<void>;
export declare function removeGltf(entity: EcsEntity): void;
export declare function loadAssetContainer(file: File, scene: BABYLON.Scene, onSuccess?: (assetContainer: BABYLON.AssetContainer) => void, onProgress?: (event: BABYLON.ISceneLoaderProgressEvent) => void, onError?: (scene: BABYLON.Scene, message: string, exception?: any) => void, pluginExtension?: string, name?: string): void;
export declare function processGLTFAssetContainer(assetContainer: BABYLON.AssetContainer): void;
export declare function disposeAnimationGroups(scene: BABYLON.Scene, $: BABYLON.AnimationGroup): void;
export declare function cleanupAssetContainer(scene: BABYLON.Scene, $: BABYLON.AssetContainer): void;
