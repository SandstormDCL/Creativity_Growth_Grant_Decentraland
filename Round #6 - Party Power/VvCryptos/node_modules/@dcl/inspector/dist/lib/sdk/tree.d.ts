import { Entity, IEngine } from '@dcl/ecs';
import { EditorComponents } from './components';
export declare const EDITOR_ENTITIES: Entity[];
export declare const ROOT: Entity, PLAYER: Entity, CAMERA: Entity;
/**
 * Returns a tree in the shape of Map<Entity, Set<Entity>> where the key is the parent and the value is the children
 * @returns
 */
export declare const getTreeFromEngine: (engine: IEngine, Nodes: EditorComponents["Nodes"]) => Map<Entity, Set<Entity>>;
/**
 * Get a tree with ROOT as the only node
 * @returns
 */
export declare function getEmptyTree(): Map<Entity, Set<Entity>>;
/**
 *
 * @param tree tree in the shape of Map<Entity, Set> where the key is the parent and the value are the children
 * @param entity entity to get parent from
 * @returns the parent of the provided entity
 */
export declare function findParent(tree: Map<Entity, Set<Entity>>, entity: Entity): Entity;
