import { DeepReadonly, Entity, LastWriteWinElementSetComponentDefinition } from '@dcl/ecs';
import { Component } from '../../lib/sdk/components';
export declare function isLastWriteWinComponent<T = unknown>(component: Component): component is LastWriteWinElementSetComponentDefinition<T>;
export declare const getComponentValue: <T>(entity: Entity, component: Component<T>) => DeepReadonly<T>;
export declare const useComponentValue: <ComponentValueType>(entity: Entity, component: Component<ComponentValueType>) => readonly [ComponentValueType, import("react").Dispatch<import("react").SetStateAction<ComponentValueType>>, (val: ComponentValueType) => boolean];
