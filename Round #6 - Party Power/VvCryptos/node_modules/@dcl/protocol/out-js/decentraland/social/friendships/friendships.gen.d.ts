import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "decentraland.social.friendships";
/** This message is a response that is sent from the server to the client */
export interface FriendshipEventResponse {
    body?: {
        $case: "request";
        request: RequestResponse;
    } | {
        $case: "accept";
        accept: AcceptResponse;
    } | {
        $case: "reject";
        reject: RejectResponse;
    } | {
        $case: "delete";
        delete: DeleteResponse;
    } | {
        $case: "cancel";
        cancel: CancelResponse;
    } | undefined;
}
export interface FriendshipEventResponses {
    responses: FriendshipEventResponse[];
}
export interface FriendshipEventPayload {
    body?: {
        $case: "request";
        request: RequestPayload;
    } | {
        $case: "accept";
        accept: AcceptPayload;
    } | {
        $case: "reject";
        reject: RejectPayload;
    } | {
        $case: "delete";
        delete: DeletePayload;
    } | {
        $case: "cancel";
        cancel: CancelPayload;
    } | undefined;
}
export interface User {
    address: string;
}
export interface Users {
    users: User[];
}
export interface RequestResponse {
    user: User | undefined;
    createdAt: number;
    message?: string | undefined;
}
export interface RequestPayload {
    user: User | undefined;
    message?: string | undefined;
}
export interface Requests {
    /** Total amount of friendship requests */
    total: number;
    items: RequestResponse[];
}
export interface RequestEvents {
    /** Requests the authed user have sent to users */
    outgoing: Requests | undefined;
    /** Requests the authed user have received from users */
    incoming: Requests | undefined;
}
export interface AcceptResponse {
    user: User | undefined;
}
export interface AcceptPayload {
    user: User | undefined;
}
export interface RejectResponse {
    user: User | undefined;
}
export interface RejectPayload {
    user: User | undefined;
}
export interface DeleteResponse {
    user: User | undefined;
}
export interface DeletePayload {
    user: User | undefined;
}
export interface CancelResponse {
    user: User | undefined;
}
export interface CancelPayload {
    user: User | undefined;
}
export interface UpdateFriendshipPayload {
    event: FriendshipEventPayload | undefined;
    /** For internal use only, subject to change. */
    authToken?: Payload | undefined;
}
export interface MutualFriendsPayload {
    user: User | undefined;
    /** For internal use only, subject to change. */
    authToken?: Payload | undefined;
}
export interface Payload {
    /** For internal use only, subject to change. */
    synapseToken?: string | undefined;
}
export interface BadRequestError {
    message: string;
}
export interface UnauthorizedError {
    message: string;
}
export interface ForbiddenError {
    message: string;
}
export interface TooManyRequestsError {
    message: string;
}
export interface InternalServerError {
    message: string;
}
export interface UsersResponse {
    response?: {
        $case: "users";
        users: Users;
    } | {
        $case: "internalServerError";
        internalServerError: InternalServerError;
    } | {
        $case: "unauthorizedError";
        unauthorizedError: UnauthorizedError;
    } | {
        $case: "forbiddenError";
        forbiddenError: ForbiddenError;
    } | {
        $case: "tooManyRequestsError";
        tooManyRequestsError: TooManyRequestsError;
    } | {
        $case: "badRequestError";
        badRequestError: BadRequestError;
    } | undefined;
}
export interface RequestEventsResponse {
    response?: {
        $case: "events";
        events: RequestEvents;
    } | {
        $case: "internalServerError";
        internalServerError: InternalServerError;
    } | {
        $case: "unauthorizedError";
        unauthorizedError: UnauthorizedError;
    } | {
        $case: "forbiddenError";
        forbiddenError: ForbiddenError;
    } | {
        $case: "tooManyRequestsError";
        tooManyRequestsError: TooManyRequestsError;
    } | undefined;
}
export interface UpdateFriendshipResponse {
    response?: {
        $case: "event";
        event: FriendshipEventResponse;
    } | {
        $case: "internalServerError";
        internalServerError: InternalServerError;
    } | {
        $case: "unauthorizedError";
        unauthorizedError: UnauthorizedError;
    } | {
        $case: "forbiddenError";
        forbiddenError: ForbiddenError;
    } | {
        $case: "tooManyRequestsError";
        tooManyRequestsError: TooManyRequestsError;
    } | {
        $case: "badRequestError";
        badRequestError: BadRequestError;
    } | undefined;
}
export interface SubscribeFriendshipEventsUpdatesResponse {
    response?: {
        $case: "events";
        events: FriendshipEventResponses;
    } | {
        $case: "internalServerError";
        internalServerError: InternalServerError;
    } | {
        $case: "unauthorizedError";
        unauthorizedError: UnauthorizedError;
    } | {
        $case: "forbiddenError";
        forbiddenError: ForbiddenError;
    } | {
        $case: "tooManyRequestsError";
        tooManyRequestsError: TooManyRequestsError;
    } | undefined;
}
export declare namespace FriendshipEventResponse {
    function encode(message: FriendshipEventResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FriendshipEventResponse;
    function fromJSON(object: any): FriendshipEventResponse;
    function toJSON(message: FriendshipEventResponse): unknown;
    function create<I extends Exact<DeepPartial<FriendshipEventResponse>, I>>(base?: I): FriendshipEventResponse;
    function fromPartial<I extends Exact<DeepPartial<FriendshipEventResponse>, I>>(object: I): FriendshipEventResponse;
}
export declare namespace FriendshipEventResponses {
    function encode(message: FriendshipEventResponses, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FriendshipEventResponses;
    function fromJSON(object: any): FriendshipEventResponses;
    function toJSON(message: FriendshipEventResponses): unknown;
    function create<I extends Exact<DeepPartial<FriendshipEventResponses>, I>>(base?: I): FriendshipEventResponses;
    function fromPartial<I extends Exact<DeepPartial<FriendshipEventResponses>, I>>(object: I): FriendshipEventResponses;
}
export declare namespace FriendshipEventPayload {
    function encode(message: FriendshipEventPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FriendshipEventPayload;
    function fromJSON(object: any): FriendshipEventPayload;
    function toJSON(message: FriendshipEventPayload): unknown;
    function create<I extends Exact<DeepPartial<FriendshipEventPayload>, I>>(base?: I): FriendshipEventPayload;
    function fromPartial<I extends Exact<DeepPartial<FriendshipEventPayload>, I>>(object: I): FriendshipEventPayload;
}
export declare namespace User {
    function encode(message: User, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): User;
    function fromJSON(object: any): User;
    function toJSON(message: User): unknown;
    function create<I extends Exact<DeepPartial<User>, I>>(base?: I): User;
    function fromPartial<I extends Exact<DeepPartial<User>, I>>(object: I): User;
}
export declare namespace Users {
    function encode(message: Users, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Users;
    function fromJSON(object: any): Users;
    function toJSON(message: Users): unknown;
    function create<I extends Exact<DeepPartial<Users>, I>>(base?: I): Users;
    function fromPartial<I extends Exact<DeepPartial<Users>, I>>(object: I): Users;
}
export declare namespace RequestResponse {
    function encode(message: RequestResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RequestResponse;
    function fromJSON(object: any): RequestResponse;
    function toJSON(message: RequestResponse): unknown;
    function create<I extends Exact<DeepPartial<RequestResponse>, I>>(base?: I): RequestResponse;
    function fromPartial<I extends Exact<DeepPartial<RequestResponse>, I>>(object: I): RequestResponse;
}
export declare namespace RequestPayload {
    function encode(message: RequestPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RequestPayload;
    function fromJSON(object: any): RequestPayload;
    function toJSON(message: RequestPayload): unknown;
    function create<I extends Exact<DeepPartial<RequestPayload>, I>>(base?: I): RequestPayload;
    function fromPartial<I extends Exact<DeepPartial<RequestPayload>, I>>(object: I): RequestPayload;
}
export declare namespace Requests {
    function encode(message: Requests, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Requests;
    function fromJSON(object: any): Requests;
    function toJSON(message: Requests): unknown;
    function create<I extends Exact<DeepPartial<Requests>, I>>(base?: I): Requests;
    function fromPartial<I extends Exact<DeepPartial<Requests>, I>>(object: I): Requests;
}
export declare namespace RequestEvents {
    function encode(message: RequestEvents, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RequestEvents;
    function fromJSON(object: any): RequestEvents;
    function toJSON(message: RequestEvents): unknown;
    function create<I extends Exact<DeepPartial<RequestEvents>, I>>(base?: I): RequestEvents;
    function fromPartial<I extends Exact<DeepPartial<RequestEvents>, I>>(object: I): RequestEvents;
}
export declare namespace AcceptResponse {
    function encode(message: AcceptResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AcceptResponse;
    function fromJSON(object: any): AcceptResponse;
    function toJSON(message: AcceptResponse): unknown;
    function create<I extends Exact<DeepPartial<AcceptResponse>, I>>(base?: I): AcceptResponse;
    function fromPartial<I extends Exact<DeepPartial<AcceptResponse>, I>>(object: I): AcceptResponse;
}
export declare namespace AcceptPayload {
    function encode(message: AcceptPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AcceptPayload;
    function fromJSON(object: any): AcceptPayload;
    function toJSON(message: AcceptPayload): unknown;
    function create<I extends Exact<DeepPartial<AcceptPayload>, I>>(base?: I): AcceptPayload;
    function fromPartial<I extends Exact<DeepPartial<AcceptPayload>, I>>(object: I): AcceptPayload;
}
export declare namespace RejectResponse {
    function encode(message: RejectResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RejectResponse;
    function fromJSON(object: any): RejectResponse;
    function toJSON(message: RejectResponse): unknown;
    function create<I extends Exact<DeepPartial<RejectResponse>, I>>(base?: I): RejectResponse;
    function fromPartial<I extends Exact<DeepPartial<RejectResponse>, I>>(object: I): RejectResponse;
}
export declare namespace RejectPayload {
    function encode(message: RejectPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RejectPayload;
    function fromJSON(object: any): RejectPayload;
    function toJSON(message: RejectPayload): unknown;
    function create<I extends Exact<DeepPartial<RejectPayload>, I>>(base?: I): RejectPayload;
    function fromPartial<I extends Exact<DeepPartial<RejectPayload>, I>>(object: I): RejectPayload;
}
export declare namespace DeleteResponse {
    function encode(message: DeleteResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): DeleteResponse;
    function fromJSON(object: any): DeleteResponse;
    function toJSON(message: DeleteResponse): unknown;
    function create<I extends Exact<DeepPartial<DeleteResponse>, I>>(base?: I): DeleteResponse;
    function fromPartial<I extends Exact<DeepPartial<DeleteResponse>, I>>(object: I): DeleteResponse;
}
export declare namespace DeletePayload {
    function encode(message: DeletePayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): DeletePayload;
    function fromJSON(object: any): DeletePayload;
    function toJSON(message: DeletePayload): unknown;
    function create<I extends Exact<DeepPartial<DeletePayload>, I>>(base?: I): DeletePayload;
    function fromPartial<I extends Exact<DeepPartial<DeletePayload>, I>>(object: I): DeletePayload;
}
export declare namespace CancelResponse {
    function encode(message: CancelResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): CancelResponse;
    function fromJSON(object: any): CancelResponse;
    function toJSON(message: CancelResponse): unknown;
    function create<I extends Exact<DeepPartial<CancelResponse>, I>>(base?: I): CancelResponse;
    function fromPartial<I extends Exact<DeepPartial<CancelResponse>, I>>(object: I): CancelResponse;
}
export declare namespace CancelPayload {
    function encode(message: CancelPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): CancelPayload;
    function fromJSON(object: any): CancelPayload;
    function toJSON(message: CancelPayload): unknown;
    function create<I extends Exact<DeepPartial<CancelPayload>, I>>(base?: I): CancelPayload;
    function fromPartial<I extends Exact<DeepPartial<CancelPayload>, I>>(object: I): CancelPayload;
}
export declare namespace UpdateFriendshipPayload {
    function encode(message: UpdateFriendshipPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UpdateFriendshipPayload;
    function fromJSON(object: any): UpdateFriendshipPayload;
    function toJSON(message: UpdateFriendshipPayload): unknown;
    function create<I extends Exact<DeepPartial<UpdateFriendshipPayload>, I>>(base?: I): UpdateFriendshipPayload;
    function fromPartial<I extends Exact<DeepPartial<UpdateFriendshipPayload>, I>>(object: I): UpdateFriendshipPayload;
}
export declare namespace MutualFriendsPayload {
    function encode(message: MutualFriendsPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): MutualFriendsPayload;
    function fromJSON(object: any): MutualFriendsPayload;
    function toJSON(message: MutualFriendsPayload): unknown;
    function create<I extends Exact<DeepPartial<MutualFriendsPayload>, I>>(base?: I): MutualFriendsPayload;
    function fromPartial<I extends Exact<DeepPartial<MutualFriendsPayload>, I>>(object: I): MutualFriendsPayload;
}
export declare namespace Payload {
    function encode(message: Payload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Payload;
    function fromJSON(object: any): Payload;
    function toJSON(message: Payload): unknown;
    function create<I extends Exact<DeepPartial<Payload>, I>>(base?: I): Payload;
    function fromPartial<I extends Exact<DeepPartial<Payload>, I>>(object: I): Payload;
}
export declare namespace BadRequestError {
    function encode(message: BadRequestError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): BadRequestError;
    function fromJSON(object: any): BadRequestError;
    function toJSON(message: BadRequestError): unknown;
    function create<I extends Exact<DeepPartial<BadRequestError>, I>>(base?: I): BadRequestError;
    function fromPartial<I extends Exact<DeepPartial<BadRequestError>, I>>(object: I): BadRequestError;
}
export declare namespace UnauthorizedError {
    function encode(message: UnauthorizedError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UnauthorizedError;
    function fromJSON(object: any): UnauthorizedError;
    function toJSON(message: UnauthorizedError): unknown;
    function create<I extends Exact<DeepPartial<UnauthorizedError>, I>>(base?: I): UnauthorizedError;
    function fromPartial<I extends Exact<DeepPartial<UnauthorizedError>, I>>(object: I): UnauthorizedError;
}
export declare namespace ForbiddenError {
    function encode(message: ForbiddenError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ForbiddenError;
    function fromJSON(object: any): ForbiddenError;
    function toJSON(message: ForbiddenError): unknown;
    function create<I extends Exact<DeepPartial<ForbiddenError>, I>>(base?: I): ForbiddenError;
    function fromPartial<I extends Exact<DeepPartial<ForbiddenError>, I>>(object: I): ForbiddenError;
}
export declare namespace TooManyRequestsError {
    function encode(message: TooManyRequestsError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): TooManyRequestsError;
    function fromJSON(object: any): TooManyRequestsError;
    function toJSON(message: TooManyRequestsError): unknown;
    function create<I extends Exact<DeepPartial<TooManyRequestsError>, I>>(base?: I): TooManyRequestsError;
    function fromPartial<I extends Exact<DeepPartial<TooManyRequestsError>, I>>(object: I): TooManyRequestsError;
}
export declare namespace InternalServerError {
    function encode(message: InternalServerError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): InternalServerError;
    function fromJSON(object: any): InternalServerError;
    function toJSON(message: InternalServerError): unknown;
    function create<I extends Exact<DeepPartial<InternalServerError>, I>>(base?: I): InternalServerError;
    function fromPartial<I extends Exact<DeepPartial<InternalServerError>, I>>(object: I): InternalServerError;
}
export declare namespace UsersResponse {
    function encode(message: UsersResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UsersResponse;
    function fromJSON(object: any): UsersResponse;
    function toJSON(message: UsersResponse): unknown;
    function create<I extends Exact<DeepPartial<UsersResponse>, I>>(base?: I): UsersResponse;
    function fromPartial<I extends Exact<DeepPartial<UsersResponse>, I>>(object: I): UsersResponse;
}
export declare namespace RequestEventsResponse {
    function encode(message: RequestEventsResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RequestEventsResponse;
    function fromJSON(object: any): RequestEventsResponse;
    function toJSON(message: RequestEventsResponse): unknown;
    function create<I extends Exact<DeepPartial<RequestEventsResponse>, I>>(base?: I): RequestEventsResponse;
    function fromPartial<I extends Exact<DeepPartial<RequestEventsResponse>, I>>(object: I): RequestEventsResponse;
}
export declare namespace UpdateFriendshipResponse {
    function encode(message: UpdateFriendshipResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UpdateFriendshipResponse;
    function fromJSON(object: any): UpdateFriendshipResponse;
    function toJSON(message: UpdateFriendshipResponse): unknown;
    function create<I extends Exact<DeepPartial<UpdateFriendshipResponse>, I>>(base?: I): UpdateFriendshipResponse;
    function fromPartial<I extends Exact<DeepPartial<UpdateFriendshipResponse>, I>>(object: I): UpdateFriendshipResponse;
}
export declare namespace SubscribeFriendshipEventsUpdatesResponse {
    function encode(message: SubscribeFriendshipEventsUpdatesResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): SubscribeFriendshipEventsUpdatesResponse;
    function fromJSON(object: any): SubscribeFriendshipEventsUpdatesResponse;
    function toJSON(message: SubscribeFriendshipEventsUpdatesResponse): unknown;
    function create<I extends Exact<DeepPartial<SubscribeFriendshipEventsUpdatesResponse>, I>>(base?: I): SubscribeFriendshipEventsUpdatesResponse;
    function fromPartial<I extends Exact<DeepPartial<SubscribeFriendshipEventsUpdatesResponse>, I>>(object: I): SubscribeFriendshipEventsUpdatesResponse;
}
export type FriendshipsServiceDefinition = typeof FriendshipsServiceDefinition;
export declare const FriendshipsServiceDefinition: {
    readonly name: "FriendshipsService";
    readonly fullName: "decentraland.social.friendships.FriendshipsService";
    readonly methods: {
        /** Get the list of friends for the authenticated user */
        readonly getFriends: {
            readonly name: "GetFriends";
            readonly requestType: typeof Payload;
            readonly requestStream: false;
            readonly responseType: typeof UsersResponse;
            readonly responseStream: true;
            readonly options: {};
        };
        /** Get the list of mutual friends between the authenticated user and the one in the parameter */
        readonly getMutualFriends: {
            readonly name: "GetMutualFriends";
            readonly requestType: typeof MutualFriendsPayload;
            readonly requestStream: false;
            readonly responseType: typeof UsersResponse;
            readonly responseStream: true;
            readonly options: {};
        };
        /** Get the list of request events for the authenticated user */
        readonly getRequestEvents: {
            readonly name: "GetRequestEvents";
            readonly requestType: typeof Payload;
            readonly requestStream: false;
            readonly responseType: typeof RequestEventsResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        /** Update friendship status: REQUEST, ACCEPT, REJECT, CANCEL, DELETE */
        readonly updateFriendshipEvent: {
            readonly name: "UpdateFriendshipEvent";
            readonly requestType: typeof UpdateFriendshipPayload;
            readonly requestStream: false;
            readonly responseType: typeof UpdateFriendshipResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        /** Subscribe to updates of friendship status: REQUEST, ACCEPT, REJECT, CANCEL, DELETE */
        readonly subscribeFriendshipEventsUpdates: {
            readonly name: "SubscribeFriendshipEventsUpdates";
            readonly requestType: typeof Payload;
            readonly requestStream: false;
            readonly responseType: typeof SubscribeFriendshipEventsUpdatesResponse;
            readonly responseStream: true;
            readonly options: {};
        };
    };
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
