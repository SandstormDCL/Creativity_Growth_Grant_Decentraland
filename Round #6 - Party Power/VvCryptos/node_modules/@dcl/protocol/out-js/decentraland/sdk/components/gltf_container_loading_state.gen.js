"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBGltfContainerLoadingState = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const loading_state_gen_1 = require("./common/loading_state.gen");
exports.protobufPackage = "decentraland.sdk.components";
function createBasePBGltfContainerLoadingState() {
    return { currentState: 0 };
}
var PBGltfContainerLoadingState;
(function (PBGltfContainerLoadingState) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.currentState !== 0) {
            writer.uint32(8).int32(message.currentState);
        }
        return writer;
    }
    PBGltfContainerLoadingState.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBGltfContainerLoadingState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.currentState = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBGltfContainerLoadingState.decode = decode;
    function fromJSON(object) {
        return { currentState: isSet(object.currentState) ? (0, loading_state_gen_1.loadingStateFromJSON)(object.currentState) : 0 };
    }
    PBGltfContainerLoadingState.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.currentState !== undefined && (obj.currentState = (0, loading_state_gen_1.loadingStateToJSON)(message.currentState));
        return obj;
    }
    PBGltfContainerLoadingState.toJSON = toJSON;
    function create(base) {
        return PBGltfContainerLoadingState.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBGltfContainerLoadingState.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePBGltfContainerLoadingState();
        message.currentState = (_a = object.currentState) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
    PBGltfContainerLoadingState.fromPartial = fromPartial;
})(PBGltfContainerLoadingState || (exports.PBGltfContainerLoadingState = PBGltfContainerLoadingState = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=gltf_container_loading_state.gen.js.map