"use strict";
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Font = exports.TextAlignMode = exports.protobufPackage = void 0;
exports.textAlignModeFromJSON = textAlignModeFromJSON;
exports.textAlignModeToJSON = textAlignModeToJSON;
exports.fontFromJSON = fontFromJSON;
exports.fontToJSON = fontToJSON;
exports.protobufPackage = "decentraland.sdk.components.common";
var TextAlignMode;
(function (TextAlignMode) {
    TextAlignMode[TextAlignMode["TAM_TOP_LEFT"] = 0] = "TAM_TOP_LEFT";
    TextAlignMode[TextAlignMode["TAM_TOP_CENTER"] = 1] = "TAM_TOP_CENTER";
    TextAlignMode[TextAlignMode["TAM_TOP_RIGHT"] = 2] = "TAM_TOP_RIGHT";
    TextAlignMode[TextAlignMode["TAM_MIDDLE_LEFT"] = 3] = "TAM_MIDDLE_LEFT";
    TextAlignMode[TextAlignMode["TAM_MIDDLE_CENTER"] = 4] = "TAM_MIDDLE_CENTER";
    TextAlignMode[TextAlignMode["TAM_MIDDLE_RIGHT"] = 5] = "TAM_MIDDLE_RIGHT";
    TextAlignMode[TextAlignMode["TAM_BOTTOM_LEFT"] = 6] = "TAM_BOTTOM_LEFT";
    TextAlignMode[TextAlignMode["TAM_BOTTOM_CENTER"] = 7] = "TAM_BOTTOM_CENTER";
    TextAlignMode[TextAlignMode["TAM_BOTTOM_RIGHT"] = 8] = "TAM_BOTTOM_RIGHT";
    TextAlignMode[TextAlignMode["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(TextAlignMode || (exports.TextAlignMode = TextAlignMode = {}));
function textAlignModeFromJSON(object) {
    switch (object) {
        case 0:
        case "TAM_TOP_LEFT":
            return TextAlignMode.TAM_TOP_LEFT;
        case 1:
        case "TAM_TOP_CENTER":
            return TextAlignMode.TAM_TOP_CENTER;
        case 2:
        case "TAM_TOP_RIGHT":
            return TextAlignMode.TAM_TOP_RIGHT;
        case 3:
        case "TAM_MIDDLE_LEFT":
            return TextAlignMode.TAM_MIDDLE_LEFT;
        case 4:
        case "TAM_MIDDLE_CENTER":
            return TextAlignMode.TAM_MIDDLE_CENTER;
        case 5:
        case "TAM_MIDDLE_RIGHT":
            return TextAlignMode.TAM_MIDDLE_RIGHT;
        case 6:
        case "TAM_BOTTOM_LEFT":
            return TextAlignMode.TAM_BOTTOM_LEFT;
        case 7:
        case "TAM_BOTTOM_CENTER":
            return TextAlignMode.TAM_BOTTOM_CENTER;
        case 8:
        case "TAM_BOTTOM_RIGHT":
            return TextAlignMode.TAM_BOTTOM_RIGHT;
        case -1:
        case "UNRECOGNIZED":
        default:
            return TextAlignMode.UNRECOGNIZED;
    }
}
function textAlignModeToJSON(object) {
    switch (object) {
        case TextAlignMode.TAM_TOP_LEFT:
            return "TAM_TOP_LEFT";
        case TextAlignMode.TAM_TOP_CENTER:
            return "TAM_TOP_CENTER";
        case TextAlignMode.TAM_TOP_RIGHT:
            return "TAM_TOP_RIGHT";
        case TextAlignMode.TAM_MIDDLE_LEFT:
            return "TAM_MIDDLE_LEFT";
        case TextAlignMode.TAM_MIDDLE_CENTER:
            return "TAM_MIDDLE_CENTER";
        case TextAlignMode.TAM_MIDDLE_RIGHT:
            return "TAM_MIDDLE_RIGHT";
        case TextAlignMode.TAM_BOTTOM_LEFT:
            return "TAM_BOTTOM_LEFT";
        case TextAlignMode.TAM_BOTTOM_CENTER:
            return "TAM_BOTTOM_CENTER";
        case TextAlignMode.TAM_BOTTOM_RIGHT:
            return "TAM_BOTTOM_RIGHT";
        case TextAlignMode.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
var Font;
(function (Font) {
    Font[Font["F_SANS_SERIF"] = 0] = "F_SANS_SERIF";
    Font[Font["F_SERIF"] = 1] = "F_SERIF";
    Font[Font["F_MONOSPACE"] = 2] = "F_MONOSPACE";
    Font[Font["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Font || (exports.Font = Font = {}));
function fontFromJSON(object) {
    switch (object) {
        case 0:
        case "F_SANS_SERIF":
            return Font.F_SANS_SERIF;
        case 1:
        case "F_SERIF":
            return Font.F_SERIF;
        case 2:
        case "F_MONOSPACE":
            return Font.F_MONOSPACE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return Font.UNRECOGNIZED;
    }
}
function fontToJSON(object) {
    switch (object) {
        case Font.F_SANS_SERIF:
            return "F_SANS_SERIF";
        case Font.F_SERIF:
            return "F_SERIF";
        case Font.F_MONOSPACE:
            return "F_MONOSPACE";
        case Font.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
//# sourceMappingURL=texts.gen.js.map