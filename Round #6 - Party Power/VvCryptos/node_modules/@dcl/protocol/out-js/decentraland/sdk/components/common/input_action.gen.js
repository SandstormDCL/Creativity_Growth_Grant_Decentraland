"use strict";
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PointerEventType = exports.InputAction = exports.protobufPackage = void 0;
exports.inputActionFromJSON = inputActionFromJSON;
exports.inputActionToJSON = inputActionToJSON;
exports.pointerEventTypeFromJSON = pointerEventTypeFromJSON;
exports.pointerEventTypeToJSON = pointerEventTypeToJSON;
exports.protobufPackage = "decentraland.sdk.components.common";
var InputAction;
(function (InputAction) {
    InputAction[InputAction["IA_POINTER"] = 0] = "IA_POINTER";
    InputAction[InputAction["IA_PRIMARY"] = 1] = "IA_PRIMARY";
    InputAction[InputAction["IA_SECONDARY"] = 2] = "IA_SECONDARY";
    InputAction[InputAction["IA_ANY"] = 3] = "IA_ANY";
    InputAction[InputAction["IA_FORWARD"] = 4] = "IA_FORWARD";
    InputAction[InputAction["IA_BACKWARD"] = 5] = "IA_BACKWARD";
    InputAction[InputAction["IA_RIGHT"] = 6] = "IA_RIGHT";
    InputAction[InputAction["IA_LEFT"] = 7] = "IA_LEFT";
    InputAction[InputAction["IA_JUMP"] = 8] = "IA_JUMP";
    InputAction[InputAction["IA_WALK"] = 9] = "IA_WALK";
    InputAction[InputAction["IA_ACTION_3"] = 10] = "IA_ACTION_3";
    InputAction[InputAction["IA_ACTION_4"] = 11] = "IA_ACTION_4";
    InputAction[InputAction["IA_ACTION_5"] = 12] = "IA_ACTION_5";
    InputAction[InputAction["IA_ACTION_6"] = 13] = "IA_ACTION_6";
    InputAction[InputAction["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(InputAction || (exports.InputAction = InputAction = {}));
function inputActionFromJSON(object) {
    switch (object) {
        case 0:
        case "IA_POINTER":
            return InputAction.IA_POINTER;
        case 1:
        case "IA_PRIMARY":
            return InputAction.IA_PRIMARY;
        case 2:
        case "IA_SECONDARY":
            return InputAction.IA_SECONDARY;
        case 3:
        case "IA_ANY":
            return InputAction.IA_ANY;
        case 4:
        case "IA_FORWARD":
            return InputAction.IA_FORWARD;
        case 5:
        case "IA_BACKWARD":
            return InputAction.IA_BACKWARD;
        case 6:
        case "IA_RIGHT":
            return InputAction.IA_RIGHT;
        case 7:
        case "IA_LEFT":
            return InputAction.IA_LEFT;
        case 8:
        case "IA_JUMP":
            return InputAction.IA_JUMP;
        case 9:
        case "IA_WALK":
            return InputAction.IA_WALK;
        case 10:
        case "IA_ACTION_3":
            return InputAction.IA_ACTION_3;
        case 11:
        case "IA_ACTION_4":
            return InputAction.IA_ACTION_4;
        case 12:
        case "IA_ACTION_5":
            return InputAction.IA_ACTION_5;
        case 13:
        case "IA_ACTION_6":
            return InputAction.IA_ACTION_6;
        case -1:
        case "UNRECOGNIZED":
        default:
            return InputAction.UNRECOGNIZED;
    }
}
function inputActionToJSON(object) {
    switch (object) {
        case InputAction.IA_POINTER:
            return "IA_POINTER";
        case InputAction.IA_PRIMARY:
            return "IA_PRIMARY";
        case InputAction.IA_SECONDARY:
            return "IA_SECONDARY";
        case InputAction.IA_ANY:
            return "IA_ANY";
        case InputAction.IA_FORWARD:
            return "IA_FORWARD";
        case InputAction.IA_BACKWARD:
            return "IA_BACKWARD";
        case InputAction.IA_RIGHT:
            return "IA_RIGHT";
        case InputAction.IA_LEFT:
            return "IA_LEFT";
        case InputAction.IA_JUMP:
            return "IA_JUMP";
        case InputAction.IA_WALK:
            return "IA_WALK";
        case InputAction.IA_ACTION_3:
            return "IA_ACTION_3";
        case InputAction.IA_ACTION_4:
            return "IA_ACTION_4";
        case InputAction.IA_ACTION_5:
            return "IA_ACTION_5";
        case InputAction.IA_ACTION_6:
            return "IA_ACTION_6";
        case InputAction.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
/** PointerEventType is a kind of interaction that can be detected. */
var PointerEventType;
(function (PointerEventType) {
    PointerEventType[PointerEventType["PET_UP"] = 0] = "PET_UP";
    PointerEventType[PointerEventType["PET_DOWN"] = 1] = "PET_DOWN";
    PointerEventType[PointerEventType["PET_HOVER_ENTER"] = 2] = "PET_HOVER_ENTER";
    PointerEventType[PointerEventType["PET_HOVER_LEAVE"] = 3] = "PET_HOVER_LEAVE";
    PointerEventType[PointerEventType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PointerEventType || (exports.PointerEventType = PointerEventType = {}));
function pointerEventTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "PET_UP":
            return PointerEventType.PET_UP;
        case 1:
        case "PET_DOWN":
            return PointerEventType.PET_DOWN;
        case 2:
        case "PET_HOVER_ENTER":
            return PointerEventType.PET_HOVER_ENTER;
        case 3:
        case "PET_HOVER_LEAVE":
            return PointerEventType.PET_HOVER_LEAVE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PointerEventType.UNRECOGNIZED;
    }
}
function pointerEventTypeToJSON(object) {
    switch (object) {
        case PointerEventType.PET_UP:
            return "PET_UP";
        case PointerEventType.PET_DOWN:
            return "PET_DOWN";
        case PointerEventType.PET_HOVER_ENTER:
            return "PET_HOVER_ENTER";
        case PointerEventType.PET_HOVER_LEAVE:
            return "PET_HOVER_LEAVE";
        case PointerEventType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
//# sourceMappingURL=input_action.gen.js.map