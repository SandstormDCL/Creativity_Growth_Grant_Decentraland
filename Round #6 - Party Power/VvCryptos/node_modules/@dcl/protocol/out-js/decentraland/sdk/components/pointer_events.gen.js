"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBPointerEvents_Entry = exports.PBPointerEvents_Info = exports.PBPointerEvents = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const input_action_gen_1 = require("./common/input_action.gen");
exports.protobufPackage = "decentraland.sdk.components";
function createBasePBPointerEvents() {
    return { pointerEvents: [] };
}
var PBPointerEvents;
(function (PBPointerEvents) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        for (const v of message.pointerEvents) {
            PBPointerEvents_Entry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    }
    PBPointerEvents.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.pointerEvents.push(PBPointerEvents_Entry.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents.decode = decode;
    function fromJSON(object) {
        return {
            pointerEvents: Array.isArray(object === null || object === void 0 ? void 0 : object.pointerEvents)
                ? object.pointerEvents.map((e) => PBPointerEvents_Entry.fromJSON(e))
                : [],
        };
    }
    PBPointerEvents.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        if (message.pointerEvents) {
            obj.pointerEvents = message.pointerEvents.map((e) => e ? PBPointerEvents_Entry.toJSON(e) : undefined);
        }
        else {
            obj.pointerEvents = [];
        }
        return obj;
    }
    PBPointerEvents.toJSON = toJSON;
    function create(base) {
        return PBPointerEvents.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBPointerEvents.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePBPointerEvents();
        message.pointerEvents = ((_a = object.pointerEvents) === null || _a === void 0 ? void 0 : _a.map((e) => PBPointerEvents_Entry.fromPartial(e))) || [];
        return message;
    }
    PBPointerEvents.fromPartial = fromPartial;
})(PBPointerEvents || (exports.PBPointerEvents = PBPointerEvents = {}));
function createBasePBPointerEvents_Info() {
    return {
        button: undefined,
        hoverText: undefined,
        maxDistance: undefined,
        showFeedback: undefined,
        showHighlight: undefined,
    };
}
var PBPointerEvents_Info;
(function (PBPointerEvents_Info) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.button !== undefined) {
            writer.uint32(8).int32(message.button);
        }
        if (message.hoverText !== undefined) {
            writer.uint32(18).string(message.hoverText);
        }
        if (message.maxDistance !== undefined) {
            writer.uint32(29).float(message.maxDistance);
        }
        if (message.showFeedback !== undefined) {
            writer.uint32(32).bool(message.showFeedback);
        }
        if (message.showHighlight !== undefined) {
            writer.uint32(40).bool(message.showHighlight);
        }
        return writer;
    }
    PBPointerEvents_Info.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents_Info();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.button = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.hoverText = reader.string();
                    continue;
                case 3:
                    if (tag !== 29) {
                        break;
                    }
                    message.maxDistance = reader.float();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.showFeedback = reader.bool();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.showHighlight = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents_Info.decode = decode;
    function fromJSON(object) {
        return {
            button: isSet(object.button) ? (0, input_action_gen_1.inputActionFromJSON)(object.button) : undefined,
            hoverText: isSet(object.hoverText) ? String(object.hoverText) : undefined,
            maxDistance: isSet(object.maxDistance) ? Number(object.maxDistance) : undefined,
            showFeedback: isSet(object.showFeedback) ? Boolean(object.showFeedback) : undefined,
            showHighlight: isSet(object.showHighlight) ? Boolean(object.showHighlight) : undefined,
        };
    }
    PBPointerEvents_Info.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.button !== undefined &&
            (obj.button = message.button !== undefined ? (0, input_action_gen_1.inputActionToJSON)(message.button) : undefined);
        message.hoverText !== undefined && (obj.hoverText = message.hoverText);
        message.maxDistance !== undefined && (obj.maxDistance = message.maxDistance);
        message.showFeedback !== undefined && (obj.showFeedback = message.showFeedback);
        message.showHighlight !== undefined && (obj.showHighlight = message.showHighlight);
        return obj;
    }
    PBPointerEvents_Info.toJSON = toJSON;
    function create(base) {
        return PBPointerEvents_Info.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBPointerEvents_Info.create = create;
    function fromPartial(object) {
        var _a, _b, _c, _d, _e;
        const message = createBasePBPointerEvents_Info();
        message.button = (_a = object.button) !== null && _a !== void 0 ? _a : undefined;
        message.hoverText = (_b = object.hoverText) !== null && _b !== void 0 ? _b : undefined;
        message.maxDistance = (_c = object.maxDistance) !== null && _c !== void 0 ? _c : undefined;
        message.showFeedback = (_d = object.showFeedback) !== null && _d !== void 0 ? _d : undefined;
        message.showHighlight = (_e = object.showHighlight) !== null && _e !== void 0 ? _e : undefined;
        return message;
    }
    PBPointerEvents_Info.fromPartial = fromPartial;
})(PBPointerEvents_Info || (exports.PBPointerEvents_Info = PBPointerEvents_Info = {}));
function createBasePBPointerEvents_Entry() {
    return { eventType: 0, eventInfo: undefined };
}
var PBPointerEvents_Entry;
(function (PBPointerEvents_Entry) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.eventType !== 0) {
            writer.uint32(8).int32(message.eventType);
        }
        if (message.eventInfo !== undefined) {
            PBPointerEvents_Info.encode(message.eventInfo, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    }
    PBPointerEvents_Entry.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents_Entry();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.eventType = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.eventInfo = PBPointerEvents_Info.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents_Entry.decode = decode;
    function fromJSON(object) {
        return {
            eventType: isSet(object.eventType) ? (0, input_action_gen_1.pointerEventTypeFromJSON)(object.eventType) : 0,
            eventInfo: isSet(object.eventInfo) ? PBPointerEvents_Info.fromJSON(object.eventInfo) : undefined,
        };
    }
    PBPointerEvents_Entry.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.eventType !== undefined && (obj.eventType = (0, input_action_gen_1.pointerEventTypeToJSON)(message.eventType));
        message.eventInfo !== undefined &&
            (obj.eventInfo = message.eventInfo ? PBPointerEvents_Info.toJSON(message.eventInfo) : undefined);
        return obj;
    }
    PBPointerEvents_Entry.toJSON = toJSON;
    function create(base) {
        return PBPointerEvents_Entry.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBPointerEvents_Entry.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePBPointerEvents_Entry();
        message.eventType = (_a = object.eventType) !== null && _a !== void 0 ? _a : 0;
        message.eventInfo = (object.eventInfo !== undefined && object.eventInfo !== null)
            ? PBPointerEvents_Info.fromPartial(object.eventInfo)
            : undefined;
        return message;
    }
    PBPointerEvents_Entry.fromPartial = fromPartial;
})(PBPointerEvents_Entry || (exports.PBPointerEvents_Entry = PBPointerEvents_Entry = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=pointer_events.gen.js.map