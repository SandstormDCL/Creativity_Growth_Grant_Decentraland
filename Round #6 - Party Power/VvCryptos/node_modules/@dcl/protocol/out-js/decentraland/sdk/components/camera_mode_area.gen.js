"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBCameraModeArea = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const vectors_gen_1 = require("../../common/vectors.gen");
const camera_type_gen_1 = require("./common/camera_type.gen");
exports.protobufPackage = "decentraland.sdk.components";
function createBasePBCameraModeArea() {
    return { area: undefined, mode: 0 };
}
var PBCameraModeArea;
(function (PBCameraModeArea) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.area !== undefined) {
            vectors_gen_1.Vector3.encode(message.area, writer.uint32(10).fork()).ldelim();
        }
        if (message.mode !== 0) {
            writer.uint32(16).int32(message.mode);
        }
        return writer;
    }
    PBCameraModeArea.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBCameraModeArea();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.area = vectors_gen_1.Vector3.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.mode = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBCameraModeArea.decode = decode;
    function fromJSON(object) {
        return {
            area: isSet(object.area) ? vectors_gen_1.Vector3.fromJSON(object.area) : undefined,
            mode: isSet(object.mode) ? (0, camera_type_gen_1.cameraTypeFromJSON)(object.mode) : 0,
        };
    }
    PBCameraModeArea.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.area !== undefined && (obj.area = message.area ? vectors_gen_1.Vector3.toJSON(message.area) : undefined);
        message.mode !== undefined && (obj.mode = (0, camera_type_gen_1.cameraTypeToJSON)(message.mode));
        return obj;
    }
    PBCameraModeArea.toJSON = toJSON;
    function create(base) {
        return PBCameraModeArea.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBCameraModeArea.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePBCameraModeArea();
        message.area = (object.area !== undefined && object.area !== null) ? vectors_gen_1.Vector3.fromPartial(object.area) : undefined;
        message.mode = (_a = object.mode) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
    PBCameraModeArea.fromPartial = fromPartial;
})(PBCameraModeArea || (exports.PBCameraModeArea = PBCameraModeArea = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=camera_mode_area.gen.js.map