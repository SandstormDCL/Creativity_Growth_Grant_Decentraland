"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBVisibilityComponent = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "decentraland.sdk.components";
function createBasePBVisibilityComponent() {
    return { visible: undefined };
}
var PBVisibilityComponent;
(function (PBVisibilityComponent) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.visible !== undefined) {
            writer.uint32(8).bool(message.visible);
        }
        return writer;
    }
    PBVisibilityComponent.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBVisibilityComponent();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.visible = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBVisibilityComponent.decode = decode;
    function fromJSON(object) {
        return { visible: isSet(object.visible) ? Boolean(object.visible) : undefined };
    }
    PBVisibilityComponent.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.visible !== undefined && (obj.visible = message.visible);
        return obj;
    }
    PBVisibilityComponent.toJSON = toJSON;
    function create(base) {
        return PBVisibilityComponent.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBVisibilityComponent.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePBVisibilityComponent();
        message.visible = (_a = object.visible) !== null && _a !== void 0 ? _a : undefined;
        return message;
    }
    PBVisibilityComponent.fromPartial = fromPartial;
})(PBVisibilityComponent || (exports.PBVisibilityComponent = PBVisibilityComponent = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=visibility_component.gen.js.map