"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBRealmInfo = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "decentraland.sdk.components";
function createBasePBRealmInfo() {
    return {
        baseUrl: "",
        realmName: "",
        networkId: 0,
        commsAdapter: "",
        isPreview: false,
        room: undefined,
        isConnectedSceneRoom: undefined,
    };
}
var PBRealmInfo;
(function (PBRealmInfo) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.baseUrl !== "") {
            writer.uint32(10).string(message.baseUrl);
        }
        if (message.realmName !== "") {
            writer.uint32(18).string(message.realmName);
        }
        if (message.networkId !== 0) {
            writer.uint32(24).int32(message.networkId);
        }
        if (message.commsAdapter !== "") {
            writer.uint32(34).string(message.commsAdapter);
        }
        if (message.isPreview === true) {
            writer.uint32(40).bool(message.isPreview);
        }
        if (message.room !== undefined) {
            writer.uint32(50).string(message.room);
        }
        if (message.isConnectedSceneRoom !== undefined) {
            writer.uint32(56).bool(message.isConnectedSceneRoom);
        }
        return writer;
    }
    PBRealmInfo.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBRealmInfo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.baseUrl = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.realmName = reader.string();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.networkId = reader.int32();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.commsAdapter = reader.string();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.isPreview = reader.bool();
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.room = reader.string();
                    continue;
                case 7:
                    if (tag !== 56) {
                        break;
                    }
                    message.isConnectedSceneRoom = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBRealmInfo.decode = decode;
    function fromJSON(object) {
        return {
            baseUrl: isSet(object.baseUrl) ? String(object.baseUrl) : "",
            realmName: isSet(object.realmName) ? String(object.realmName) : "",
            networkId: isSet(object.networkId) ? Number(object.networkId) : 0,
            commsAdapter: isSet(object.commsAdapter) ? String(object.commsAdapter) : "",
            isPreview: isSet(object.isPreview) ? Boolean(object.isPreview) : false,
            room: isSet(object.room) ? String(object.room) : undefined,
            isConnectedSceneRoom: isSet(object.isConnectedSceneRoom) ? Boolean(object.isConnectedSceneRoom) : undefined,
        };
    }
    PBRealmInfo.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.baseUrl !== undefined && (obj.baseUrl = message.baseUrl);
        message.realmName !== undefined && (obj.realmName = message.realmName);
        message.networkId !== undefined && (obj.networkId = Math.round(message.networkId));
        message.commsAdapter !== undefined && (obj.commsAdapter = message.commsAdapter);
        message.isPreview !== undefined && (obj.isPreview = message.isPreview);
        message.room !== undefined && (obj.room = message.room);
        message.isConnectedSceneRoom !== undefined && (obj.isConnectedSceneRoom = message.isConnectedSceneRoom);
        return obj;
    }
    PBRealmInfo.toJSON = toJSON;
    function create(base) {
        return PBRealmInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBRealmInfo.create = create;
    function fromPartial(object) {
        var _a, _b, _c, _d, _e, _f, _g;
        const message = createBasePBRealmInfo();
        message.baseUrl = (_a = object.baseUrl) !== null && _a !== void 0 ? _a : "";
        message.realmName = (_b = object.realmName) !== null && _b !== void 0 ? _b : "";
        message.networkId = (_c = object.networkId) !== null && _c !== void 0 ? _c : 0;
        message.commsAdapter = (_d = object.commsAdapter) !== null && _d !== void 0 ? _d : "";
        message.isPreview = (_e = object.isPreview) !== null && _e !== void 0 ? _e : false;
        message.room = (_f = object.room) !== null && _f !== void 0 ? _f : undefined;
        message.isConnectedSceneRoom = (_g = object.isConnectedSceneRoom) !== null && _g !== void 0 ? _g : undefined;
        return message;
    }
    PBRealmInfo.fromPartial = fromPartial;
})(PBRealmInfo || (exports.PBRealmInfo = PBRealmInfo = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=realm_info.gen.js.map