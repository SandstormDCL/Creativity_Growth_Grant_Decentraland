"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBAvatarModifierArea = exports.AvatarModifierType = exports.protobufPackage = void 0;
exports.avatarModifierTypeFromJSON = avatarModifierTypeFromJSON;
exports.avatarModifierTypeToJSON = avatarModifierTypeToJSON;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const vectors_gen_1 = require("../../common/vectors.gen");
exports.protobufPackage = "decentraland.sdk.components";
/** AvatarModifierType is an effect that should be applied to avatars inside the region. */
var AvatarModifierType;
(function (AvatarModifierType) {
    /** AMT_HIDE_AVATARS - avatars are invisible */
    AvatarModifierType[AvatarModifierType["AMT_HIDE_AVATARS"] = 0] = "AMT_HIDE_AVATARS";
    /** AMT_DISABLE_PASSPORTS - selecting (e.g. clicking) an avatar will not bring up their profile. */
    AvatarModifierType[AvatarModifierType["AMT_DISABLE_PASSPORTS"] = 1] = "AMT_DISABLE_PASSPORTS";
    AvatarModifierType[AvatarModifierType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(AvatarModifierType || (exports.AvatarModifierType = AvatarModifierType = {}));
function avatarModifierTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "AMT_HIDE_AVATARS":
            return AvatarModifierType.AMT_HIDE_AVATARS;
        case 1:
        case "AMT_DISABLE_PASSPORTS":
            return AvatarModifierType.AMT_DISABLE_PASSPORTS;
        case -1:
        case "UNRECOGNIZED":
        default:
            return AvatarModifierType.UNRECOGNIZED;
    }
}
function avatarModifierTypeToJSON(object) {
    switch (object) {
        case AvatarModifierType.AMT_HIDE_AVATARS:
            return "AMT_HIDE_AVATARS";
        case AvatarModifierType.AMT_DISABLE_PASSPORTS:
            return "AMT_DISABLE_PASSPORTS";
        case AvatarModifierType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBasePBAvatarModifierArea() {
    return { area: undefined, excludeIds: [], modifiers: [] };
}
var PBAvatarModifierArea;
(function (PBAvatarModifierArea) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.area !== undefined) {
            vectors_gen_1.Vector3.encode(message.area, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.excludeIds) {
            writer.uint32(18).string(v);
        }
        writer.uint32(26).fork();
        for (const v of message.modifiers) {
            writer.int32(v);
        }
        writer.ldelim();
        return writer;
    }
    PBAvatarModifierArea.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBAvatarModifierArea();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.area = vectors_gen_1.Vector3.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.excludeIds.push(reader.string());
                    continue;
                case 3:
                    if (tag === 24) {
                        message.modifiers.push(reader.int32());
                        continue;
                    }
                    if (tag === 26) {
                        const end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.modifiers.push(reader.int32());
                        }
                        continue;
                    }
                    break;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBAvatarModifierArea.decode = decode;
    function fromJSON(object) {
        return {
            area: isSet(object.area) ? vectors_gen_1.Vector3.fromJSON(object.area) : undefined,
            excludeIds: Array.isArray(object === null || object === void 0 ? void 0 : object.excludeIds) ? object.excludeIds.map((e) => String(e)) : [],
            modifiers: Array.isArray(object === null || object === void 0 ? void 0 : object.modifiers)
                ? object.modifiers.map((e) => avatarModifierTypeFromJSON(e))
                : [],
        };
    }
    PBAvatarModifierArea.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.area !== undefined && (obj.area = message.area ? vectors_gen_1.Vector3.toJSON(message.area) : undefined);
        if (message.excludeIds) {
            obj.excludeIds = message.excludeIds.map((e) => e);
        }
        else {
            obj.excludeIds = [];
        }
        if (message.modifiers) {
            obj.modifiers = message.modifiers.map((e) => avatarModifierTypeToJSON(e));
        }
        else {
            obj.modifiers = [];
        }
        return obj;
    }
    PBAvatarModifierArea.toJSON = toJSON;
    function create(base) {
        return PBAvatarModifierArea.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBAvatarModifierArea.create = create;
    function fromPartial(object) {
        var _a, _b;
        const message = createBasePBAvatarModifierArea();
        message.area = (object.area !== undefined && object.area !== null) ? vectors_gen_1.Vector3.fromPartial(object.area) : undefined;
        message.excludeIds = ((_a = object.excludeIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];
        message.modifiers = ((_b = object.modifiers) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];
        return message;
    }
    PBAvatarModifierArea.fromPartial = fromPartial;
})(PBAvatarModifierArea || (exports.PBAvatarModifierArea = PBAvatarModifierArea = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=avatar_modifier_area.gen.js.map