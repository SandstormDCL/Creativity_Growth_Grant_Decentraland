"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PBTweenSequence = exports.TweenLoop = exports.protobufPackage = void 0;
exports.tweenLoopFromJSON = tweenLoopFromJSON;
exports.tweenLoopToJSON = tweenLoopToJSON;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const tween_gen_1 = require("./tween.gen");
exports.protobufPackage = "decentraland.sdk.components";
var TweenLoop;
(function (TweenLoop) {
    TweenLoop[TweenLoop["TL_RESTART"] = 0] = "TL_RESTART";
    TweenLoop[TweenLoop["TL_YOYO"] = 1] = "TL_YOYO";
    TweenLoop[TweenLoop["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(TweenLoop || (exports.TweenLoop = TweenLoop = {}));
function tweenLoopFromJSON(object) {
    switch (object) {
        case 0:
        case "TL_RESTART":
            return TweenLoop.TL_RESTART;
        case 1:
        case "TL_YOYO":
            return TweenLoop.TL_YOYO;
        case -1:
        case "UNRECOGNIZED":
        default:
            return TweenLoop.UNRECOGNIZED;
    }
}
function tweenLoopToJSON(object) {
    switch (object) {
        case TweenLoop.TL_RESTART:
            return "TL_RESTART";
        case TweenLoop.TL_YOYO:
            return "TL_YOYO";
        case TweenLoop.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBasePBTweenSequence() {
    return { sequence: [], loop: undefined };
}
var PBTweenSequence;
(function (PBTweenSequence) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        for (const v of message.sequence) {
            tween_gen_1.PBTween.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.loop !== undefined) {
            writer.uint32(16).int32(message.loop);
        }
        return writer;
    }
    PBTweenSequence.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBTweenSequence();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.sequence.push(tween_gen_1.PBTween.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.loop = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBTweenSequence.decode = decode;
    function fromJSON(object) {
        return {
            sequence: Array.isArray(object === null || object === void 0 ? void 0 : object.sequence) ? object.sequence.map((e) => tween_gen_1.PBTween.fromJSON(e)) : [],
            loop: isSet(object.loop) ? tweenLoopFromJSON(object.loop) : undefined,
        };
    }
    PBTweenSequence.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        if (message.sequence) {
            obj.sequence = message.sequence.map((e) => e ? tween_gen_1.PBTween.toJSON(e) : undefined);
        }
        else {
            obj.sequence = [];
        }
        message.loop !== undefined && (obj.loop = message.loop !== undefined ? tweenLoopToJSON(message.loop) : undefined);
        return obj;
    }
    PBTweenSequence.toJSON = toJSON;
    function create(base) {
        return PBTweenSequence.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PBTweenSequence.create = create;
    function fromPartial(object) {
        var _a, _b;
        const message = createBasePBTweenSequence();
        message.sequence = ((_a = object.sequence) === null || _a === void 0 ? void 0 : _a.map((e) => tween_gen_1.PBTween.fromPartial(e))) || [];
        message.loop = (_b = object.loop) !== null && _b !== void 0 ? _b : undefined;
        return message;
    }
    PBTweenSequence.fromPartial = fromPartial;
})(PBTweenSequence || (exports.PBTweenSequence = PBTweenSequence = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=tween_sequence.gen.js.map