import _m0 from "protobufjs/minimal";
import { Vector3 } from "../../common/vectors.gen";
import { ECS6ComponentAnimator, ECS6ComponentAttachToAvatar, ECS6ComponentAudioClip, ECS6ComponentAudioSource, ECS6ComponentAudioStream, ECS6ComponentAvatarModifierArea, ECS6ComponentAvatarShape, ECS6ComponentAvatarTexture, ECS6ComponentBasicMaterial, ECS6ComponentBillboard, ECS6ComponentBoxShape, ECS6ComponentCameraModeArea, ECS6ComponentCircleShape, ECS6ComponentConeShape, ECS6ComponentCylinderShape, ECS6ComponentFont, ECS6ComponentGizmos, ECS6ComponentGltfShape, ECS6ComponentMaterial, ECS6ComponentNftShape, ECS6ComponentObjShape, ECS6ComponentPlaneShape, ECS6ComponentSmartItem, ECS6ComponentSphereShape, ECS6ComponentTextShape, ECS6ComponentTexture, ECS6ComponentTransform, ECS6ComponentUiButton, ECS6ComponentUiContainerRect, ECS6ComponentUiContainerStack, ECS6ComponentUiFullScreenShape, ECS6ComponentUiImage, ECS6ComponentUiInputText, ECS6ComponentUiScreenSpaceShape, ECS6ComponentUiScrollRect, ECS6ComponentUiShape, ECS6ComponentUiText, ECS6ComponentUiWorldSpaceShape, ECS6ComponentUuidCallback, ECS6ComponentVideoClip, ECS6ComponentVideoTexture } from "./components_ecs6.gen";
export declare const protobufPackage = "decentraland.sdk.ecs6";
export interface OpenExternalUrlBody {
    url: string;
}
export interface OpenNFTDialogBody {
    assetContractAddress: string;
    tokenId: string;
    comment?: string | undefined;
}
export interface ComponentBodyPayload {
    payload?: {
        $case: "avatarModifierArea";
        avatarModifierArea: ECS6ComponentAvatarModifierArea;
    } | {
        $case: "transform";
        transform: ECS6ComponentTransform;
    } | {
        $case: "attachToAvatar";
        attachToAvatar: ECS6ComponentAttachToAvatar;
    } | {
        $case: "billboard";
        billboard: ECS6ComponentBillboard;
    } | {
        $case: "boxShape";
        boxShape: ECS6ComponentBoxShape;
    } | {
        $case: "sphereShape";
        sphereShape: ECS6ComponentSphereShape;
    } | {
        $case: "circleShape";
        circleShape: ECS6ComponentCircleShape;
    } | {
        $case: "planeShape";
        planeShape: ECS6ComponentPlaneShape;
    } | {
        $case: "coneShape";
        coneShape: ECS6ComponentConeShape;
    } | {
        $case: "cylinderShape";
        cylinderShape: ECS6ComponentCylinderShape;
    } | {
        $case: "gltfShape";
        gltfShape: ECS6ComponentGltfShape;
    } | {
        $case: "nftShape";
        nftShape: ECS6ComponentNftShape;
    } | {
        $case: "texture";
        texture: ECS6ComponentTexture;
    } | {
        $case: "animator";
        animator: ECS6ComponentAnimator;
    } | {
        $case: "objShape";
        objShape: ECS6ComponentObjShape;
    } | {
        $case: "font";
        font: ECS6ComponentFont;
    } | {
        $case: "textShape";
        textShape: ECS6ComponentTextShape;
    } | {
        $case: "material";
        material: ECS6ComponentMaterial;
    } | {
        $case: "basicMaterial";
        basicMaterial: ECS6ComponentBasicMaterial;
    } | {
        $case: "uuidCallback";
        uuidCallback: ECS6ComponentUuidCallback;
    } | {
        $case: "smartItem";
        smartItem: ECS6ComponentSmartItem;
    } | {
        $case: "videoClip";
        videoClip: ECS6ComponentVideoClip;
    } | {
        $case: "videoTexture";
        videoTexture: ECS6ComponentVideoTexture;
    } | {
        $case: "cameraModeArea";
        cameraModeArea: ECS6ComponentCameraModeArea;
    } | {
        $case: "avatarTexture";
        avatarTexture: ECS6ComponentAvatarTexture;
    } | {
        $case: "audioClip";
        audioClip: ECS6ComponentAudioClip;
    } | {
        $case: "audioSource";
        audioSource: ECS6ComponentAudioSource;
    } | {
        $case: "audioStream";
        audioStream: ECS6ComponentAudioStream;
    } | {
        $case: "avatarShape";
        avatarShape: ECS6ComponentAvatarShape;
    } | {
        $case: "gizmos";
        gizmos: ECS6ComponentGizmos;
    } | {
        $case: "uiShape";
        uiShape: ECS6ComponentUiShape;
    } | {
        $case: "uiContainerRect";
        uiContainerRect: ECS6ComponentUiContainerRect;
    } | {
        $case: "uiContainerStack";
        uiContainerStack: ECS6ComponentUiContainerStack;
    } | {
        $case: "uiButton";
        uiButton: ECS6ComponentUiButton;
    } | {
        $case: "uiText";
        uiText: ECS6ComponentUiText;
    } | {
        $case: "uiInputText";
        uiInputText: ECS6ComponentUiInputText;
    } | {
        $case: "uiImage";
        uiImage: ECS6ComponentUiImage;
    } | {
        $case: "uiScrollRect";
        uiScrollRect: ECS6ComponentUiScrollRect;
    } | {
        $case: "uiWorldSpaceShape";
        uiWorldSpaceShape: ECS6ComponentUiWorldSpaceShape;
    } | {
        $case: "uiScreenSpaceShape";
        uiScreenSpaceShape: ECS6ComponentUiScreenSpaceShape;
    } | {
        $case: "uiFullScreenShape";
        uiFullScreenShape: ECS6ComponentUiFullScreenShape;
    } | undefined;
}
export interface CreateEntityBody {
    id: string;
}
export interface RemoveEntityBody {
    id: string;
}
export interface UpdateEntityComponentBody {
    entityId: string;
    classId: number;
    name: string;
    componentData: ComponentBodyPayload | undefined;
}
export interface AttachEntityComponentBody {
    entityId: string;
    name: string;
    id: string;
}
export interface ComponentRemovedBody {
    entityId: string;
    name: string;
}
export interface SetEntityParentBody {
    entityId: string;
    parentId: string;
}
export interface QueryBody {
    queryId: string;
    payload: QueryBody_RayQuery | undefined;
}
export interface QueryBody_Ray {
    origin: Vector3 | undefined;
    direction: Vector3 | undefined;
    distance: number;
}
export interface QueryBody_RayQuery {
    queryId: string;
    queryType: string;
    ray: QueryBody_Ray | undefined;
}
export interface ComponentCreatedBody {
    id: string;
    classId: number;
    name: string;
}
export interface ComponentDisposedBody {
    id: string;
}
export interface ComponentUpdatedBody {
    id: string;
    componentData: ComponentBodyPayload | undefined;
}
export interface InitMessagesFinishedBody {
}
export interface EntityActionPayload {
    payload?: {
        $case: "openExternalUrl";
        openExternalUrl: OpenExternalUrlBody;
    } | {
        $case: "openNftDialog";
        openNftDialog: OpenNFTDialogBody;
    } | {
        $case: "createEntity";
        createEntity: CreateEntityBody;
    } | {
        $case: "removeEntity";
        removeEntity: RemoveEntityBody;
    } | {
        $case: "updateEntityComponent";
        updateEntityComponent: UpdateEntityComponentBody;
    } | {
        $case: "attachEntityComponent";
        attachEntityComponent: AttachEntityComponentBody;
    } | {
        $case: "componentRemoved";
        componentRemoved: ComponentRemovedBody;
    } | {
        $case: "setEntityParent";
        setEntityParent: SetEntityParentBody;
    } | {
        $case: "query";
        query: QueryBody;
    } | {
        $case: "componentCreated";
        componentCreated: ComponentCreatedBody;
    } | {
        $case: "componentDisposed";
        componentDisposed: ComponentDisposedBody;
    } | {
        $case: "componentUpdated";
        componentUpdated: ComponentUpdatedBody;
    } | {
        $case: "initMessagesFinished";
        initMessagesFinished: InitMessagesFinishedBody;
    } | undefined;
}
export interface EntityAction {
    tag?: string | undefined;
    payload: EntityActionPayload | undefined;
}
export declare namespace OpenExternalUrlBody {
    function encode(message: OpenExternalUrlBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): OpenExternalUrlBody;
    function fromJSON(object: any): OpenExternalUrlBody;
    function toJSON(message: OpenExternalUrlBody): unknown;
    function create<I extends Exact<DeepPartial<OpenExternalUrlBody>, I>>(base?: I): OpenExternalUrlBody;
    function fromPartial<I extends Exact<DeepPartial<OpenExternalUrlBody>, I>>(object: I): OpenExternalUrlBody;
}
export declare namespace OpenNFTDialogBody {
    function encode(message: OpenNFTDialogBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): OpenNFTDialogBody;
    function fromJSON(object: any): OpenNFTDialogBody;
    function toJSON(message: OpenNFTDialogBody): unknown;
    function create<I extends Exact<DeepPartial<OpenNFTDialogBody>, I>>(base?: I): OpenNFTDialogBody;
    function fromPartial<I extends Exact<DeepPartial<OpenNFTDialogBody>, I>>(object: I): OpenNFTDialogBody;
}
export declare namespace ComponentBodyPayload {
    function encode(message: ComponentBodyPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ComponentBodyPayload;
    function fromJSON(object: any): ComponentBodyPayload;
    function toJSON(message: ComponentBodyPayload): unknown;
    function create<I extends Exact<DeepPartial<ComponentBodyPayload>, I>>(base?: I): ComponentBodyPayload;
    function fromPartial<I extends Exact<DeepPartial<ComponentBodyPayload>, I>>(object: I): ComponentBodyPayload;
}
export declare namespace CreateEntityBody {
    function encode(message: CreateEntityBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): CreateEntityBody;
    function fromJSON(object: any): CreateEntityBody;
    function toJSON(message: CreateEntityBody): unknown;
    function create<I extends Exact<DeepPartial<CreateEntityBody>, I>>(base?: I): CreateEntityBody;
    function fromPartial<I extends Exact<DeepPartial<CreateEntityBody>, I>>(object: I): CreateEntityBody;
}
export declare namespace RemoveEntityBody {
    function encode(message: RemoveEntityBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): RemoveEntityBody;
    function fromJSON(object: any): RemoveEntityBody;
    function toJSON(message: RemoveEntityBody): unknown;
    function create<I extends Exact<DeepPartial<RemoveEntityBody>, I>>(base?: I): RemoveEntityBody;
    function fromPartial<I extends Exact<DeepPartial<RemoveEntityBody>, I>>(object: I): RemoveEntityBody;
}
export declare namespace UpdateEntityComponentBody {
    function encode(message: UpdateEntityComponentBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UpdateEntityComponentBody;
    function fromJSON(object: any): UpdateEntityComponentBody;
    function toJSON(message: UpdateEntityComponentBody): unknown;
    function create<I extends Exact<DeepPartial<UpdateEntityComponentBody>, I>>(base?: I): UpdateEntityComponentBody;
    function fromPartial<I extends Exact<DeepPartial<UpdateEntityComponentBody>, I>>(object: I): UpdateEntityComponentBody;
}
export declare namespace AttachEntityComponentBody {
    function encode(message: AttachEntityComponentBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AttachEntityComponentBody;
    function fromJSON(object: any): AttachEntityComponentBody;
    function toJSON(message: AttachEntityComponentBody): unknown;
    function create<I extends Exact<DeepPartial<AttachEntityComponentBody>, I>>(base?: I): AttachEntityComponentBody;
    function fromPartial<I extends Exact<DeepPartial<AttachEntityComponentBody>, I>>(object: I): AttachEntityComponentBody;
}
export declare namespace ComponentRemovedBody {
    function encode(message: ComponentRemovedBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ComponentRemovedBody;
    function fromJSON(object: any): ComponentRemovedBody;
    function toJSON(message: ComponentRemovedBody): unknown;
    function create<I extends Exact<DeepPartial<ComponentRemovedBody>, I>>(base?: I): ComponentRemovedBody;
    function fromPartial<I extends Exact<DeepPartial<ComponentRemovedBody>, I>>(object: I): ComponentRemovedBody;
}
export declare namespace SetEntityParentBody {
    function encode(message: SetEntityParentBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): SetEntityParentBody;
    function fromJSON(object: any): SetEntityParentBody;
    function toJSON(message: SetEntityParentBody): unknown;
    function create<I extends Exact<DeepPartial<SetEntityParentBody>, I>>(base?: I): SetEntityParentBody;
    function fromPartial<I extends Exact<DeepPartial<SetEntityParentBody>, I>>(object: I): SetEntityParentBody;
}
export declare namespace QueryBody {
    function encode(message: QueryBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QueryBody;
    function fromJSON(object: any): QueryBody;
    function toJSON(message: QueryBody): unknown;
    function create<I extends Exact<DeepPartial<QueryBody>, I>>(base?: I): QueryBody;
    function fromPartial<I extends Exact<DeepPartial<QueryBody>, I>>(object: I): QueryBody;
}
export declare namespace QueryBody_Ray {
    function encode(message: QueryBody_Ray, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QueryBody_Ray;
    function fromJSON(object: any): QueryBody_Ray;
    function toJSON(message: QueryBody_Ray): unknown;
    function create<I extends Exact<DeepPartial<QueryBody_Ray>, I>>(base?: I): QueryBody_Ray;
    function fromPartial<I extends Exact<DeepPartial<QueryBody_Ray>, I>>(object: I): QueryBody_Ray;
}
export declare namespace QueryBody_RayQuery {
    function encode(message: QueryBody_RayQuery, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QueryBody_RayQuery;
    function fromJSON(object: any): QueryBody_RayQuery;
    function toJSON(message: QueryBody_RayQuery): unknown;
    function create<I extends Exact<DeepPartial<QueryBody_RayQuery>, I>>(base?: I): QueryBody_RayQuery;
    function fromPartial<I extends Exact<DeepPartial<QueryBody_RayQuery>, I>>(object: I): QueryBody_RayQuery;
}
export declare namespace ComponentCreatedBody {
    function encode(message: ComponentCreatedBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ComponentCreatedBody;
    function fromJSON(object: any): ComponentCreatedBody;
    function toJSON(message: ComponentCreatedBody): unknown;
    function create<I extends Exact<DeepPartial<ComponentCreatedBody>, I>>(base?: I): ComponentCreatedBody;
    function fromPartial<I extends Exact<DeepPartial<ComponentCreatedBody>, I>>(object: I): ComponentCreatedBody;
}
export declare namespace ComponentDisposedBody {
    function encode(message: ComponentDisposedBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ComponentDisposedBody;
    function fromJSON(object: any): ComponentDisposedBody;
    function toJSON(message: ComponentDisposedBody): unknown;
    function create<I extends Exact<DeepPartial<ComponentDisposedBody>, I>>(base?: I): ComponentDisposedBody;
    function fromPartial<I extends Exact<DeepPartial<ComponentDisposedBody>, I>>(object: I): ComponentDisposedBody;
}
export declare namespace ComponentUpdatedBody {
    function encode(message: ComponentUpdatedBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ComponentUpdatedBody;
    function fromJSON(object: any): ComponentUpdatedBody;
    function toJSON(message: ComponentUpdatedBody): unknown;
    function create<I extends Exact<DeepPartial<ComponentUpdatedBody>, I>>(base?: I): ComponentUpdatedBody;
    function fromPartial<I extends Exact<DeepPartial<ComponentUpdatedBody>, I>>(object: I): ComponentUpdatedBody;
}
export declare namespace InitMessagesFinishedBody {
    function encode(_: InitMessagesFinishedBody, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): InitMessagesFinishedBody;
    function fromJSON(_: any): InitMessagesFinishedBody;
    function toJSON(_: InitMessagesFinishedBody): unknown;
    function create<I extends Exact<DeepPartial<InitMessagesFinishedBody>, I>>(base?: I): InitMessagesFinishedBody;
    function fromPartial<I extends Exact<DeepPartial<InitMessagesFinishedBody>, I>>(_: I): InitMessagesFinishedBody;
}
export declare namespace EntityActionPayload {
    function encode(message: EntityActionPayload, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EntityActionPayload;
    function fromJSON(object: any): EntityActionPayload;
    function toJSON(message: EntityActionPayload): unknown;
    function create<I extends Exact<DeepPartial<EntityActionPayload>, I>>(base?: I): EntityActionPayload;
    function fromPartial<I extends Exact<DeepPartial<EntityActionPayload>, I>>(object: I): EntityActionPayload;
}
export declare namespace EntityAction {
    function encode(message: EntityAction, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EntityAction;
    function fromJSON(object: any): EntityAction;
    function toJSON(message: EntityAction): unknown;
    function create<I extends Exact<DeepPartial<EntityAction>, I>>(base?: I): EntityAction;
    function fromPartial<I extends Exact<DeepPartial<EntityAction>, I>>(object: I): EntityAction;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
