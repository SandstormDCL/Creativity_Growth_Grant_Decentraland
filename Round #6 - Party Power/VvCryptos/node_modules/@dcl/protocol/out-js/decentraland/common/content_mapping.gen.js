"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentMapping = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "decentraland.common";
function createBaseContentMapping() {
    return { file: "", hash: "" };
}
var ContentMapping;
(function (ContentMapping) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.file !== "") {
            writer.uint32(10).string(message.file);
        }
        if (message.hash !== "") {
            writer.uint32(18).string(message.hash);
        }
        return writer;
    }
    ContentMapping.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseContentMapping();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.file = reader.string();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.hash = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    ContentMapping.decode = decode;
    function fromJSON(object) {
        return { file: isSet(object.file) ? String(object.file) : "", hash: isSet(object.hash) ? String(object.hash) : "" };
    }
    ContentMapping.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.file !== undefined && (obj.file = message.file);
        message.hash !== undefined && (obj.hash = message.hash);
        return obj;
    }
    ContentMapping.toJSON = toJSON;
    function create(base) {
        return ContentMapping.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    ContentMapping.create = create;
    function fromPartial(object) {
        var _a, _b;
        const message = createBaseContentMapping();
        message.file = (_a = object.file) !== null && _a !== void 0 ? _a : "";
        message.hash = (_b = object.hash) !== null && _b !== void 0 ? _b : "";
        return message;
    }
    ContentMapping.fromPartial = fromPartial;
})(ContentMapping || (exports.ContentMapping = ContentMapping = {}));
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=content_mapping.gen.js.map