"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionsServiceDefinition = exports.HasManyPermissionResponse = exports.HasManyPermissionRequest = exports.HasPermissionRequest = exports.PermissionResponse = exports.PermissionItem = exports.protobufPackage = void 0;
exports.permissionItemFromJSON = permissionItemFromJSON;
exports.permissionItemToJSON = permissionItemToJSON;
/* eslint-disable */
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "decentraland.kernel.apis";
var PermissionItem;
(function (PermissionItem) {
    PermissionItem[PermissionItem["PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE"] = 0] = "PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE";
    PermissionItem[PermissionItem["PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE"] = 1] = "PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE";
    PermissionItem[PermissionItem["PI_USE_WEB3_API"] = 2] = "PI_USE_WEB3_API";
    PermissionItem[PermissionItem["PI_USE_WEBSOCKET"] = 3] = "PI_USE_WEBSOCKET";
    PermissionItem[PermissionItem["PI_USE_FETCH"] = 4] = "PI_USE_FETCH";
    PermissionItem[PermissionItem["PI_ALLOW_MEDIA_HOSTNAMES"] = 5] = "PI_ALLOW_MEDIA_HOSTNAMES";
    PermissionItem[PermissionItem["PI_OPEN_EXTERNAL_LINK"] = 6] = "PI_OPEN_EXTERNAL_LINK";
    PermissionItem[PermissionItem["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(PermissionItem || (exports.PermissionItem = PermissionItem = {}));
function permissionItemFromJSON(object) {
    switch (object) {
        case 0:
        case "PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE":
            return PermissionItem.PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE;
        case 1:
        case "PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE":
            return PermissionItem.PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE;
        case 2:
        case "PI_USE_WEB3_API":
            return PermissionItem.PI_USE_WEB3_API;
        case 3:
        case "PI_USE_WEBSOCKET":
            return PermissionItem.PI_USE_WEBSOCKET;
        case 4:
        case "PI_USE_FETCH":
            return PermissionItem.PI_USE_FETCH;
        case 5:
        case "PI_ALLOW_MEDIA_HOSTNAMES":
            return PermissionItem.PI_ALLOW_MEDIA_HOSTNAMES;
        case 6:
        case "PI_OPEN_EXTERNAL_LINK":
            return PermissionItem.PI_OPEN_EXTERNAL_LINK;
        case -1:
        case "UNRECOGNIZED":
        default:
            return PermissionItem.UNRECOGNIZED;
    }
}
function permissionItemToJSON(object) {
    switch (object) {
        case PermissionItem.PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE:
            return "PI_ALLOW_TO_MOVE_PLAYER_INSIDE_SCENE";
        case PermissionItem.PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE:
            return "PI_ALLOW_TO_TRIGGER_AVATAR_EMOTE";
        case PermissionItem.PI_USE_WEB3_API:
            return "PI_USE_WEB3_API";
        case PermissionItem.PI_USE_WEBSOCKET:
            return "PI_USE_WEBSOCKET";
        case PermissionItem.PI_USE_FETCH:
            return "PI_USE_FETCH";
        case PermissionItem.PI_ALLOW_MEDIA_HOSTNAMES:
            return "PI_ALLOW_MEDIA_HOSTNAMES";
        case PermissionItem.PI_OPEN_EXTERNAL_LINK:
            return "PI_OPEN_EXTERNAL_LINK";
        case PermissionItem.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function createBasePermissionResponse() {
    return { hasPermission: false };
}
var PermissionResponse;
(function (PermissionResponse) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.hasPermission === true) {
            writer.uint32(8).bool(message.hasPermission);
        }
        return writer;
    }
    PermissionResponse.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePermissionResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.hasPermission = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PermissionResponse.decode = decode;
    function fromJSON(object) {
        return { hasPermission: isSet(object.hasPermission) ? Boolean(object.hasPermission) : false };
    }
    PermissionResponse.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.hasPermission !== undefined && (obj.hasPermission = message.hasPermission);
        return obj;
    }
    PermissionResponse.toJSON = toJSON;
    function create(base) {
        return PermissionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    PermissionResponse.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBasePermissionResponse();
        message.hasPermission = (_a = object.hasPermission) !== null && _a !== void 0 ? _a : false;
        return message;
    }
    PermissionResponse.fromPartial = fromPartial;
})(PermissionResponse || (exports.PermissionResponse = PermissionResponse = {}));
function createBaseHasPermissionRequest() {
    return { permission: 0 };
}
var HasPermissionRequest;
(function (HasPermissionRequest) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.permission !== 0) {
            writer.uint32(8).int32(message.permission);
        }
        return writer;
    }
    HasPermissionRequest.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseHasPermissionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.permission = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    HasPermissionRequest.decode = decode;
    function fromJSON(object) {
        return { permission: isSet(object.permission) ? permissionItemFromJSON(object.permission) : 0 };
    }
    HasPermissionRequest.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        message.permission !== undefined && (obj.permission = permissionItemToJSON(message.permission));
        return obj;
    }
    HasPermissionRequest.toJSON = toJSON;
    function create(base) {
        return HasPermissionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    HasPermissionRequest.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBaseHasPermissionRequest();
        message.permission = (_a = object.permission) !== null && _a !== void 0 ? _a : 0;
        return message;
    }
    HasPermissionRequest.fromPartial = fromPartial;
})(HasPermissionRequest || (exports.HasPermissionRequest = HasPermissionRequest = {}));
function createBaseHasManyPermissionRequest() {
    return { permissions: [] };
}
var HasManyPermissionRequest;
(function (HasManyPermissionRequest) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.permissions) {
            writer.int32(v);
        }
        writer.ldelim();
        return writer;
    }
    HasManyPermissionRequest.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseHasManyPermissionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag === 8) {
                        message.permissions.push(reader.int32());
                        continue;
                    }
                    if (tag === 10) {
                        const end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.permissions.push(reader.int32());
                        }
                        continue;
                    }
                    break;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    HasManyPermissionRequest.decode = decode;
    function fromJSON(object) {
        return {
            permissions: Array.isArray(object === null || object === void 0 ? void 0 : object.permissions)
                ? object.permissions.map((e) => permissionItemFromJSON(e))
                : [],
        };
    }
    HasManyPermissionRequest.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        if (message.permissions) {
            obj.permissions = message.permissions.map((e) => permissionItemToJSON(e));
        }
        else {
            obj.permissions = [];
        }
        return obj;
    }
    HasManyPermissionRequest.toJSON = toJSON;
    function create(base) {
        return HasManyPermissionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    HasManyPermissionRequest.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBaseHasManyPermissionRequest();
        message.permissions = ((_a = object.permissions) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];
        return message;
    }
    HasManyPermissionRequest.fromPartial = fromPartial;
})(HasManyPermissionRequest || (exports.HasManyPermissionRequest = HasManyPermissionRequest = {}));
function createBaseHasManyPermissionResponse() {
    return { hasManyPermission: [] };
}
var HasManyPermissionResponse;
(function (HasManyPermissionResponse) {
    function encode(message, writer = minimal_1.default.Writer.create()) {
        writer.uint32(10).fork();
        for (const v of message.hasManyPermission) {
            writer.bool(v);
        }
        writer.ldelim();
        return writer;
    }
    HasManyPermissionResponse.encode = encode;
    function decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseHasManyPermissionResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag === 8) {
                        message.hasManyPermission.push(reader.bool());
                        continue;
                    }
                    if (tag === 10) {
                        const end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.hasManyPermission.push(reader.bool());
                        }
                        continue;
                    }
                    break;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    HasManyPermissionResponse.decode = decode;
    function fromJSON(object) {
        return {
            hasManyPermission: Array.isArray(object === null || object === void 0 ? void 0 : object.hasManyPermission)
                ? object.hasManyPermission.map((e) => Boolean(e))
                : [],
        };
    }
    HasManyPermissionResponse.fromJSON = fromJSON;
    function toJSON(message) {
        const obj = {};
        if (message.hasManyPermission) {
            obj.hasManyPermission = message.hasManyPermission.map((e) => e);
        }
        else {
            obj.hasManyPermission = [];
        }
        return obj;
    }
    HasManyPermissionResponse.toJSON = toJSON;
    function create(base) {
        return HasManyPermissionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    }
    HasManyPermissionResponse.create = create;
    function fromPartial(object) {
        var _a;
        const message = createBaseHasManyPermissionResponse();
        message.hasManyPermission = ((_a = object.hasManyPermission) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];
        return message;
    }
    HasManyPermissionResponse.fromPartial = fromPartial;
})(HasManyPermissionResponse || (exports.HasManyPermissionResponse = HasManyPermissionResponse = {}));
exports.PermissionsServiceDefinition = {
    name: "PermissionsService",
    fullName: "decentraland.kernel.apis.PermissionsService",
    methods: {
        /** @deprecated, only available for SDK6 compatibility */
        hasPermission: {
            name: "HasPermission",
            requestType: HasPermissionRequest,
            requestStream: false,
            responseType: PermissionResponse,
            responseStream: false,
            options: {},
        },
        /** @deprecated, only available for SDK6 compatibility */
        hasManyPermissions: {
            name: "HasManyPermissions",
            requestType: HasManyPermissionRequest,
            requestStream: false,
            responseType: HasManyPermissionResponse,
            responseStream: false,
            options: {},
        },
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=permissions.gen.js.map