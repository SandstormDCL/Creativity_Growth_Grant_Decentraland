import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "google.protobuf";
export interface FileDescriptorSet {
    file: FileDescriptorProto[];
}
export interface FileDescriptorProto {
    name: string;
    package: string;
    dependency: string[];
    publicDependency: number[];
    weakDependency: number[];
    messageType: DescriptorProto[];
    enumType: EnumDescriptorProto[];
    service: ServiceDescriptorProto[];
    extension: FieldDescriptorProto[];
    options: FileOptions | undefined;
    sourceCodeInfo: SourceCodeInfo | undefined;
    syntax: string;
}
export interface DescriptorProto {
    name: string;
    field: FieldDescriptorProto[];
    extension: FieldDescriptorProto[];
    nestedType: DescriptorProto[];
    enumType: EnumDescriptorProto[];
    extensionRange: DescriptorProto_ExtensionRange[];
    oneofDecl: OneofDescriptorProto[];
    options: MessageOptions | undefined;
    reservedRange: DescriptorProto_ReservedRange[];
    reservedName: string[];
}
export interface DescriptorProto_ExtensionRange {
    start: number;
    end: number;
}
export interface DescriptorProto_ReservedRange {
    start: number;
    end: number;
}
export interface FieldDescriptorProto {
    name: string;
    number: number;
    label: FieldDescriptorProto_Label;
    type: FieldDescriptorProto_Type;
    typeName: string;
    extendee: string;
    defaultValue: string;
    oneofIndex: number;
    jsonName: string;
    options: FieldOptions | undefined;
}
export declare enum FieldDescriptorProto_Type {
    TYPE_DOUBLE = 1,
    TYPE_FLOAT = 2,
    TYPE_INT64 = 3,
    TYPE_UINT64 = 4,
    TYPE_INT32 = 5,
    TYPE_FIXED64 = 6,
    TYPE_FIXED32 = 7,
    TYPE_BOOL = 8,
    TYPE_STRING = 9,
    TYPE_GROUP = 10,
    TYPE_MESSAGE = 11,
    TYPE_BYTES = 12,
    TYPE_UINT32 = 13,
    TYPE_ENUM = 14,
    TYPE_SFIXED32 = 15,
    TYPE_SFIXED64 = 16,
    TYPE_SINT32 = 17,
    TYPE_SINT64 = 18,
    UNRECOGNIZED = -1
}
export declare function fieldDescriptorProto_TypeFromJSON(object: any): FieldDescriptorProto_Type;
export declare function fieldDescriptorProto_TypeToJSON(object: FieldDescriptorProto_Type): string;
export declare enum FieldDescriptorProto_Label {
    LABEL_OPTIONAL = 1,
    LABEL_REQUIRED = 2,
    LABEL_REPEATED = 3,
    UNRECOGNIZED = -1
}
export declare function fieldDescriptorProto_LabelFromJSON(object: any): FieldDescriptorProto_Label;
export declare function fieldDescriptorProto_LabelToJSON(object: FieldDescriptorProto_Label): string;
export interface OneofDescriptorProto {
    name: string;
    options: OneofOptions | undefined;
}
export interface EnumDescriptorProto {
    name: string;
    value: EnumValueDescriptorProto[];
    options: EnumOptions | undefined;
}
export interface EnumValueDescriptorProto {
    name: string;
    number: number;
    options: EnumValueOptions | undefined;
}
export interface ServiceDescriptorProto {
    name: string;
    method: MethodDescriptorProto[];
    options: ServiceOptions | undefined;
}
export interface MethodDescriptorProto {
    name: string;
    inputType: string;
    outputType: string;
    options: MethodOptions | undefined;
    clientStreaming: boolean;
    serverStreaming: boolean;
}
export interface FileOptions {
    javaPackage: string;
    javaOuterClassname: string;
    javaMultipleFiles: boolean;
    /** @deprecated */
    javaGenerateEqualsAndHash: boolean;
    javaStringCheckUtf8: boolean;
    optimizeFor: FileOptions_OptimizeMode;
    goPackage: string;
    ccGenericServices: boolean;
    javaGenericServices: boolean;
    pyGenericServices: boolean;
    deprecated: boolean;
    ccEnableArenas: boolean;
    objcClassPrefix: string;
    csharpNamespace: string;
    uninterpretedOption: UninterpretedOption[];
}
export declare enum FileOptions_OptimizeMode {
    SPEED = 1,
    CODE_SIZE = 2,
    LITE_RUNTIME = 3,
    UNRECOGNIZED = -1
}
export declare function fileOptions_OptimizeModeFromJSON(object: any): FileOptions_OptimizeMode;
export declare function fileOptions_OptimizeModeToJSON(object: FileOptions_OptimizeMode): string;
export interface MessageOptions {
    messageSetWireFormat: boolean;
    noStandardDescriptorAccessor: boolean;
    deprecated: boolean;
    mapEntry: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export interface FieldOptions {
    ctype: FieldOptions_CType;
    packed: boolean;
    jstype: FieldOptions_JSType;
    lazy: boolean;
    deprecated: boolean;
    weak: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export declare enum FieldOptions_CType {
    STRING = 0,
    CORD = 1,
    STRING_PIECE = 2,
    UNRECOGNIZED = -1
}
export declare function fieldOptions_CTypeFromJSON(object: any): FieldOptions_CType;
export declare function fieldOptions_CTypeToJSON(object: FieldOptions_CType): string;
export declare enum FieldOptions_JSType {
    JS_NORMAL = 0,
    JS_STRING = 1,
    JS_NUMBER = 2,
    UNRECOGNIZED = -1
}
export declare function fieldOptions_JSTypeFromJSON(object: any): FieldOptions_JSType;
export declare function fieldOptions_JSTypeToJSON(object: FieldOptions_JSType): string;
export interface OneofOptions {
    uninterpretedOption: UninterpretedOption[];
}
export interface EnumOptions {
    allowAlias: boolean;
    deprecated: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export interface EnumValueOptions {
    deprecated: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export interface ServiceOptions {
    deprecated: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export interface MethodOptions {
    deprecated: boolean;
    uninterpretedOption: UninterpretedOption[];
}
export interface UninterpretedOption {
    name: UninterpretedOption_NamePart[];
    identifierValue: string;
    positiveIntValue: number;
    negativeIntValue: number;
    doubleValue: number;
    stringValue: Uint8Array;
    aggregateValue: string;
}
export interface UninterpretedOption_NamePart {
    namePart: string;
    isExtension: boolean;
}
export interface SourceCodeInfo {
    location: SourceCodeInfo_Location[];
}
export interface SourceCodeInfo_Location {
    path: number[];
    span: number[];
    leadingComments: string;
    trailingComments: string;
    leadingDetachedComments: string[];
}
export interface GeneratedCodeInfo {
    annotation: GeneratedCodeInfo_Annotation[];
}
export interface GeneratedCodeInfo_Annotation {
    path: number[];
    sourceFile: string;
    begin: number;
    end: number;
}
export declare namespace FileDescriptorSet {
    function encode(message: FileDescriptorSet, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FileDescriptorSet;
    function fromJSON(object: any): FileDescriptorSet;
    function toJSON(message: FileDescriptorSet): unknown;
    function create<I extends Exact<DeepPartial<FileDescriptorSet>, I>>(base?: I): FileDescriptorSet;
    function fromPartial<I extends Exact<DeepPartial<FileDescriptorSet>, I>>(object: I): FileDescriptorSet;
}
export declare namespace FileDescriptorProto {
    function encode(message: FileDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FileDescriptorProto;
    function fromJSON(object: any): FileDescriptorProto;
    function toJSON(message: FileDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<FileDescriptorProto>, I>>(base?: I): FileDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<FileDescriptorProto>, I>>(object: I): FileDescriptorProto;
}
export declare namespace DescriptorProto {
    function encode(message: DescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): DescriptorProto;
    function fromJSON(object: any): DescriptorProto;
    function toJSON(message: DescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<DescriptorProto>, I>>(base?: I): DescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<DescriptorProto>, I>>(object: I): DescriptorProto;
}
export declare namespace DescriptorProto_ExtensionRange {
    function encode(message: DescriptorProto_ExtensionRange, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): DescriptorProto_ExtensionRange;
    function fromJSON(object: any): DescriptorProto_ExtensionRange;
    function toJSON(message: DescriptorProto_ExtensionRange): unknown;
    function create<I extends Exact<DeepPartial<DescriptorProto_ExtensionRange>, I>>(base?: I): DescriptorProto_ExtensionRange;
    function fromPartial<I extends Exact<DeepPartial<DescriptorProto_ExtensionRange>, I>>(object: I): DescriptorProto_ExtensionRange;
}
export declare namespace DescriptorProto_ReservedRange {
    function encode(message: DescriptorProto_ReservedRange, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): DescriptorProto_ReservedRange;
    function fromJSON(object: any): DescriptorProto_ReservedRange;
    function toJSON(message: DescriptorProto_ReservedRange): unknown;
    function create<I extends Exact<DeepPartial<DescriptorProto_ReservedRange>, I>>(base?: I): DescriptorProto_ReservedRange;
    function fromPartial<I extends Exact<DeepPartial<DescriptorProto_ReservedRange>, I>>(object: I): DescriptorProto_ReservedRange;
}
export declare namespace FieldDescriptorProto {
    function encode(message: FieldDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FieldDescriptorProto;
    function fromJSON(object: any): FieldDescriptorProto;
    function toJSON(message: FieldDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<FieldDescriptorProto>, I>>(base?: I): FieldDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<FieldDescriptorProto>, I>>(object: I): FieldDescriptorProto;
}
export declare namespace OneofDescriptorProto {
    function encode(message: OneofDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): OneofDescriptorProto;
    function fromJSON(object: any): OneofDescriptorProto;
    function toJSON(message: OneofDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<OneofDescriptorProto>, I>>(base?: I): OneofDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<OneofDescriptorProto>, I>>(object: I): OneofDescriptorProto;
}
export declare namespace EnumDescriptorProto {
    function encode(message: EnumDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EnumDescriptorProto;
    function fromJSON(object: any): EnumDescriptorProto;
    function toJSON(message: EnumDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<EnumDescriptorProto>, I>>(base?: I): EnumDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<EnumDescriptorProto>, I>>(object: I): EnumDescriptorProto;
}
export declare namespace EnumValueDescriptorProto {
    function encode(message: EnumValueDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EnumValueDescriptorProto;
    function fromJSON(object: any): EnumValueDescriptorProto;
    function toJSON(message: EnumValueDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<EnumValueDescriptorProto>, I>>(base?: I): EnumValueDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<EnumValueDescriptorProto>, I>>(object: I): EnumValueDescriptorProto;
}
export declare namespace ServiceDescriptorProto {
    function encode(message: ServiceDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ServiceDescriptorProto;
    function fromJSON(object: any): ServiceDescriptorProto;
    function toJSON(message: ServiceDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<ServiceDescriptorProto>, I>>(base?: I): ServiceDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<ServiceDescriptorProto>, I>>(object: I): ServiceDescriptorProto;
}
export declare namespace MethodDescriptorProto {
    function encode(message: MethodDescriptorProto, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): MethodDescriptorProto;
    function fromJSON(object: any): MethodDescriptorProto;
    function toJSON(message: MethodDescriptorProto): unknown;
    function create<I extends Exact<DeepPartial<MethodDescriptorProto>, I>>(base?: I): MethodDescriptorProto;
    function fromPartial<I extends Exact<DeepPartial<MethodDescriptorProto>, I>>(object: I): MethodDescriptorProto;
}
export declare namespace FileOptions {
    function encode(message: FileOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FileOptions;
    function fromJSON(object: any): FileOptions;
    function toJSON(message: FileOptions): unknown;
    function create<I extends Exact<DeepPartial<FileOptions>, I>>(base?: I): FileOptions;
    function fromPartial<I extends Exact<DeepPartial<FileOptions>, I>>(object: I): FileOptions;
}
export declare namespace MessageOptions {
    function encode(message: MessageOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): MessageOptions;
    function fromJSON(object: any): MessageOptions;
    function toJSON(message: MessageOptions): unknown;
    function create<I extends Exact<DeepPartial<MessageOptions>, I>>(base?: I): MessageOptions;
    function fromPartial<I extends Exact<DeepPartial<MessageOptions>, I>>(object: I): MessageOptions;
}
export declare namespace FieldOptions {
    function encode(message: FieldOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): FieldOptions;
    function fromJSON(object: any): FieldOptions;
    function toJSON(message: FieldOptions): unknown;
    function create<I extends Exact<DeepPartial<FieldOptions>, I>>(base?: I): FieldOptions;
    function fromPartial<I extends Exact<DeepPartial<FieldOptions>, I>>(object: I): FieldOptions;
}
export declare namespace OneofOptions {
    function encode(message: OneofOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): OneofOptions;
    function fromJSON(object: any): OneofOptions;
    function toJSON(message: OneofOptions): unknown;
    function create<I extends Exact<DeepPartial<OneofOptions>, I>>(base?: I): OneofOptions;
    function fromPartial<I extends Exact<DeepPartial<OneofOptions>, I>>(object: I): OneofOptions;
}
export declare namespace EnumOptions {
    function encode(message: EnumOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EnumOptions;
    function fromJSON(object: any): EnumOptions;
    function toJSON(message: EnumOptions): unknown;
    function create<I extends Exact<DeepPartial<EnumOptions>, I>>(base?: I): EnumOptions;
    function fromPartial<I extends Exact<DeepPartial<EnumOptions>, I>>(object: I): EnumOptions;
}
export declare namespace EnumValueOptions {
    function encode(message: EnumValueOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EnumValueOptions;
    function fromJSON(object: any): EnumValueOptions;
    function toJSON(message: EnumValueOptions): unknown;
    function create<I extends Exact<DeepPartial<EnumValueOptions>, I>>(base?: I): EnumValueOptions;
    function fromPartial<I extends Exact<DeepPartial<EnumValueOptions>, I>>(object: I): EnumValueOptions;
}
export declare namespace ServiceOptions {
    function encode(message: ServiceOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): ServiceOptions;
    function fromJSON(object: any): ServiceOptions;
    function toJSON(message: ServiceOptions): unknown;
    function create<I extends Exact<DeepPartial<ServiceOptions>, I>>(base?: I): ServiceOptions;
    function fromPartial<I extends Exact<DeepPartial<ServiceOptions>, I>>(object: I): ServiceOptions;
}
export declare namespace MethodOptions {
    function encode(message: MethodOptions, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): MethodOptions;
    function fromJSON(object: any): MethodOptions;
    function toJSON(message: MethodOptions): unknown;
    function create<I extends Exact<DeepPartial<MethodOptions>, I>>(base?: I): MethodOptions;
    function fromPartial<I extends Exact<DeepPartial<MethodOptions>, I>>(object: I): MethodOptions;
}
export declare namespace UninterpretedOption {
    function encode(message: UninterpretedOption, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UninterpretedOption;
    function fromJSON(object: any): UninterpretedOption;
    function toJSON(message: UninterpretedOption): unknown;
    function create<I extends Exact<DeepPartial<UninterpretedOption>, I>>(base?: I): UninterpretedOption;
    function fromPartial<I extends Exact<DeepPartial<UninterpretedOption>, I>>(object: I): UninterpretedOption;
}
export declare namespace UninterpretedOption_NamePart {
    function encode(message: UninterpretedOption_NamePart, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UninterpretedOption_NamePart;
    function fromJSON(object: any): UninterpretedOption_NamePart;
    function toJSON(message: UninterpretedOption_NamePart): unknown;
    function create<I extends Exact<DeepPartial<UninterpretedOption_NamePart>, I>>(base?: I): UninterpretedOption_NamePart;
    function fromPartial<I extends Exact<DeepPartial<UninterpretedOption_NamePart>, I>>(object: I): UninterpretedOption_NamePart;
}
export declare namespace SourceCodeInfo {
    function encode(message: SourceCodeInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): SourceCodeInfo;
    function fromJSON(object: any): SourceCodeInfo;
    function toJSON(message: SourceCodeInfo): unknown;
    function create<I extends Exact<DeepPartial<SourceCodeInfo>, I>>(base?: I): SourceCodeInfo;
    function fromPartial<I extends Exact<DeepPartial<SourceCodeInfo>, I>>(object: I): SourceCodeInfo;
}
export declare namespace SourceCodeInfo_Location {
    function encode(message: SourceCodeInfo_Location, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): SourceCodeInfo_Location;
    function fromJSON(object: any): SourceCodeInfo_Location;
    function toJSON(message: SourceCodeInfo_Location): unknown;
    function create<I extends Exact<DeepPartial<SourceCodeInfo_Location>, I>>(base?: I): SourceCodeInfo_Location;
    function fromPartial<I extends Exact<DeepPartial<SourceCodeInfo_Location>, I>>(object: I): SourceCodeInfo_Location;
}
export declare namespace GeneratedCodeInfo {
    function encode(message: GeneratedCodeInfo, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): GeneratedCodeInfo;
    function fromJSON(object: any): GeneratedCodeInfo;
    function toJSON(message: GeneratedCodeInfo): unknown;
    function create<I extends Exact<DeepPartial<GeneratedCodeInfo>, I>>(base?: I): GeneratedCodeInfo;
    function fromPartial<I extends Exact<DeepPartial<GeneratedCodeInfo>, I>>(object: I): GeneratedCodeInfo;
}
export declare namespace GeneratedCodeInfo_Annotation {
    function encode(message: GeneratedCodeInfo_Annotation, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): GeneratedCodeInfo_Annotation;
    function fromJSON(object: any): GeneratedCodeInfo_Annotation;
    function toJSON(message: GeneratedCodeInfo_Annotation): unknown;
    function create<I extends Exact<DeepPartial<GeneratedCodeInfo_Annotation>, I>>(base?: I): GeneratedCodeInfo_Annotation;
    function fromPartial<I extends Exact<DeepPartial<GeneratedCodeInfo_Annotation>, I>>(object: I): GeneratedCodeInfo_Annotation;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
