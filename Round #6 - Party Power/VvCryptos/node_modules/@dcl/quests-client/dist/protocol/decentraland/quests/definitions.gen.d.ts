import _m0 from "protobufjs/minimal";
import { Empty } from "../../google/protobuf/empty.gen";
export declare const protobufPackage = "decentraland.quests";
export interface InvalidQuest {
}
export interface NotUUID {
}
export interface InternalServerError {
}
export interface NotFoundQuestInstance {
}
export interface QuestAlreadyStarted {
}
export interface NotOwner {
}
export interface IgnoredEvent {
}
export interface StartQuestRequest {
    questId: string;
}
export interface StartQuestResponse {
    accepted?: StartQuestResponse_Accepted | undefined;
    invalidQuest?: InvalidQuest | undefined;
    notUuidError?: NotUUID | undefined;
    internalServerError?: InternalServerError | undefined;
    questAlreadyStarted?: QuestAlreadyStarted | undefined;
}
export interface StartQuestResponse_Accepted {
}
export interface AbortQuestRequest {
    questInstanceId: string;
}
export interface AbortQuestResponse {
    accepted?: AbortQuestResponse_Accepted | undefined;
    notFoundQuestInstance?: NotFoundQuestInstance | undefined;
    notUuidError?: NotUUID | undefined;
    notOwner?: NotOwner | undefined;
    internalServerError?: InternalServerError | undefined;
}
export interface AbortQuestResponse_Accepted {
}
export interface Event {
    id: string;
    address: string;
    action: Action | undefined;
}
export interface EventRequest {
    action: Action | undefined;
}
export interface EventResponse {
    acceptedEventId?: string | undefined;
    ignoredEvent?: IgnoredEvent | undefined;
    internalServerError?: InternalServerError | undefined;
}
export interface QuestDefinition {
    steps: Step[];
    connections: Connection[];
}
export interface Connection {
    stepFrom: string;
    stepTo: string;
}
export interface Step {
    id: string;
    description: string;
    tasks: Task[];
}
export interface Action {
    type: string;
    parameters: {
        [key: string]: string;
    };
}
export interface Action_ParametersEntry {
    key: string;
    value: string;
}
export interface Task {
    id: string;
    description: string;
    actionItems: Action[];
}
export interface StepContent {
    toDos: Task[];
    tasksCompleted: Task[];
}
export interface QuestState {
    currentSteps: {
        [key: string]: StepContent;
    };
    stepsLeft: number;
    stepsCompleted: string[];
    requiredSteps: string[];
}
export interface QuestState_CurrentStepsEntry {
    key: string;
    value: StepContent | undefined;
}
export interface Quest {
    id: string;
    name: string;
    description: string;
    definition: QuestDefinition | undefined;
    creatorAddress: string;
    imageUrl: string;
    active: boolean;
    createdAt: number;
}
export interface QuestInstance {
    id: string;
    quest: Quest | undefined;
    state: QuestState | undefined;
}
export interface QuestStateUpdate {
    instanceId: string;
    questState: QuestState | undefined;
    eventId: string;
}
export interface UserUpdate {
    subscribed?: boolean | undefined;
    questStateUpdate?: QuestStateUpdate | undefined;
    newQuestStarted?: QuestInstance | undefined;
    eventIgnored?: string | undefined;
    userAddress: string;
}
export interface Quests {
    instances: QuestInstance[];
}
export interface GetAllQuestsResponse {
    quests?: Quests | undefined;
    internalServerError?: InternalServerError | undefined;
}
export interface GetQuestDefinitionRequest {
    questId: string;
}
export interface GetQuestDefinitionResponse {
    quest?: Quest | undefined;
    internalServerError?: InternalServerError | undefined;
}
export declare namespace InvalidQuest {
    function encode(_: InvalidQuest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): InvalidQuest;
    function fromJSON(_: any): InvalidQuest;
    function toJSON(_: InvalidQuest): unknown;
    function create<I extends Exact<DeepPartial<InvalidQuest>, I>>(base?: I): InvalidQuest;
    function fromPartial<I extends Exact<DeepPartial<InvalidQuest>, I>>(_: I): InvalidQuest;
}
export declare namespace NotUUID {
    function encode(_: NotUUID, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): NotUUID;
    function fromJSON(_: any): NotUUID;
    function toJSON(_: NotUUID): unknown;
    function create<I extends Exact<DeepPartial<NotUUID>, I>>(base?: I): NotUUID;
    function fromPartial<I extends Exact<DeepPartial<NotUUID>, I>>(_: I): NotUUID;
}
export declare namespace InternalServerError {
    function encode(_: InternalServerError, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): InternalServerError;
    function fromJSON(_: any): InternalServerError;
    function toJSON(_: InternalServerError): unknown;
    function create<I extends Exact<DeepPartial<InternalServerError>, I>>(base?: I): InternalServerError;
    function fromPartial<I extends Exact<DeepPartial<InternalServerError>, I>>(_: I): InternalServerError;
}
export declare namespace NotFoundQuestInstance {
    function encode(_: NotFoundQuestInstance, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): NotFoundQuestInstance;
    function fromJSON(_: any): NotFoundQuestInstance;
    function toJSON(_: NotFoundQuestInstance): unknown;
    function create<I extends Exact<DeepPartial<NotFoundQuestInstance>, I>>(base?: I): NotFoundQuestInstance;
    function fromPartial<I extends Exact<DeepPartial<NotFoundQuestInstance>, I>>(_: I): NotFoundQuestInstance;
}
export declare namespace QuestAlreadyStarted {
    function encode(_: QuestAlreadyStarted, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestAlreadyStarted;
    function fromJSON(_: any): QuestAlreadyStarted;
    function toJSON(_: QuestAlreadyStarted): unknown;
    function create<I extends Exact<DeepPartial<QuestAlreadyStarted>, I>>(base?: I): QuestAlreadyStarted;
    function fromPartial<I extends Exact<DeepPartial<QuestAlreadyStarted>, I>>(_: I): QuestAlreadyStarted;
}
export declare namespace NotOwner {
    function encode(_: NotOwner, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): NotOwner;
    function fromJSON(_: any): NotOwner;
    function toJSON(_: NotOwner): unknown;
    function create<I extends Exact<DeepPartial<NotOwner>, I>>(base?: I): NotOwner;
    function fromPartial<I extends Exact<DeepPartial<NotOwner>, I>>(_: I): NotOwner;
}
export declare namespace IgnoredEvent {
    function encode(_: IgnoredEvent, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): IgnoredEvent;
    function fromJSON(_: any): IgnoredEvent;
    function toJSON(_: IgnoredEvent): unknown;
    function create<I extends Exact<DeepPartial<IgnoredEvent>, I>>(base?: I): IgnoredEvent;
    function fromPartial<I extends Exact<DeepPartial<IgnoredEvent>, I>>(_: I): IgnoredEvent;
}
export declare namespace StartQuestRequest {
    function encode(message: StartQuestRequest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): StartQuestRequest;
    function fromJSON(object: any): StartQuestRequest;
    function toJSON(message: StartQuestRequest): unknown;
    function create<I extends Exact<DeepPartial<StartQuestRequest>, I>>(base?: I): StartQuestRequest;
    function fromPartial<I extends Exact<DeepPartial<StartQuestRequest>, I>>(object: I): StartQuestRequest;
}
export declare namespace StartQuestResponse {
    function encode(message: StartQuestResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): StartQuestResponse;
    function fromJSON(object: any): StartQuestResponse;
    function toJSON(message: StartQuestResponse): unknown;
    function create<I extends Exact<DeepPartial<StartQuestResponse>, I>>(base?: I): StartQuestResponse;
    function fromPartial<I extends Exact<DeepPartial<StartQuestResponse>, I>>(object: I): StartQuestResponse;
}
export declare namespace StartQuestResponse_Accepted {
    function encode(_: StartQuestResponse_Accepted, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): StartQuestResponse_Accepted;
    function fromJSON(_: any): StartQuestResponse_Accepted;
    function toJSON(_: StartQuestResponse_Accepted): unknown;
    function create<I extends Exact<DeepPartial<StartQuestResponse_Accepted>, I>>(base?: I): StartQuestResponse_Accepted;
    function fromPartial<I extends Exact<DeepPartial<StartQuestResponse_Accepted>, I>>(_: I): StartQuestResponse_Accepted;
}
export declare namespace AbortQuestRequest {
    function encode(message: AbortQuestRequest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AbortQuestRequest;
    function fromJSON(object: any): AbortQuestRequest;
    function toJSON(message: AbortQuestRequest): unknown;
    function create<I extends Exact<DeepPartial<AbortQuestRequest>, I>>(base?: I): AbortQuestRequest;
    function fromPartial<I extends Exact<DeepPartial<AbortQuestRequest>, I>>(object: I): AbortQuestRequest;
}
export declare namespace AbortQuestResponse {
    function encode(message: AbortQuestResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AbortQuestResponse;
    function fromJSON(object: any): AbortQuestResponse;
    function toJSON(message: AbortQuestResponse): unknown;
    function create<I extends Exact<DeepPartial<AbortQuestResponse>, I>>(base?: I): AbortQuestResponse;
    function fromPartial<I extends Exact<DeepPartial<AbortQuestResponse>, I>>(object: I): AbortQuestResponse;
}
export declare namespace AbortQuestResponse_Accepted {
    function encode(_: AbortQuestResponse_Accepted, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): AbortQuestResponse_Accepted;
    function fromJSON(_: any): AbortQuestResponse_Accepted;
    function toJSON(_: AbortQuestResponse_Accepted): unknown;
    function create<I extends Exact<DeepPartial<AbortQuestResponse_Accepted>, I>>(base?: I): AbortQuestResponse_Accepted;
    function fromPartial<I extends Exact<DeepPartial<AbortQuestResponse_Accepted>, I>>(_: I): AbortQuestResponse_Accepted;
}
export declare namespace Event {
    function encode(message: Event, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Event;
    function fromJSON(object: any): Event;
    function toJSON(message: Event): unknown;
    function create<I extends Exact<DeepPartial<Event>, I>>(base?: I): Event;
    function fromPartial<I extends Exact<DeepPartial<Event>, I>>(object: I): Event;
}
export declare namespace EventRequest {
    function encode(message: EventRequest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EventRequest;
    function fromJSON(object: any): EventRequest;
    function toJSON(message: EventRequest): unknown;
    function create<I extends Exact<DeepPartial<EventRequest>, I>>(base?: I): EventRequest;
    function fromPartial<I extends Exact<DeepPartial<EventRequest>, I>>(object: I): EventRequest;
}
export declare namespace EventResponse {
    function encode(message: EventResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): EventResponse;
    function fromJSON(object: any): EventResponse;
    function toJSON(message: EventResponse): unknown;
    function create<I extends Exact<DeepPartial<EventResponse>, I>>(base?: I): EventResponse;
    function fromPartial<I extends Exact<DeepPartial<EventResponse>, I>>(object: I): EventResponse;
}
export declare namespace QuestDefinition {
    function encode(message: QuestDefinition, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestDefinition;
    function fromJSON(object: any): QuestDefinition;
    function toJSON(message: QuestDefinition): unknown;
    function create<I extends Exact<DeepPartial<QuestDefinition>, I>>(base?: I): QuestDefinition;
    function fromPartial<I extends Exact<DeepPartial<QuestDefinition>, I>>(object: I): QuestDefinition;
}
export declare namespace Connection {
    function encode(message: Connection, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Connection;
    function fromJSON(object: any): Connection;
    function toJSON(message: Connection): unknown;
    function create<I extends Exact<DeepPartial<Connection>, I>>(base?: I): Connection;
    function fromPartial<I extends Exact<DeepPartial<Connection>, I>>(object: I): Connection;
}
export declare namespace Step {
    function encode(message: Step, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Step;
    function fromJSON(object: any): Step;
    function toJSON(message: Step): unknown;
    function create<I extends Exact<DeepPartial<Step>, I>>(base?: I): Step;
    function fromPartial<I extends Exact<DeepPartial<Step>, I>>(object: I): Step;
}
export declare namespace Action {
    function encode(message: Action, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Action;
    function fromJSON(object: any): Action;
    function toJSON(message: Action): unknown;
    function create<I extends Exact<DeepPartial<Action>, I>>(base?: I): Action;
    function fromPartial<I extends Exact<DeepPartial<Action>, I>>(object: I): Action;
}
export declare namespace Action_ParametersEntry {
    function encode(message: Action_ParametersEntry, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Action_ParametersEntry;
    function fromJSON(object: any): Action_ParametersEntry;
    function toJSON(message: Action_ParametersEntry): unknown;
    function create<I extends Exact<DeepPartial<Action_ParametersEntry>, I>>(base?: I): Action_ParametersEntry;
    function fromPartial<I extends Exact<DeepPartial<Action_ParametersEntry>, I>>(object: I): Action_ParametersEntry;
}
export declare namespace Task {
    function encode(message: Task, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Task;
    function fromJSON(object: any): Task;
    function toJSON(message: Task): unknown;
    function create<I extends Exact<DeepPartial<Task>, I>>(base?: I): Task;
    function fromPartial<I extends Exact<DeepPartial<Task>, I>>(object: I): Task;
}
export declare namespace StepContent {
    function encode(message: StepContent, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): StepContent;
    function fromJSON(object: any): StepContent;
    function toJSON(message: StepContent): unknown;
    function create<I extends Exact<DeepPartial<StepContent>, I>>(base?: I): StepContent;
    function fromPartial<I extends Exact<DeepPartial<StepContent>, I>>(object: I): StepContent;
}
export declare namespace QuestState {
    function encode(message: QuestState, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestState;
    function fromJSON(object: any): QuestState;
    function toJSON(message: QuestState): unknown;
    function create<I extends Exact<DeepPartial<QuestState>, I>>(base?: I): QuestState;
    function fromPartial<I extends Exact<DeepPartial<QuestState>, I>>(object: I): QuestState;
}
export declare namespace QuestState_CurrentStepsEntry {
    function encode(message: QuestState_CurrentStepsEntry, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestState_CurrentStepsEntry;
    function fromJSON(object: any): QuestState_CurrentStepsEntry;
    function toJSON(message: QuestState_CurrentStepsEntry): unknown;
    function create<I extends Exact<DeepPartial<QuestState_CurrentStepsEntry>, I>>(base?: I): QuestState_CurrentStepsEntry;
    function fromPartial<I extends Exact<DeepPartial<QuestState_CurrentStepsEntry>, I>>(object: I): QuestState_CurrentStepsEntry;
}
export declare namespace Quest {
    function encode(message: Quest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Quest;
    function fromJSON(object: any): Quest;
    function toJSON(message: Quest): unknown;
    function create<I extends Exact<DeepPartial<Quest>, I>>(base?: I): Quest;
    function fromPartial<I extends Exact<DeepPartial<Quest>, I>>(object: I): Quest;
}
export declare namespace QuestInstance {
    function encode(message: QuestInstance, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestInstance;
    function fromJSON(object: any): QuestInstance;
    function toJSON(message: QuestInstance): unknown;
    function create<I extends Exact<DeepPartial<QuestInstance>, I>>(base?: I): QuestInstance;
    function fromPartial<I extends Exact<DeepPartial<QuestInstance>, I>>(object: I): QuestInstance;
}
export declare namespace QuestStateUpdate {
    function encode(message: QuestStateUpdate, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): QuestStateUpdate;
    function fromJSON(object: any): QuestStateUpdate;
    function toJSON(message: QuestStateUpdate): unknown;
    function create<I extends Exact<DeepPartial<QuestStateUpdate>, I>>(base?: I): QuestStateUpdate;
    function fromPartial<I extends Exact<DeepPartial<QuestStateUpdate>, I>>(object: I): QuestStateUpdate;
}
export declare namespace UserUpdate {
    function encode(message: UserUpdate, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): UserUpdate;
    function fromJSON(object: any): UserUpdate;
    function toJSON(message: UserUpdate): unknown;
    function create<I extends Exact<DeepPartial<UserUpdate>, I>>(base?: I): UserUpdate;
    function fromPartial<I extends Exact<DeepPartial<UserUpdate>, I>>(object: I): UserUpdate;
}
export declare namespace Quests {
    function encode(message: Quests, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): Quests;
    function fromJSON(object: any): Quests;
    function toJSON(message: Quests): unknown;
    function create<I extends Exact<DeepPartial<Quests>, I>>(base?: I): Quests;
    function fromPartial<I extends Exact<DeepPartial<Quests>, I>>(object: I): Quests;
}
export declare namespace GetAllQuestsResponse {
    function encode(message: GetAllQuestsResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): GetAllQuestsResponse;
    function fromJSON(object: any): GetAllQuestsResponse;
    function toJSON(message: GetAllQuestsResponse): unknown;
    function create<I extends Exact<DeepPartial<GetAllQuestsResponse>, I>>(base?: I): GetAllQuestsResponse;
    function fromPartial<I extends Exact<DeepPartial<GetAllQuestsResponse>, I>>(object: I): GetAllQuestsResponse;
}
export declare namespace GetQuestDefinitionRequest {
    function encode(message: GetQuestDefinitionRequest, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): GetQuestDefinitionRequest;
    function fromJSON(object: any): GetQuestDefinitionRequest;
    function toJSON(message: GetQuestDefinitionRequest): unknown;
    function create<I extends Exact<DeepPartial<GetQuestDefinitionRequest>, I>>(base?: I): GetQuestDefinitionRequest;
    function fromPartial<I extends Exact<DeepPartial<GetQuestDefinitionRequest>, I>>(object: I): GetQuestDefinitionRequest;
}
export declare namespace GetQuestDefinitionResponse {
    function encode(message: GetQuestDefinitionResponse, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): GetQuestDefinitionResponse;
    function fromJSON(object: any): GetQuestDefinitionResponse;
    function toJSON(message: GetQuestDefinitionResponse): unknown;
    function create<I extends Exact<DeepPartial<GetQuestDefinitionResponse>, I>>(base?: I): GetQuestDefinitionResponse;
    function fromPartial<I extends Exact<DeepPartial<GetQuestDefinitionResponse>, I>>(object: I): GetQuestDefinitionResponse;
}
export type QuestsServiceDefinition = typeof QuestsServiceDefinition;
export declare const QuestsServiceDefinition: {
    readonly name: "QuestsService";
    readonly fullName: "decentraland.quests.QuestsService";
    readonly methods: {
        readonly startQuest: {
            readonly name: "StartQuest";
            readonly requestType: typeof StartQuestRequest;
            readonly requestStream: false;
            readonly responseType: typeof StartQuestResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        readonly abortQuest: {
            readonly name: "AbortQuest";
            readonly requestType: typeof AbortQuestRequest;
            readonly requestStream: false;
            readonly responseType: typeof AbortQuestResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        readonly sendEvent: {
            readonly name: "SendEvent";
            readonly requestType: typeof EventRequest;
            readonly requestStream: false;
            readonly responseType: typeof EventResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        readonly subscribe: {
            readonly name: "Subscribe";
            readonly requestType: typeof Empty;
            readonly requestStream: false;
            readonly responseType: typeof UserUpdate;
            readonly responseStream: true;
            readonly options: {};
        };
        readonly getAllQuests: {
            readonly name: "GetAllQuests";
            readonly requestType: typeof Empty;
            readonly requestStream: false;
            readonly responseType: typeof GetAllQuestsResponse;
            readonly responseStream: false;
            readonly options: {};
        };
        readonly getQuestDefinition: {
            readonly name: "GetQuestDefinition";
            readonly requestType: typeof GetQuestDefinitionRequest;
            readonly requestStream: false;
            readonly responseType: typeof GetQuestDefinitionResponse;
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
