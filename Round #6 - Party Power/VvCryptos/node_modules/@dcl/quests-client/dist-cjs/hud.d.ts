import { Entity } from '@dcl/sdk/ecs';
import ReactEcs, { UiBackgroundProps, UiButtonProps, UiLabelProps, UiTransformProps, EntityPropTypes } from '@dcl/sdk/react-ecs';
import { QuestInstance } from './client';
export type QuestUI = {
    name: string;
    steps: {
        id: string;
        description: string;
        tasks: {
            done: boolean;
            description: string;
        }[];
    }[];
    nextSteps: string[];
    done: boolean;
};
type LabelProps = EntityPropTypes & UiLabelProps;
export type QuestHudOptions = {
    autoRender?: boolean;
    leftSidePanel?: UiTransformProps;
    questBox?: {
        uiBackground?: UiBackgroundProps;
        uiTransform?: UiTransformProps;
    };
    questNameContainer?: {
        uiTransform?: UiTransformProps;
        label?: LabelProps;
    };
    stepsContainer?: {
        uiTransform: UiTransformProps;
        labels?: {
            labelUiEntity?: UiTransformProps;
            props?: LabelProps;
        };
        showTasksButton?: {
            buttonUiEntity: UiTransformProps;
            buttonProps?: UiButtonProps;
        };
    };
    tasksBox?: {
        uiTransform?: UiTransformProps;
        uiBackground?: UiBackgroundProps;
        labels?: {
            labelUiEntity?: UiTransformProps;
            props?: LabelProps;
        };
    };
    nextSteps?: {
        nextTitleUiEntity?: UiTransformProps;
        nextTitleProps?: LabelProps;
        labels?: {
            labelUiEntity?: UiTransformProps;
            props?: LabelProps;
        };
    };
    questCompletionLabel?: {
        uiTransform?: UiTransformProps;
        label?: LabelProps;
    };
    showHideToggleButton?: UiButtonProps;
    closeTasksBoxButton?: UiButtonProps;
};
type HUDState = {
    hideHUD: boolean;
    selectedStepId: string | null;
    quest: QuestUI | null;
    rawEntity: Entity | null;
};
type HUDStateHandlers = [() => HUDState, (newState: Partial<HUDState>) => void];
type QuestHUD = {
    upsert: (instance: QuestInstance) => void;
    getHUDComponent: () => () => ReactEcs.JSX.Element;
    render: () => void;
    updateOptions: (opts: QuestHudOptions) => void;
    getHUDComponentWithUpdatedOptions: (newOpts: QuestHudOptions) => () => ReactEcs.JSX.Element;
};
export declare function createQuestHUD(opts?: QuestHudOptions): QuestHUD;
export declare const HUDPanel: (handlers: HUDStateHandlers, props?: QuestHudOptions) => ReactEcs.JSX.Element;
export {};
