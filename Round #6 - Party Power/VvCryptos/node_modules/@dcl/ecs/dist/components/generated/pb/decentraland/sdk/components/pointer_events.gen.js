/* eslint-disable */
import _m0 from "protobufjs/minimal";
const protobufPackageSarasa = "decentraland.sdk.components";
function createBasePBPointerEvents() {
    return { pointerEvents: [] };
}
/**
 * @public
 */
export var PBPointerEvents;
(function (PBPointerEvents) {
    function encode(message, writer = _m0.Writer.create()) {
        for (const v of message.pointerEvents) {
            PBPointerEvents_Entry.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    }
    PBPointerEvents.encode = encode;
    function decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.pointerEvents.push(PBPointerEvents_Entry.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents.decode = decode;
})(PBPointerEvents || (PBPointerEvents = {}));
function createBasePBPointerEvents_Info() {
    return {
        button: undefined,
        hoverText: undefined,
        maxDistance: undefined,
        showFeedback: undefined,
        showHighlight: undefined,
    };
}
/**
 * @public
 */
export var PBPointerEvents_Info;
(function (PBPointerEvents_Info) {
    function encode(message, writer = _m0.Writer.create()) {
        if (message.button !== undefined) {
            writer.uint32(8).int32(message.button);
        }
        if (message.hoverText !== undefined) {
            writer.uint32(18).string(message.hoverText);
        }
        if (message.maxDistance !== undefined) {
            writer.uint32(29).float(message.maxDistance);
        }
        if (message.showFeedback !== undefined) {
            writer.uint32(32).bool(message.showFeedback);
        }
        if (message.showHighlight !== undefined) {
            writer.uint32(40).bool(message.showHighlight);
        }
        return writer;
    }
    PBPointerEvents_Info.encode = encode;
    function decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents_Info();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.button = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.hoverText = reader.string();
                    continue;
                case 3:
                    if (tag !== 29) {
                        break;
                    }
                    message.maxDistance = reader.float();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.showFeedback = reader.bool();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.showHighlight = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents_Info.decode = decode;
})(PBPointerEvents_Info || (PBPointerEvents_Info = {}));
function createBasePBPointerEvents_Entry() {
    return { eventType: 0, eventInfo: undefined };
}
/**
 * @public
 */
export var PBPointerEvents_Entry;
(function (PBPointerEvents_Entry) {
    function encode(message, writer = _m0.Writer.create()) {
        if (message.eventType !== 0) {
            writer.uint32(8).int32(message.eventType);
        }
        if (message.eventInfo !== undefined) {
            PBPointerEvents_Info.encode(message.eventInfo, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    }
    PBPointerEvents_Entry.encode = encode;
    function decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBPointerEvents_Entry();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.eventType = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.eventInfo = PBPointerEvents_Info.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBPointerEvents_Entry.decode = decode;
})(PBPointerEvents_Entry || (PBPointerEvents_Entry = {}));
