/* eslint-disable */
import _m0 from "protobufjs/minimal";
const protobufPackageSarasa = "decentraland.sdk.components";
function createBasePBInputModifier() {
    return { mode: undefined };
}
/**
 * @public
 */
export var PBInputModifier;
(function (PBInputModifier) {
    function encode(message, writer = _m0.Writer.create()) {
        switch (message.mode?.$case) {
            case "standard":
                PBInputModifier_StandardInput.encode(message.mode.standard, writer.uint32(10).fork()).ldelim();
                break;
        }
        return writer;
    }
    PBInputModifier.encode = encode;
    function decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBInputModifier();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.mode = { $case: "standard", standard: PBInputModifier_StandardInput.decode(reader, reader.uint32()) };
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBInputModifier.decode = decode;
})(PBInputModifier || (PBInputModifier = {}));
function createBasePBInputModifier_StandardInput() {
    return {
        disableAll: undefined,
        disableWalk: undefined,
        disableJog: undefined,
        disableRun: undefined,
        disableJump: undefined,
        disableEmote: undefined,
    };
}
/**
 * @public
 */
export var PBInputModifier_StandardInput;
(function (PBInputModifier_StandardInput) {
    function encode(message, writer = _m0.Writer.create()) {
        if (message.disableAll !== undefined) {
            writer.uint32(8).bool(message.disableAll);
        }
        if (message.disableWalk !== undefined) {
            writer.uint32(16).bool(message.disableWalk);
        }
        if (message.disableJog !== undefined) {
            writer.uint32(24).bool(message.disableJog);
        }
        if (message.disableRun !== undefined) {
            writer.uint32(32).bool(message.disableRun);
        }
        if (message.disableJump !== undefined) {
            writer.uint32(40).bool(message.disableJump);
        }
        if (message.disableEmote !== undefined) {
            writer.uint32(48).bool(message.disableEmote);
        }
        return writer;
    }
    PBInputModifier_StandardInput.encode = encode;
    function decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePBInputModifier_StandardInput();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.disableAll = reader.bool();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.disableWalk = reader.bool();
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.disableJog = reader.bool();
                    continue;
                case 4:
                    if (tag !== 32) {
                        break;
                    }
                    message.disableRun = reader.bool();
                    continue;
                case 5:
                    if (tag !== 40) {
                        break;
                    }
                    message.disableJump = reader.bool();
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.disableEmote = reader.bool();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    }
    PBInputModifier_StandardInput.decode = decode;
})(PBInputModifier_StandardInput || (PBInputModifier_StandardInput = {}));
