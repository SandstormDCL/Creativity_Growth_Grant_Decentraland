import _m0 from "protobufjs/minimal";
import { Color3 } from "../../common/colors.gen";
/**
 * The AvatarShape component contains the information required to draw and animate avatar, acting as
 * a simplified GLTF container for this specific case.
 *
 * All fields (except ID) are optional have reasonable default values. In the case of `wearables`,
 * each slot on the Avatar's body that is not explicitly included in the list has its own default.
 *
 * Note that, while AvatarShape can be attached to any Entity, it's only actually used in the global
 * Avatar Scene. Other requirements are usually better served by GLTFs.
 */
/**
 * @public
 */
export interface PBAvatarShape {
    /** the user ID */
    id: string;
    /** visible name (default: "NPC") */
    name?: string | undefined;
    /** shape URN (default "urn:decentraland:off-chain:base-avatars:BaseFemale") */
    bodyShape?: string | undefined;
    /** RGB (default [0.6, 0.462, 0.356]) */
    skinColor?: Color3 | undefined;
    /** RGB (default [0.283, 0.142, 0]) */
    hairColor?: Color3 | undefined;
    /** RGB (default [0.6, 0.462, 0.356]) */
    eyeColor?: Color3 | undefined;
    /** current emote animations */
    expressionTriggerId?: string | undefined;
    /** start of emote animations (in the same order) */
    expressionTriggerTimestamp?: number | undefined;
    /** whether to display the floating voice chat icon */
    talking?: boolean | undefined;
    /**
     * Wearable URNs, one for each body slot.
     *   Default values for each unspecified slot:
     *     Eyes    : "urn:decentraland:off-chain:base-avatars:f_eyes_00",
     *     Eyebrows: "urn:decentraland:off-chain:base-avatars:f_eyebrows_00",
     *     Mouth   : "urn:decentraland:off-chain:base-avatars:f_mouth_00"
     *     Hair    : "urn:decentraland:off-chain:base-avatars:standard_hair",
     *     Shirt   : "urn:decentraland:off-chain:base-avatars:f_simple_yellow_tshirt",
     *     Trousers: "urn:decentraland:off-chain:base-avatars:f_brown_trousers",
     *     Shoes   : "urn:decentraland:off-chain:base-avatars:bun_shoes"]
     */
    wearables: string[];
    /** available emotes (default empty) */
    emotes: string[];
}
/**
 * @public
 */
export declare namespace PBAvatarShape {
    function encode(message: PBAvatarShape, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarShape;
}
