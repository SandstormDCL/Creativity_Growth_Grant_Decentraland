import _m0 from "protobufjs/minimal";
import { Color3, Color4 } from "../../common/colors.gen";
import { TextureUnion } from "../../common/texture.gen";
/**
 * @public
 */
export declare const enum MaterialTransparencyMode {
    MTM_OPAQUE = 0,
    MTM_ALPHA_TEST = 1,
    MTM_ALPHA_BLEND = 2,
    MTM_ALPHA_TEST_AND_ALPHA_BLEND = 3,
    MTM_AUTO = 4
}
/**
 * @public
 */
export interface PBMaterial {
    material?: {
        $case: "unlit";
        unlit: PBMaterial_UnlitMaterial;
    } | {
        $case: "pbr";
        pbr: PBMaterial_PbrMaterial;
    } | undefined;
}
/**
 * @public
 */
export interface PBMaterial_UnlitMaterial {
    /** default = null */
    texture?: TextureUnion | undefined;
    /** default = 0.5. range value: from 0 to 1 */
    alphaTest?: number | undefined;
    /** default =  true */
    castShadows?: boolean | undefined;
    /** default = white; */
    diffuseColor?: Color4 | undefined;
    /** default = null */
    alphaTexture?: TextureUnion | undefined;
}
/**
 * @public
 */
export interface PBMaterial_PbrMaterial {
    /** default = null */
    texture?: TextureUnion | undefined;
    /** default = 0.5. range value: from 0 to 1 */
    alphaTest?: number | undefined;
    /** default =  true */
    castShadows?: boolean | undefined;
    /** @deprecated Alpha textures are no longer supported on PBRMaterial and UnlitMaterial.alphaTexture should be used instead. */
    alphaTexture?: TextureUnion | undefined;
    /** default = null */
    emissiveTexture?: TextureUnion | undefined;
    /** default = null */
    bumpTexture?: TextureUnion | undefined;
    /** default = white; */
    albedoColor?: Color4 | undefined;
    /** default = black; */
    emissiveColor?: Color3 | undefined;
    /** default = white; */
    reflectivityColor?: Color3 | undefined;
    /** default = TransparencyMode.Auto */
    transparencyMode?: MaterialTransparencyMode | undefined;
    /** default = 0.5 */
    metallic?: number | undefined;
    /** default = 0.5 */
    roughness?: number | undefined;
    /** default = 1 */
    specularIntensity?: number | undefined;
    /** default = 2 */
    emissiveIntensity?: number | undefined;
    /** default = 1 */
    directIntensity?: number | undefined;
}
/**
 * @public
 */
export declare namespace PBMaterial {
    function encode(message: PBMaterial, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial;
}
/**
 * @public
 */
export declare namespace PBMaterial_UnlitMaterial {
    function encode(message: PBMaterial_UnlitMaterial, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial_UnlitMaterial;
}
/**
 * @public
 */
export declare namespace PBMaterial_PbrMaterial {
    function encode(message: PBMaterial_PbrMaterial, writer?: _m0.Writer): _m0.Writer;
    function decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial_PbrMaterial;
}
