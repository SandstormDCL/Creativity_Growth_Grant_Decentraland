import { Quaternion, Vector3 } from '@dcl/sdk/math';
export const followMap = new Map();
export function createTransformSystem(components) {
    const { Transform } = components;
    return function transformSystem() {
        for (const [entity, { target, speed, minDistance, axes }] of followMap) {
            const entityTransform = Transform.getMutableOrNull(entity);
            const targetTransform = Transform.getOrNull(target);
            if (!entityTransform || !targetTransform)
                continue;
            const direction = Vector3.subtract(targetTransform.position, entityTransform.position);
            const distance = Vector3.length(direction);
            if (distance < minDistance)
                continue;
            const normalized = Vector3.normalize(direction);
            const move = Vector3.scale(normalized, speed / 10);
            if (Vector3.length(move) > distance)
                continue;
            if (!axes.x)
                move.x = 0;
            if (!axes.y)
                move.y = 0;
            if (!axes.z)
                move.z = 0;
            Vector3.addToRef(move, entityTransform.position, entityTransform.position);
            const lookAt = Vector3.clone(targetTransform.position);
            if (!axes.x)
                lookAt.x = entityTransform.position.x;
            if (!axes.y)
                lookAt.y = entityTransform.position.y;
            if (!axes.z)
                lookAt.z = entityTransform.position.z;
            const lookAtRotation = Quaternion.fromLookAt(entityTransform.position, lookAt);
            entityTransform.rotation = lookAtRotation;
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3RyYW5zZm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQWFuRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsSUFBSSxHQUFHLEVBQXdCLENBQUE7QUFFeEQsTUFBTSxVQUFVLHFCQUFxQixDQUFDLFVBQTRCO0lBQ2hFLE1BQU0sRUFBRSxTQUFTLEVBQUUsR0FBRyxVQUFVLENBQUE7SUFDaEMsT0FBTyxTQUFTLGVBQWU7UUFDN0IsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxTQUFTLEVBQUUsQ0FBQztZQUN2RSxNQUFNLGVBQWUsR0FBRyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDMUQsTUFBTSxlQUFlLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUVuRCxJQUFJLENBQUMsZUFBZSxJQUFJLENBQUMsZUFBZTtnQkFBRSxTQUFRO1lBQ2xELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQ2hDLGVBQWUsQ0FBQyxRQUFRLEVBQ3hCLGVBQWUsQ0FBQyxRQUFRLENBQ3pCLENBQUE7WUFDRCxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQzFDLElBQUksUUFBUSxHQUFHLFdBQVc7Z0JBQUUsU0FBUTtZQUNwQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQy9DLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQTtZQUNsRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUTtnQkFBRSxTQUFRO1lBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDdkIsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUFFLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBQ3ZCLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRLEVBQUUsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1lBQzFFLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1lBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFBO1lBQ2xELElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFBO1lBQ2xELElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFBO1lBQ2xELE1BQU0sY0FBYyxHQUFHLFVBQVUsQ0FBQyxVQUFVLENBQzFDLGVBQWUsQ0FBQyxRQUFRLEVBQ3hCLE1BQU0sQ0FDUCxDQUFBO1lBQ0QsZUFBZSxDQUFDLFFBQVEsR0FBRyxjQUFjLENBQUE7UUFDM0MsQ0FBQztJQUNILENBQUMsQ0FBQTtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tICdAZGNsL2VjcydcbmltcG9ydCB7IEVuZ2luZUNvbXBvbmVudHMgfSBmcm9tICcuL2RlZmluaXRpb25zJ1xuaW1wb3J0IHsgUXVhdGVybmlvbiwgVmVjdG9yMyB9IGZyb20gJ0BkY2wvc2RrL21hdGgnXG5cbmV4cG9ydCB0eXBlIEZvbGxvd0FjdGlvbiA9IHtcbiAgdGFyZ2V0OiBFbnRpdHlcbiAgc3BlZWQ6IG51bWJlclxuICBtaW5EaXN0YW5jZTogbnVtYmVyXG4gIGF4ZXM6IHtcbiAgICB4OiBib29sZWFuXG4gICAgeTogYm9vbGVhblxuICAgIHo6IGJvb2xlYW5cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZm9sbG93TWFwID0gbmV3IE1hcDxFbnRpdHksIEZvbGxvd0FjdGlvbj4oKVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhbnNmb3JtU3lzdGVtKGNvbXBvbmVudHM6IEVuZ2luZUNvbXBvbmVudHMpIHtcbiAgY29uc3QgeyBUcmFuc2Zvcm0gfSA9IGNvbXBvbmVudHNcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyYW5zZm9ybVN5c3RlbSgpIHtcbiAgICBmb3IgKGNvbnN0IFtlbnRpdHksIHsgdGFyZ2V0LCBzcGVlZCwgbWluRGlzdGFuY2UsIGF4ZXMgfV0gb2YgZm9sbG93TWFwKSB7XG4gICAgICBjb25zdCBlbnRpdHlUcmFuc2Zvcm0gPSBUcmFuc2Zvcm0uZ2V0TXV0YWJsZU9yTnVsbChlbnRpdHkpXG4gICAgICBjb25zdCB0YXJnZXRUcmFuc2Zvcm0gPSBUcmFuc2Zvcm0uZ2V0T3JOdWxsKHRhcmdldClcblxuICAgICAgaWYgKCFlbnRpdHlUcmFuc2Zvcm0gfHwgIXRhcmdldFRyYW5zZm9ybSkgY29udGludWVcbiAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IFZlY3RvcjMuc3VidHJhY3QoXG4gICAgICAgIHRhcmdldFRyYW5zZm9ybS5wb3NpdGlvbixcbiAgICAgICAgZW50aXR5VHJhbnNmb3JtLnBvc2l0aW9uLFxuICAgICAgKVxuICAgICAgY29uc3QgZGlzdGFuY2UgPSBWZWN0b3IzLmxlbmd0aChkaXJlY3Rpb24pXG4gICAgICBpZiAoZGlzdGFuY2UgPCBtaW5EaXN0YW5jZSkgY29udGludWVcbiAgICAgIGNvbnN0IG5vcm1hbGl6ZWQgPSBWZWN0b3IzLm5vcm1hbGl6ZShkaXJlY3Rpb24pXG4gICAgICBjb25zdCBtb3ZlID0gVmVjdG9yMy5zY2FsZShub3JtYWxpemVkLCBzcGVlZCAvIDEwKVxuICAgICAgaWYgKFZlY3RvcjMubGVuZ3RoKG1vdmUpID4gZGlzdGFuY2UpIGNvbnRpbnVlXG4gICAgICBpZiAoIWF4ZXMueCkgbW92ZS54ID0gMFxuICAgICAgaWYgKCFheGVzLnkpIG1vdmUueSA9IDBcbiAgICAgIGlmICghYXhlcy56KSBtb3ZlLnogPSAwXG4gICAgICBWZWN0b3IzLmFkZFRvUmVmKG1vdmUsIGVudGl0eVRyYW5zZm9ybS5wb3NpdGlvbiwgZW50aXR5VHJhbnNmb3JtLnBvc2l0aW9uKVxuICAgICAgY29uc3QgbG9va0F0ID0gVmVjdG9yMy5jbG9uZSh0YXJnZXRUcmFuc2Zvcm0ucG9zaXRpb24pXG4gICAgICBpZiAoIWF4ZXMueCkgbG9va0F0LnggPSBlbnRpdHlUcmFuc2Zvcm0ucG9zaXRpb24ueFxuICAgICAgaWYgKCFheGVzLnkpIGxvb2tBdC55ID0gZW50aXR5VHJhbnNmb3JtLnBvc2l0aW9uLnlcbiAgICAgIGlmICghYXhlcy56KSBsb29rQXQueiA9IGVudGl0eVRyYW5zZm9ybS5wb3NpdGlvbi56XG4gICAgICBjb25zdCBsb29rQXRSb3RhdGlvbiA9IFF1YXRlcm5pb24uZnJvbUxvb2tBdChcbiAgICAgICAgZW50aXR5VHJhbnNmb3JtLnBvc2l0aW9uLFxuICAgICAgICBsb29rQXQsXG4gICAgICApXG4gICAgICBlbnRpdHlUcmFuc2Zvcm0ucm90YXRpb24gPSBsb29rQXRSb3RhdGlvblxuICAgIH1cbiAgfVxufVxuIl19