import { CliComponents } from '.';
import { IFileSystemComponent } from './fs';
export type ConfigKeys = 'DCL_ANON_ID' | 'DCL_DISABLE_ANALYTICS' | 'DCL_LAND_REGISTRY_ADDRESS' | 'DCL_ESTATE_REGISTRY_ADDRESS' | 'DCL_CATALYST';
export declare const DCL_RC = ".dclrc";
/**
 * This function creates a chained .env loader for configurations.
 * It loads sdk-commands/.dclrc then ~/.dclrc and lastly $(pwd)/.dclrc
 * By default, process.env overrides any configuration.
 */
export declare function createConfigComponent({ fs }: {
    fs: IFileSystemComponent;
}): Promise<import("@well-known-components/interfaces").IConfigComponent>;
export declare function writeGlobalConfig({ fs }: {
    fs: IFileSystemComponent;
}, key: ConfigKeys, value: string): Promise<void>;
export declare function getGlobalDclRcPath(): string;
export declare function readStringConfig(components: Pick<CliComponents, 'config'>, key: ConfigKeys): Promise<string | undefined>;
export declare function requireStringConfig(components: Pick<CliComponents, 'config'>, key: ConfigKeys): Promise<string>;
