import { Analytics } from '@segment/analytics-node';
import { CliComponents } from '.';
export type IAnalyticsComponent = {
    track<T extends keyof Events>(eventName: T, eventProps: Events[T]): void;
    stop(): Promise<void>;
};
export type Events = {
    'Scene created': {
        projectType: string;
        url: string;
    };
    'Preview started': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
        isWorkspace: boolean;
        isPortableExperience: boolean;
    };
    'Build scene': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
        isWorkspace: boolean;
        isPortableExperience: boolean;
    };
    'Export static': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
    };
    'Scene deploy started': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
        isWorld: boolean;
    };
    'Scene deploy success': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
        isWorld: boolean;
        dependencies: string[];
        sceneId: string;
        targetContentServer: string;
        worldName: string | undefined;
        isPortableExperience: boolean;
        serverlessMultiplayer: boolean;
    };
    'Scene deploy failure': {
        projectHash: string;
        coords: {
            x: number;
            y: number;
        };
        isWorld: boolean;
        error: string;
    };
    'Pack smart wearable': {
        projectHash: string;
    };
    'Quest Created Success': {
        questId: string;
        questName: string;
    };
    'Quest Created Failure': {
        code: number;
    };
    'Quest Deactivated Success': {
        questId: string;
    };
    'Quest Deactivated Failure': {
        code: number;
        questId: string;
    };
    'Quest Activated Success': {
        questId: string;
    };
    'Quest Activated Failure': {
        code: number;
        questId: string;
    };
    'Quest List Success': {
        creatorAddress: string;
    };
    'Quest List Failure': {
        code: number;
        creatorAddress: string;
    };
};
export declare function createAnalyticsComponent(components: Pick<CliComponents, 'config' | 'logger' | 'fs'>): Promise<IAnalyticsComponent | {
    get(): Analytics;
    track: <T extends keyof Events>(eventName: T, eventProps: Events[T]) => void;
    stop(): Promise<void>;
}>;
