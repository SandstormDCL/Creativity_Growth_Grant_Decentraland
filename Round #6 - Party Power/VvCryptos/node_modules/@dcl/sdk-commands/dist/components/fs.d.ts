/// <reference types="node" />
/// <reference types="node" />
import * as fs from 'fs';
import * as fsPromises from 'fs/promises';
/**
 * @public
 *
 * This may be moved to well-known-components in the future
 */
export type IFileSystemComponent = Pick<typeof fs, 'createReadStream'> & Pick<typeof fs, 'createWriteStream'> & Pick<typeof fsPromises, 'access' | 'opendir' | 'stat' | 'unlink' | 'mkdir' | 'readFile' | 'writeFile' | 'rename' | 'rmdir' | 'appendFile' | 'rm'> & {
    constants: Pick<typeof fs.constants, 'F_OK' | 'R_OK'>;
} & {
    fileExists(path: string): Promise<boolean>;
    directoryExists(path: string): Promise<boolean>;
    readdir(path: string): Promise<string[]>;
};
/**
 * @public
 */
export declare function createFsComponent(): IFileSystemComponent;
