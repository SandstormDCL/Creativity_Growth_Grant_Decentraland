import { Router } from '@well-known-components/http-server';
import { Lifecycle } from '@well-known-components/interfaces';
import { CliComponents } from './components';
export interface dAppOptions {
    openBrowser: boolean;
    linkerPort?: number;
    isHttps: boolean;
    uri: string;
}
export declare function runDapp(cliComponents: Pick<CliComponents, 'fs' | 'logger' | 'fetch' | 'config'>, router: Router<object>, { isHttps, openBrowser, uri, linkerPort }: dAppOptions): Promise<{
    program: Lifecycle.ComponentBasedProgram<{
        config: import("@well-known-components/interfaces").IConfigComponent;
        logs: import("@well-known-components/interfaces").ILoggerComponent;
        server: import("@well-known-components/http-server").FullHttpServerComponent<object>;
        fs: import("./components/fs").IFileSystemComponent;
        fetch: import("./components/fetch").IFetchComponent;
        logger: import("@well-known-components/interfaces").ILoggerComponent.ILogger;
    }>;
}>;
