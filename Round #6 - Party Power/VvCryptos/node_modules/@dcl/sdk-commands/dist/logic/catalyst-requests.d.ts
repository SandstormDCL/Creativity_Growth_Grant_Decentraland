import { Entity } from '@dcl/schemas';
import { CliComponents } from '../components';
export type DAOCatalyst = {
    baseUrl: string;
    owner: string;
    id: string;
};
type CatalystInfo = {
    url: string;
    timestamp: number;
    entityId: string;
};
export type Network = 'mainnet' | 'sepolia';
export declare function daoCatalysts(components: Pick<CliComponents, 'fetch' | 'config'>, network: Network): Promise<Array<DAOCatalyst>>;
export declare function fetchEntityByPointer({ fetch }: Pick<CliComponents, 'fetch'>, baseUrl: string, pointers: string[]): Promise<{
    baseUrl: string;
    deployments: Entity[];
}>;
export declare function getPointers(components: Pick<CliComponents, 'fetch' | 'logger' | 'config'>, pointer: string, network: Network): Promise<CatalystInfo[]>;
export {};
