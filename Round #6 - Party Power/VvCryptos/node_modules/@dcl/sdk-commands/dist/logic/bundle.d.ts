import { Scene } from '@dcl/schemas';
import { CliComponents } from '../components';
export type BundleComponents = Pick<CliComponents, 'logger' | 'fs'>;
export type SceneJson = {
    main: string;
    runtimeVersion: string;
};
export type CompileOptions = {
    production: boolean;
    watch: boolean;
    single?: string;
    workingDirectory: string;
    emitDeclaration: boolean;
    ignoreComposite: boolean;
    customEntryPoint: boolean;
};
export declare function bundleProject(components: BundleComponents, options: CompileOptions, sceneJson: Scene): Promise<{
    sceneJson: Scene;
    inputs: {
        entrypoint: string;
        outputFile: string;
    }[];
}>;
type SingleProjectOptions = CompileOptions & {
    tsconfig: string;
    entrypoint: string;
    outputFile: string;
};
export declare function bundleSingleProject(components: BundleComponents, options: SingleProjectOptions): Promise<void>;
export {};
