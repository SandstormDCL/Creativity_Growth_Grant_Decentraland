"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFileSystemInterfaceFromFsComponent = exports.pathToPosix = void 0;
const path_1 = __importDefault(require("path"));
/**
 * Convert paths to posix stlye
 * .i.e: scene\\assets\\main.composite -> scene/assets/main.composite
 */
function pathToPosix(value) {
    return value.replace(/\\/g, '/');
}
exports.pathToPosix = pathToPosix;
function createFileSystemInterfaceFromFsComponent({ fs }) {
    return {
        dirname(value) {
            return pathToPosix(path_1.default.dirname(value));
        },
        basename(value) {
            return pathToPosix(path_1.default.basename(value));
        },
        join(...paths) {
            return path_1.default.join(...paths);
        },
        async existFile(filePath) {
            return fs.fileExists(filePath);
        },
        async readFile(filePath) {
            return fs.readFile(filePath);
        },
        async writeFile(filePath, content) {
            const folder = path_1.default.dirname(filePath);
            if (!(await fs.directoryExists(folder))) {
                await fs.mkdir(folder, { recursive: true });
            }
            await fs.writeFile(filePath, content);
        },
        async rm(filePath) {
            await fs.rm(filePath);
        },
        async readdir(dirPath) {
            if (dirPath.indexOf('/../') !== -1) {
                throw new Error('The usage of /../ is not allowed');
            }
            const root = dirPath === '.' || dirPath === './' || dirPath === '';
            const resolvedPath = root ? process.cwd() : dirPath;
            const result = await fs.readdir(resolvedPath);
            return Promise.all(result.map(async (name) => ({
                name: pathToPosix(name),
                isDirectory: await fs.directoryExists(path_1.default.resolve(dirPath, name))
            })));
        },
        cwd() {
            return pathToPosix(path_1.default.basename(process.cwd()));
        }
    };
}
exports.createFileSystemInterfaceFromFsComponent = createFileSystemInterfaceFromFsComponent;
//# sourceMappingURL=fs.js.map