#!/usr/bin/env node
"use strict";
/* istanbul ignore file */
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = require("./logic/error");
const components_1 = require("./components");
const log_1 = require("./components/log");
const run_command_1 = require("./run-command");
async function main() {
    const command = process.argv[2];
    const components = await (0, components_1.initComponents)();
    try {
        // pass on a list of arguments after the command itself
        const argv = process.argv.slice(3);
        await (0, run_command_1.runSdkCommand)(components, command, argv);
    }
    finally {
        await components.analytics.stop();
    }
    // rollup watcher leaves many open FSWatcher even in build mode. we must call
    // process.exit at this point to prevent the program halting forever
    process.exit(process.exitCode || 0);
}
main().catch(function handleError(err) {
    if (err instanceof error_1.CliError) {
        (0, log_1.writeToStderr)(log_1.colors.redBright('Error: ') + err.message);
    }
    else {
        // log with console to show stacktrace and debug information
        // eslint-disable-next-line no-console
        console.error(err);
        (0, log_1.writeToStderr)(`Developer: All errors thrown must be an instance of "CliError"` + err.stack);
    }
    // set an exit code but not finish the program immediately to close any pending work
    process.exit(process.exitCode ?? 1);
});
//# sourceMappingURL=index.js.map