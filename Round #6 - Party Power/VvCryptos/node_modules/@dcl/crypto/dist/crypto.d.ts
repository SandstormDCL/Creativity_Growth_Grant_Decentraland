/**
 * returns the publicKey for the privateKey with which the messageHash was signed
 * @param  {string} signature
 * @param  {string} hash
 */
export declare function recoverPublicKey(signature: Uint8Array, hash: Uint8Array): Uint8Array;
export declare function recoverAddressFromEthSignature(signature: Uint8Array | string, msg: string | Uint8Array): any;
export declare function sign(privateKey: Uint8Array, hash: Uint8Array): string;
export declare function createEthereumMessageHash(msg: string | Uint8Array): Uint8Array;
export declare function ethSign(privateKey: Uint8Array, message: Uint8Array | string): string;
export declare function computeAddress(key: Uint8Array): string;
/**
 * This method should not be used. It may use non-secure random number generators.
 */
export declare function createUnsafeIdentity(): {
    privateKey: string;
    publicKey: string;
    address: string;
};
