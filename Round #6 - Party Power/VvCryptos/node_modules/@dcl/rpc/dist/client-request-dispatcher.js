"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClientRequestDispatcher = void 0;
const minimal_1 = require("protobufjs/minimal");
let globalMessageNumber = 0;
function createClientRequestDispatcher(dispatcher) {
    // message_number -> future
    function nextMessageNumber() {
        const messageNumber = ++globalMessageNumber;
        if (globalMessageNumber > 0x01000000)
            globalMessageNumber = 0;
        return messageNumber;
    }
    return {
        dispatcher,
        async request(cb) {
            const messageNumber = nextMessageNumber();
            const binaryWriter = new minimal_1.Writer();
            cb(binaryWriter, messageNumber);
            // first add listener
            const promise = dispatcher.addOneTimeListener(messageNumber);
            // then send the signal
            dispatcher.transport.sendMessage(binaryWriter.finish());
            const { reader } = await promise;
            return reader;
        },
        nextMessageNumber,
    };
}
exports.createClientRequestDispatcher = createClientRequestDispatcher;
//# sourceMappingURL=client-request-dispatcher.js.map