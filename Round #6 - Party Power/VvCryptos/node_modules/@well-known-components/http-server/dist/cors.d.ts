import { Response } from 'node-fetch';
import { IHttpServerComponent } from '@well-known-components/interfaces';
export declare const corsHeaders: {
    'Access-Control-Allow-Origin': string;
    'Access-Control-Allow-Methods': string;
    'Access-Control-Max-Age': string;
    'Access-Control-Expose-Headers': string;
    'Access-Control-Allow-Headers': string;
};
export declare function handleOptions(): Response;
type CustomOrigin = (requestOrigin: string | undefined) => boolean;
export interface CorsOptions {
    /**
     * @default '*''
     */
    origin?: boolean | string | (string | RegExp)[] | CustomOrigin;
    /**
     * @default 'GET,HEAD,PUT,PATCH,POST,DELETE'
     */
    methods?: string[];
    allowedHeaders?: string[];
    exposedHeaders?: string[];
    credentials?: boolean;
    maxAge?: number;
    /**
     * @default false
     */
    preflightContinue?: boolean;
    /**
     * @default 204
     */
    optionsSuccessStatus?: number;
}
export declare function createCorsMiddleware<Context>(options: CorsOptions): IHttpServerComponent.IRequestHandler<Context>;
export {};
