import { IConfigComponent, IHttpServerComponent, IMetricsComponent } from '@well-known-components/interfaces';
declare const metrics: {
    http_request_duration_seconds: {
        type: "histogram";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
    http_requests_total: {
        type: "counter";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
    http_request_size_bytes: {
        type: "histogram";
        help: string;
        labelNames: readonly ["method", "handler", "code"];
    };
};
/**
 * @public
 */
export type HttpMetrics = keyof typeof metrics;
/**
 * @public
 */
export declare function getDefaultHttpMetrics(): IMetricsComponent.MetricsRecordDefinition<HttpMetrics>;
/**
 * @public
 */
export declare function instrumentHttpServerWithPromClientRegistry<K extends string>(options: {
    server: IHttpServerComponent<IHttpServerComponent.DefaultContext<any>>;
    config: IConfigComponent;
    metrics: IMetricsComponent<K | HttpMetrics>;
    registry: IMetricsComponent.Registry;
}): Promise<void>;
export {};
