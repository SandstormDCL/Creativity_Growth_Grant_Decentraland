{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.3",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@well-known-components/interfaces!",
  "docComment": "",
  "name": "@well-known-components/interfaces",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@well-known-components/interfaces!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!IAdapterHandler:type",
          "docComment": "/**\n * Base interface to normalize adapters\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IAdapterHandler<Context, ReturnType> = "
            },
            {
              "kind": "Content",
              "text": "(context: Context) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<ReturnType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IAdapterHandler",
          "typeParameters": [
            {
              "typeParameterName": "Context",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ReturnType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!IBaseComponent:interface",
          "docComment": "/**\n * Describes the lifecycle methods for all the components. Every component could extend this interface.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBaseComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "IBaseComponent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@well-known-components/interfaces!IBaseComponent#start:member",
              "docComment": "/**\n * starts the component, i.e. it connects the database or binds the port in a listener server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start?: "
                },
                {
                  "kind": "Content",
                  "text": "(startOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "IBaseComponent.ComponentStartOptions",
                  "canonicalReference": "@well-known-components/interfaces!IBaseComponent.ComponentStartOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@well-known-components/interfaces!IBaseComponent#stop:member",
              "docComment": "/**\n * finishes pending work and/or releases all the resources (connections, bound ports, open file descriptors)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stop?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!IBaseComponent:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace IBaseComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "IBaseComponent",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IBaseComponent.ComponentStartOptions:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ComponentStartOptions = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        started(): boolean;\n        live(): boolean;\n        getComponents(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ComponentStartOptions",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!ICacheComponent:interface",
          "docComment": "/**\n * Defines a simple interface for a generic key-value store.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICacheComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "ICacheComponent",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!ICacheComponent#get:member(1)",
              "docComment": "/**\n * Tries to get a value from the store. It returns null if no value is present\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!ICacheComponent#put:member(1)",
              "docComment": "/**\n * Puts a new value in the caché. \"put\", as in http, is expected to be an idempotent operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "put(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "put"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!IConfigComponent:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConfigComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "IConfigComponent",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IConfigComponent#getNumber:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNumber(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getNumber"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IConfigComponent#getString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getString(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getString"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IConfigComponent#requireNumber:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requireNumber(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "requireNumber"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IConfigComponent#requireString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requireString(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "requireString"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!IDatabase:interface",
          "docComment": "/**\n * Basic database interface.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDatabase "
            }
          ],
          "releaseTag": "Public",
          "name": "IDatabase",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IDatabase#query:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(sql: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDatabase.IQueryResult",
                  "canonicalReference": "@well-known-components/interfaces!IDatabase.IQueryResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sql",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "query"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!IDatabase:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace IDatabase "
            }
          ],
          "releaseTag": "Public",
          "name": "IDatabase",
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "@well-known-components/interfaces!IDatabase.IQueryResult:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface IQueryResult<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "> "
                }
              ],
              "releaseTag": "Public",
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "IQueryResult",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IDatabase.IQueryResult#rowCount:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rowCount: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "rowCount",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IDatabase.IQueryResult#rows:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rows: "
                    },
                    {
                      "kind": "Content",
                      "text": "T[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "rows",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!IFetchComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IFetchComponent = "
            },
            {
              "kind": "Content",
              "text": "{\n    fetch(url: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "@well-known-components/interfaces!Request:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "@well-known-components/interfaces!Response:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    fetch(url: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "@well-known-components/interfaces!Request:type"
            },
            {
              "kind": "Content",
              "text": ", init?: "
            },
            {
              "kind": "Reference",
              "text": "RequestOptions",
              "canonicalReference": "@well-known-components/interfaces!RequestOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "@well-known-components/interfaces!Response:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IFetchComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!ILoggerComponent:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ILoggerComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "ILoggerComponent",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!ILoggerComponent.ILogger:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ILogger = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        log(message: string, extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>): void;\n        error(error: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>): void;\n        debug(message: string, extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>): void;\n        info(message: string, extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>): void;\n        warn(message: string, extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>): void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ILogger",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 14
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!ILoggerComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ILoggerComponent = "
            },
            {
              "kind": "Content",
              "text": "{\n    getLogger(loggerName: string): "
            },
            {
              "kind": "Reference",
              "text": "ILoggerComponent.ILogger",
              "canonicalReference": "@well-known-components/interfaces!ILoggerComponent.ILogger:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ILoggerComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!IMetricsComponent:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IMetricsComponent<K extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IMetricsComponent",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#decrement:member(1)",
              "docComment": "/**\n * Decrements the metric by (value default=1) units.\n *\n * Works with: Gauge\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decrement(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", labels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Labels",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "labels",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "decrement"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#getValue:member(1)",
              "docComment": "/**\n * Gets the current value of a metric\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getValue(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.ExportedMetricData",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.ExportedMetricData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getValue"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#increment:member(1)",
              "docComment": "/**\n * Increments the metric by (value default=1) units.\n *\n * Works with: Counter, Gauge\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "increment(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", labels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Labels",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "labels",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "increment"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#observe:member(1)",
              "docComment": "/**\n * Observes a single value.\n *\n * Works with: Gauge, Summary, Histogram\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "observe(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", labels: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Labels",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "labels",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "observe"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#registry:member",
              "docComment": "/**\n * Optional registry component, this will be used to expose the metrics for pulling (for example, for prometheus)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registry?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Registry",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Registry:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "registry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#reset:member(1)",
              "docComment": "/**\n * Resets the metric.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reset(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "reset"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#resetAll:member(1)",
              "docComment": "/**\n * Resets all metrics.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetAll(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resetAll"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent#startTimer:member(1)",
              "docComment": "/**\n * startTimer returns an object with an \"end\" function that must be called at the end of the measurement.\n *\n * Labels are merged at the end.\n *\n * Works with: Gauge, Histogram, Summary\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startTimer(metricName: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", labels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Labels",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        end: (endLabels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMetricsComponent.Labels",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metricName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "labels",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "startTimer"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!IMetricsComponent:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace IMetricsComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "IMetricsComponent",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterMetricDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type CounterMetricDefinition = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "CounterType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterType:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        help: string;\n        labelNames?: string[] | readonly string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "CounterMetricDefinition",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterType:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type CounterType = "
                },
                {
                  "kind": "Content",
                  "text": "\"counter\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "CounterType",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterType:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CounterType: "
                },
                {
                  "kind": "Reference",
                  "text": "CounterType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterType:type"
                }
              ],
              "releaseTag": "Public",
              "name": "CounterType",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.ExportedMetricData:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ExportedMetricData = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        help: string;\n        name: string;\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "MetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.MetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": "[\"type\"];\n        values: any[];\n        aggregator: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ExportedMetricData",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeMetricDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type GaugeMetricDefinition = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "GaugeType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeType:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        help: string;\n        labelNames?: string[] | readonly string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "GaugeMetricDefinition",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeType:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type GaugeType = "
                },
                {
                  "kind": "Content",
                  "text": "\"gauge\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "GaugeType",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeType:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "GaugeType: "
                },
                {
                  "kind": "Reference",
                  "text": "GaugeType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeType:type"
                }
              ],
              "releaseTag": "Public",
              "name": "GaugeType",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramMetricDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type HistogramMetricDefinition = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "HistogramType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramType:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        help: string;\n        labelNames?: string[] | readonly string[];\n        buckets?: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "HistogramMetricDefinition",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramType:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type HistogramType = "
                },
                {
                  "kind": "Content",
                  "text": "\"histogram\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "HistogramType",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramType:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HistogramType: "
                },
                {
                  "kind": "Reference",
                  "text": "HistogramType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramType:type"
                }
              ],
              "releaseTag": "Public",
              "name": "HistogramType",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Labels:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Labels = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Labels",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.MetricDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type MetricDefinition = "
                },
                {
                  "kind": "Reference",
                  "text": "GaugeMetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.GaugeMetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CounterMetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.CounterMetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "HistogramMetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.HistogramMetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SummaryMetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryMetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "MetricDefinition",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.MetricsRecordDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type MetricsRecordDefinition<K extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, "
                },
                {
                  "kind": "Reference",
                  "text": "MetricDefinition",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.MetricDefinition:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "MetricsRecordDefinition",
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.Registry:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type Registry = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        contentType: string;\n        metrics(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Registry",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryMetricDefinition:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type SummaryMetricDefinition = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "SummaryType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryType:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        help: string;\n        labelNames?: string[] | readonly string[];\n        percentiles?: number[];\n        maxAgeSeconds?: number;\n        ageBuckets?: number;\n        compressCount?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SummaryMetricDefinition",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryType:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type SummaryType = "
                },
                {
                  "kind": "Content",
                  "text": "\"summary\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SummaryType",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryType:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SummaryType: "
                },
                {
                  "kind": "Reference",
                  "text": "SummaryType",
                  "canonicalReference": "@well-known-components/interfaces!IMetricsComponent.SummaryType:type"
                }
              ],
              "releaseTag": "Public",
              "name": "SummaryType",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!IMiddlewareAdapterHandler:type",
          "docComment": "/**\n * Base interface to normalize adapters that accept middlewares\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IMiddlewareAdapterHandler<Context, ReturnType> = "
            },
            {
              "kind": "Content",
              "text": "(context: Context, next: () => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<ReturnType>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<ReturnType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IMiddlewareAdapterHandler",
          "typeParameters": [
            {
              "typeParameterName": "Context",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ReturnType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!IRolloutComponent:namespace",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace IRolloutComponent "
            }
          ],
          "releaseTag": "Beta",
          "name": "IRolloutComponent",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.FallbackFunction:type",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type FallbackFunction = "
                },
                {
                  "kind": "Content",
                  "text": "(name: string, context: "
                },
                {
                  "kind": "Reference",
                  "text": "RolloutContext",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.RolloutContext:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "FallbackFunction",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Override:interface",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Override "
                }
              ],
              "releaseTag": "Beta",
              "name": "Override",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Override#contextName:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "contextName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "contextName",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Override#values:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "values: "
                    },
                    {
                      "kind": "Reference",
                      "text": "String",
                      "canonicalReference": "!String:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "values",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Payload:interface",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Payload "
                }
              ],
              "releaseTag": "Beta",
              "name": "Payload",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Payload#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PayloadType",
                      "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.PayloadType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Payload#value:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "value: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "value",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.PayloadType:enum",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enum PayloadType "
                }
              ],
              "releaseTag": "Beta",
              "name": "PayloadType",
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.PayloadType.STRING:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "STRING = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"string\""
                    }
                  ],
                  "releaseTag": "Beta",
                  "name": "STRING",
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.RolloutContext:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type RolloutContext = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        userId?: string;\n        sessionId?: string;\n        remoteAddress?: string;\n        environment?: string;\n        appName?: string;\n        properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number | undefined>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "RolloutContext",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant:interface",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Variant "
                }
              ],
              "releaseTag": "Beta",
              "name": "Variant",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant#enabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "enabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant#name:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant#payload:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "payload?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Payload",
                      "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Payload:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Beta",
                  "name": "payload",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.VariantDefinition:interface",
              "docComment": "/**\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface VariantDefinition "
                }
              ],
              "releaseTag": "Beta",
              "name": "VariantDefinition",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.VariantDefinition#name:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.VariantDefinition#overrides:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "overrides: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Override",
                      "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Override:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "overrides",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.VariantDefinition#payload:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "payload: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Payload",
                      "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Payload:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "payload",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.VariantDefinition#weight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "weight: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Beta",
                  "name": "weight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!IRolloutComponent:type",
          "docComment": "/**\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IRolloutComponent = "
            },
            {
              "kind": "Content",
              "text": "{\n    isEnabled(name: string, context: "
            },
            {
              "kind": "Reference",
              "text": "IRolloutComponent.RolloutContext",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.RolloutContext:type"
            },
            {
              "kind": "Content",
              "text": ", fallbackFunction?: "
            },
            {
              "kind": "Reference",
              "text": "IRolloutComponent.FallbackFunction",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.FallbackFunction:type"
            },
            {
              "kind": "Content",
              "text": "): boolean;\n    getVariant(name: string, context: "
            },
            {
              "kind": "Reference",
              "text": "IRolloutComponent.RolloutContext",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.RolloutContext:type"
            },
            {
              "kind": "Content",
              "text": ", fallbackVariant?: "
            },
            {
              "kind": "Reference",
              "text": "IRolloutComponent.Variant",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IRolloutComponent.Variant",
              "canonicalReference": "@well-known-components/interfaces!IRolloutComponent.Variant:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Beta",
          "name": "IRolloutComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!ISlackComponent:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISlackComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "ISlackComponent",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!ISlackComponent#sendMessage:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendMessage(markdown: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "markdown",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "sendMessage"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@well-known-components/interfaces!IStatusCheckCapableComponent:interface",
          "docComment": "/**\n * More info: https://andrewlock.net/deploying-asp-net-core-applications-to-kubernetes-part-6-adding-health-checks-with-liveness-readiness-and-startup-probes/\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IStatusCheckCapableComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "IStatusCheckCapableComponent",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IStatusCheckCapableComponent#readynessProbe:member(1)",
              "docComment": "/**\n * Readiness probes indicate whether your application is ready to handle requests. It could be that your application is alive, but that it just can't handle HTTP traffic. In that case, Kubernetes won't kill the container, but it will stop sending it requests. In practical terms, that means the pod is removed from an associated service's \"pool\" of pods that are handling requests, by marking the pod as \"Unready\".\n *\n * IMPORTANT: This method should return as soon as possible, not wait for completion.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readynessProbe?(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "readynessProbe"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@well-known-components/interfaces!IStatusCheckCapableComponent#startupProbe:member(1)",
              "docComment": "/**\n * The first probe to run is the Startup probe. When your app starts up, it might need to do a lot of work. It might need to fetch data from remote services, load dlls from plugins, who knows what else. During that process, your app should either not respond to requests, or if it does, it should return a status code of 400 or higher. Once the startup process has finished, you can switch to returning a success result (200) for the startup probe.\n *\n * IMPORTANT: This method should return as soon as possible, not wait for completion.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startupProbe?(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "startupProbe"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!ITracerComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ITracerComponent = "
            },
            {
              "kind": "Content",
              "text": "{\n    span<T>(name: string, tracedFunction: () => T, traceContext?: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TraceContext",
              "canonicalReference": "@well-known-components/interfaces!TraceContext:type"
            },
            {
              "kind": "Content",
              "text": ", \"id\" | \"data\" | \"name\">): T;\n    isInsideOfTraceSpan(): boolean;\n    getSpanId(): string;\n    getTrace(): "
            },
            {
              "kind": "Reference",
              "text": "Trace",
              "canonicalReference": "@well-known-components/interfaces!Trace:type"
            },
            {
              "kind": "Content",
              "text": ";\n    getTraceString(): string;\n    getTraceChild(): "
            },
            {
              "kind": "Reference",
              "text": "Trace",
              "canonicalReference": "@well-known-components/interfaces!Trace:type"
            },
            {
              "kind": "Content",
              "text": ";\n    getTraceChildString(): string;\n    getTraceState(): "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TraceState",
              "canonicalReference": "@well-known-components/interfaces!TraceState:type"
            },
            {
              "kind": "Content",
              "text": " | null>;\n    getTraceStateString(): string | undefined;\n    getContextData<T>(): "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<T | null>;\n    setContextData<T = any>(data: T): void;\n    setTraceStateProperty(key: string, value: string): void;\n    deleteTraceStateProperty(key: string): void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ITracerComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@well-known-components/interfaces!Lifecycle:namespace",
          "docComment": "/**\n * This namespace handles the basic lifecycle of the components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace Lifecycle "
            }
          ],
          "releaseTag": "Public",
          "name": "Lifecycle",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!Lifecycle.ComponentBasedProgram:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ComponentBasedProgram<Components> = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        stop(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>;\n        readonly components: Components;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ComponentBasedProgram",
              "typeParameters": [
                {
                  "typeParameterName": "Components",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!Lifecycle.EntryPointParameters:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type EntryPointParameters<Components> = "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentBasedProgram",
                  "canonicalReference": "@well-known-components/interfaces!Lifecycle.ComponentBasedProgram:type"
                },
                {
                  "kind": "Content",
                  "text": "<Components> & {\n        startComponents(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "EntryPointParameters",
              "typeParameters": [
                {
                  "typeParameterName": "Components",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@well-known-components/interfaces!Lifecycle.ProgramConfig:type",
              "docComment": "/**\n * Program lifecycle configurations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ProgramConfig<Components> = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        main: (program: "
                },
                {
                  "kind": "Reference",
                  "text": "EntryPointParameters",
                  "canonicalReference": "@well-known-components/interfaces!Lifecycle.EntryPointParameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<Components>) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>;\n        initComponents: () => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<Components>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ProgramConfig",
              "typeParameters": [
                {
                  "typeParameterName": "Components",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@well-known-components/interfaces!Lifecycle.programEntryPoint:function(1)",
              "docComment": "/**\n * Program entry point, this should be the one and only top level expression of your program.\n *\n * @deprecated\n *\n * Lifecycle.programEntryPoint is deprecated, please use Lifecycle.run()\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function programEntryPoint<Components extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(config: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        main: (components: Components) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>;\n        initComponents: () => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<Components>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComponentBasedProgram",
                  "canonicalReference": "@well-known-components/interfaces!Lifecycle.ComponentBasedProgram:type"
                },
                {
                  "kind": "Content",
                  "text": "<Components>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Components",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "programEntryPoint"
            },
            {
              "kind": "Function",
              "canonicalReference": "@well-known-components/interfaces!Lifecycle.run:function(1)",
              "docComment": "/**\n * Program entry point, this should be the one and only top level expression of your program.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function run<Components extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ProgramConfig",
                  "canonicalReference": "@well-known-components/interfaces!Lifecycle.ProgramConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<Components>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PromiseLike",
                  "canonicalReference": "!PromiseLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ComponentBasedProgram",
                  "canonicalReference": "@well-known-components/interfaces!Lifecycle.ComponentBasedProgram:type"
                },
                {
                  "kind": "Content",
                  "text": "<Components>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Components",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "run"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!RequestOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RequestOptions = "
            },
            {
              "kind": "Content",
              "text": "fetch."
            },
            {
              "kind": "Reference",
              "text": "RequestInit",
              "canonicalReference": "@types/node-fetch!RequestInit:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    abortController?: "
            },
            {
              "kind": "Reference",
              "text": "AbortController",
              "canonicalReference": "!AbortController:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    timeout?: number;\n    attempts?: number;\n    retryDelay?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!Trace:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Trace = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TraceContext",
              "canonicalReference": "@well-known-components/interfaces!TraceContext:type"
            },
            {
              "kind": "Content",
              "text": ", \"traceId\" | \"version\" | \"parentId\" | \"traceFlags\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Trace",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!TraceContext:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TraceContext<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    name: string;\n    version: number;\n    traceId: string;\n    parentId: string;\n    traceFlags: number;\n    traceState?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string>;\n    data: T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TraceContext",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@well-known-components/interfaces!TraceState:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TraceState = "
            },
            {
              "kind": "Reference",
              "text": "Required",
              "canonicalReference": "!Required:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TraceContext",
              "canonicalReference": "@well-known-components/interfaces!TraceContext:type"
            },
            {
              "kind": "Content",
              "text": ", \"traceState\">>[\"traceState\"]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TraceState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        }
      ]
    }
  ]
}
