{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.12.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "typed-url-params!",
  "docComment": "",
  "name": "typed-url-params",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "typed-url-params!",
      "name": "",
      "members": [
        {
          "kind": "Namespace",
          "canonicalReference": "typed-url-params!ParseUrlParams:namespace",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ParseUrlParams "
            }
          ],
          "releaseTag": "Public",
          "name": "ParseUrlParams",
          "members": [
            {
              "kind": "TypeAlias",
              "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type AddKeyValue<Memo extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ", Key extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", Value extends "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Content",
                  "text": "Memo & {\n        [K in Key]: Value;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "AddKeyValue",
              "typeParameters": [
                {
                  "typeParameterName": "Memo",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "Value",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "typed-url-params!ParseUrlParams.AddOptionalKeyValue:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type AddOptionalKeyValue<Memo extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ", Key extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", Value extends "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Content",
                  "text": "Memo & {\n        [K in Key]?: Value;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "AddOptionalKeyValue",
              "typeParameters": [
                {
                  "typeParameterName": "Memo",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "Key",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "Value",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "typed-url-params!ParseUrlParams.AddUrlSection:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type AddUrlSection<State extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", Memo extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any> "
                },
                {
                  "kind": "Content",
                  "text": "= "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Content",
                  "text": "string extends State ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParserError",
                  "canonicalReference": "typed-url-params!ParseUrlParams.ParserError:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"AddUrlSection got generic string type\"> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}/` ? "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}*${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddOptionalKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddOptionalKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string[]>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}/${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}+${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string[]>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}?${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddOptionalKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddOptionalKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}.${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}-${infer Rest}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<Rest, "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string>> : "
                },
                {
                  "kind": "Reference",
                  "text": "CleanKey",
                  "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type"
                },
                {
                  "kind": "Content",
                  "text": "<State> extends `${infer Key}` ? "
                },
                {
                  "kind": "Reference",
                  "text": "AddKeyValue",
                  "canonicalReference": "typed-url-params!ParseUrlParams.AddKeyValue:type"
                },
                {
                  "kind": "Content",
                  "text": "<Memo, Key, string> : "
                },
                {
                  "kind": "Reference",
                  "text": "ParseUrlParams",
                  "canonicalReference": "typed-url-params!ParseUrlParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<`AddUrlSection returned unexpected value for: ${State}`>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "AddUrlSection",
              "typeParameters": [
                {
                  "typeParameterName": "State",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "Memo",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 8,
                "endIndex": 57
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "typed-url-params!ParseUrlParams.CleanKey:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type CleanKey<State extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Content",
                  "text": "string extends State ? "
                },
                {
                  "kind": "Reference",
                  "text": "ParserError",
                  "canonicalReference": "typed-url-params!ParseUrlParams.ParserError:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"CleanKey got generic string type\"> : State extends `${infer Key}(${infer _})${infer Rest}` ? `${Key}${Rest}` : State"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "CleanKey",
              "typeParameters": [
                {
                  "typeParameterName": "State",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "typed-url-params!ParseUrlParams.ParserError:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type ParserError<T extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "> = "
                },
                {
                  "kind": "Content",
                  "text": "{\n        error: true;\n    } & T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ParserError",
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "typeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "typed-url-params!ParseUrlParams:type",
          "docComment": "/**\n * Creates object types compliant with https://github.com/pillarjs/path-to-regexp and Express.js\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ParseUrlParams<State extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", Memo extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any> "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "string extends State ? "
            },
            {
              "kind": "Reference",
              "text": "ParseUrlParams.ParserError",
              "canonicalReference": "typed-url-params!ParseUrlParams.ParserError:type"
            },
            {
              "kind": "Content",
              "text": "<\"ParseUrlParams got generic string type\"> : State extends `${infer _}:${infer Rest}` ? "
            },
            {
              "kind": "Reference",
              "text": "ParseUrlParams.AddUrlSection",
              "canonicalReference": "typed-url-params!ParseUrlParams.AddUrlSection:type"
            },
            {
              "kind": "Content",
              "text": "<Rest, Memo> : Memo"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ParseUrlParams",
          "typeParameters": [
            {
              "typeParameterName": "State",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Memo",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          }
        }
      ]
    }
  ]
}
