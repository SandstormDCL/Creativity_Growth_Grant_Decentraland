import { JSONSchema, ValidateFunction } from '../../validation';
import { KeywordDefinition } from 'ajv';
/**
 * MappingType
 * @alpha
 */
export declare enum MappingType {
    SINGLE = "single",
    ANY = "any",
    MULTIPLE = "multiple",
    RANGE = "range"
}
/**
 * Mapping
 * @alpha
 */
export type Mapping = SingleMapping | AnyMapping | RangeMapping | MultipleMapping;
/**
 * SingleMapping
 * @alpha
 */
export type SingleMapping = {
    type: MappingType.SINGLE;
    id: string;
};
/**
 * AnyMapping
 * @alpha
 */
export type AnyMapping = {
    type: MappingType.ANY;
};
/**
 * RangeMapping
 * @alpha
 */
export type RangeMapping = {
    type: MappingType.RANGE;
    from: string;
    to: string;
};
/**
 * MultipleMapping
 * @alpha
 */
export type MultipleMapping = {
    type: MappingType.MULTIPLE;
    ids: string[];
};
/**
 * SingleMapping
 * @alpha
 */
export declare namespace SingleMapping {
    const schema: JSONSchema<SingleMapping>;
    const validate: ValidateFunction<Mapping>;
}
/**
 * AnyMapping
 * @alpha
 */
export declare namespace AnyMapping {
    const schema: JSONSchema<AnyMapping>;
    const validate: ValidateFunction<Mapping>;
}
/**
 * RangeMapping
 * @alpha
 */
export declare namespace RangeMapping {
    const _fromLessThanOrEqualTo: KeywordDefinition;
    const schema: JSONSchema<RangeMapping>;
    const validate: ValidateFunction<Mapping>;
}
/**
 * MultipleMapping
 * @alpha
 */
export declare namespace MultipleMapping {
    const schema: JSONSchema<MultipleMapping>;
    const validate: ValidateFunction<Mapping>;
}
/**
 * Mappings
 * @alpha
 */
export declare namespace Mapping {
    const schema: JSONSchema<Mapping>;
    const validate: ValidateFunction<Mapping>;
}
//# sourceMappingURL=linked-wearable-props.d.ts.map